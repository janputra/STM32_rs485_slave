ARM GAS  /tmp/cczjtYZB.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.task_timer,"ax",%progbits
  16              		.align	1
  17              		.global	task_timer
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	task_timer:
  25              	.LFB67:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "message.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/cczjtYZB.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** uint8_t f_busy;
  48:Core/Src/main.c **** uint8_t f_timer_10ms=0;
  49:Core/Src/main.c **** uint8_t f_timer_30ms=0;
  50:Core/Src/main.c **** uint8_t d_timer_30ms;
  51:Core/Src/main.c **** uint8_t key_value;
  52:Core/Src/main.c **** uint8_t curr_event;
  53:Core/Src/main.c **** //uint8_t bufferEvent[64];
  54:Core/Src/main.c **** uint8_t read_res;
  55:Core/Src/main.c **** uint8_t rx_temp;
  56:Core/Src/main.c **** uint8_t transmission_f;
  57:Core/Src/main.c **** uint8_t start_cmd=0x2;
  58:Core/Src/main.c **** uint8_t stop_cmd=0x3;
  59:Core/Src/main.c **** circular_buffer rx_buffer;
  60:Core/Src/main.c **** circular_buffer event_buffer;
  61:Core/Src/main.c **** uint8_t ID;
  62:Core/Src/main.c **** uint8_t TX_msg[4];
  63:Core/Src/main.c **** uint8_t RX_msg[4];
  64:Core/Src/main.c **** uint8_t state,event;
  65:Core/Src/main.c **** int digit;
  66:Core/Src/main.c **** uint8_t seven_segment_table[17] = {	0b0111111,	// '0'
  67:Core/Src/main.c **** 		                            	 0b0000110,	// '1'
  68:Core/Src/main.c **** 		   	                           0b1011011,	// '2'
  69:Core/Src/main.c **** 			                             0b1001111,	// '3'
  70:Core/Src/main.c **** 			                             0b1100110,	// '4'
  71:Core/Src/main.c ****                                    0b1101101,	// '5'
  72:Core/Src/main.c ****                                    0b1111101,	// '6'
  73:Core/Src/main.c ****                                    0b0000111,	// '7'
  74:Core/Src/main.c **** 			                             0b1111111,	// '8'
  75:Core/Src/main.c ****                                    0b1101111,	// '9'
  76:Core/Src/main.c ****                                    0b1011111,	// 'a'  --10
  77:Core/Src/main.c ****                                    0b1111100,	// 'b'  --11
  78:Core/Src/main.c **** 			                             0b1011000,	// 'c'  --14
  79:Core/Src/main.c ****                                    0b1011110,	// 'd'  --13
  80:Core/Src/main.c ****                                    0b1111011,	// 'e'	--14
  81:Core/Src/main.c ****                                    0b1110001,	// 'f'  --15
  82:Core/Src/main.c ****                                    0b1000000 	// '-'  --16
  83:Core/Src/main.c **** };
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* USER CODE END PV */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/cczjtYZB.s 			page 3


  90:Core/Src/main.c **** void SystemClock_Config(void);
  91:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  92:Core/Src/main.c **** void task_timer(void);
  93:Core/Src/main.c **** void seven_segment_display(char input);
  94:Core/Src/main.c **** void key_read_task(void);
  95:Core/Src/main.c **** void main_task(void);
  96:Core/Src/main.c **** void RS485_Send_Message(void);
  97:Core/Src/main.c **** uint8_t RS485_Read_Message(void);
  98:Core/Src/main.c **** /* USER CODE END PFP */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 101:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* USER CODE END 0 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /**
 106:Core/Src/main.c ****   * @brief  The application entry point.
 107:Core/Src/main.c ****   * @retval int
 108:Core/Src/main.c ****   */
 109:Core/Src/main.c **** int main(void)
 110:Core/Src/main.c **** {
 111:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END 1 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 118:Core/Src/main.c ****   HAL_Init();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END Init */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Configure the system clock */
 125:Core/Src/main.c ****   SystemClock_Config();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END SysInit */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Initialize all configured peripherals */
 132:Core/Src/main.c ****   MX_GPIO_Init();
 133:Core/Src/main.c ****   MX_TIM1_Init();
 134:Core/Src/main.c ****   MX_USART1_UART_Init();
 135:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 136:Core/Src/main.c ****   
 137:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);  
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****  	HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 140:Core/Src/main.c ****   /* USER CODE END 2 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Infinite loop */
 143:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 144:Core/Src/main.c **** #ifdef SLAVE_1
 145:Core/Src/main.c ****                 
 146:Core/Src/main.c ****   ID =0x1;
ARM GAS  /tmp/cczjtYZB.s 			page 4


 147:Core/Src/main.c **** #endif
 148:Core/Src/main.c **** #ifdef SLAVE_2
 149:Core/Src/main.c ****                 
 150:Core/Src/main.c ****   ID=0x2;
 151:Core/Src/main.c **** #endif
 152:Core/Src/main.c ****   state = STATE_WAITING_REQUEST;
 153:Core/Src/main.c ****   event = EVENT_RESET;
 154:Core/Src/main.c ****   digit=16;
 155:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   while (1)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     /* USER CODE END WHILE */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 162:Core/Src/main.c ****      
 163:Core/Src/main.c ****       
 164:Core/Src/main.c ****       task_timer();
 165:Core/Src/main.c ****       key_read_task();
 166:Core/Src/main.c ****       main_task();
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c ****   /* USER CODE END 3 */
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief System Clock Configuration
 173:Core/Src/main.c ****   * @retval None
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c **** void SystemClock_Config(void)
 176:Core/Src/main.c **** {
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 181:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****     Error_Handler();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 203:Core/Src/main.c **** 
ARM GAS  /tmp/cczjtYZB.s 			page 5


 204:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** void task_timer(void)
 213:Core/Src/main.c **** {
  27              		.loc 1 213 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 214:Core/Src/main.c ****   if (!f_timer_10ms) return;
  32              		.loc 1 214 3 view .LVU1
  33              		.loc 1 214 7 is_stmt 0 view .LVU2
  34 0000 0A4B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36              		.loc 1 214 6 view .LVU3
  37 0004 4BB1     		cbz	r3, .L1
 215:Core/Src/main.c ****   f_timer_10ms=0;
  38              		.loc 1 215 3 is_stmt 1 view .LVU4
  39              		.loc 1 215 15 is_stmt 0 view .LVU5
  40 0006 094B     		ldr	r3, .L4
  41 0008 0022     		movs	r2, #0
  42 000a 1A70     		strb	r2, [r3]
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   d_timer_30ms++;
  43              		.loc 1 217 3 is_stmt 1 view .LVU6
  44              		.loc 1 217 15 is_stmt 0 view .LVU7
  45 000c 084A     		ldr	r2, .L4+4
  46 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  47 0010 0133     		adds	r3, r3, #1
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 1370     		strb	r3, [r2]
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   if(d_timer_30ms==3){
  50              		.loc 1 219 3 is_stmt 1 view .LVU8
  51              		.loc 1 219 5 is_stmt 0 view .LVU9
  52 0016 032B     		cmp	r3, #3
  53 0018 00D0     		beq	.L3
  54              	.L1:
 220:Core/Src/main.c ****     d_timer_30ms =0;
 221:Core/Src/main.c ****     f_timer_30ms=1;
 222:Core/Src/main.c ****     
 223:Core/Src/main.c ****     
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c ****   
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** }
  55              		.loc 1 227 1 view .LVU10
  56 001a 7047     		bx	lr
  57              	.L3:
 220:Core/Src/main.c ****     d_timer_30ms =0;
  58              		.loc 1 220 5 is_stmt 1 view .LVU11
ARM GAS  /tmp/cczjtYZB.s 			page 6


 220:Core/Src/main.c ****     d_timer_30ms =0;
  59              		.loc 1 220 18 is_stmt 0 view .LVU12
  60 001c 1346     		mov	r3, r2
  61 001e 0022     		movs	r2, #0
  62 0020 1A70     		strb	r2, [r3]
 221:Core/Src/main.c ****     
  63              		.loc 1 221 5 is_stmt 1 view .LVU13
 221:Core/Src/main.c ****     
  64              		.loc 1 221 17 is_stmt 0 view .LVU14
  65 0022 044B     		ldr	r3, .L4+8
  66 0024 0122     		movs	r2, #1
  67 0026 1A70     		strb	r2, [r3]
  68 0028 F7E7     		b	.L1
  69              	.L5:
  70 002a 00BF     		.align	2
  71              	.L4:
  72 002c 00000000 		.word	.LANCHOR0
  73 0030 00000000 		.word	.LANCHOR1
  74 0034 00000000 		.word	.LANCHOR2
  75              		.cfi_endproc
  76              	.LFE67:
  78              		.section	.text.seven_segment_display,"ax",%progbits
  79              		.align	1
  80              		.global	seven_segment_display
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	seven_segment_display:
  87              	.LVL0:
  88              	.LFB68:
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** void seven_segment_display(char input)
 230:Core/Src/main.c **** {
  89              		.loc 1 230 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 231:Core/Src/main.c ****    uint32_t mask =  a_Pin|b_Pin|c_Pin|d_Pin|e_Pin|f_Pin|g_Pin;
  94              		.loc 1 231 4 view .LVU16
 232:Core/Src/main.c ****    uint32_t val = (uint32_t)input & mask;
  95              		.loc 1 232 4 view .LVU17
  96              		.loc 1 232 13 is_stmt 0 view .LVU18
  97 0000 00F07F00 		and	r0, r0, #127
  98              	.LVL1:
 233:Core/Src/main.c ****    SEGMENT_PORT->ODR = val;
  99              		.loc 1 233 4 is_stmt 1 view .LVU19
 100              		.loc 1 233 22 is_stmt 0 view .LVU20
 101 0004 014B     		ldr	r3, .L7
 102 0006 D860     		str	r0, [r3, #12]
 234:Core/Src/main.c **** }
 103              		.loc 1 234 1 view .LVU21
 104 0008 7047     		bx	lr
 105              	.L8:
 106 000a 00BF     		.align	2
 107              	.L7:
ARM GAS  /tmp/cczjtYZB.s 			page 7


 108 000c 00080140 		.word	1073809408
 109              		.cfi_endproc
 110              	.LFE68:
 112              		.section	.text.key_read_task,"ax",%progbits
 113              		.align	1
 114              		.global	key_read_task
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu softvfp
 120              	key_read_task:
 121              	.LFB69:
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** void key_read_task(void)
 237:Core/Src/main.c **** {
 122              		.loc 1 237 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126 0000 08B5     		push	{r3, lr}
 127              	.LCFI0:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 3, -8
 130              		.cfi_offset 14, -4
 238:Core/Src/main.c ****   if(!f_timer_30ms) return;
 131              		.loc 1 238 3 view .LVU23
 132              		.loc 1 238 6 is_stmt 0 view .LVU24
 133 0002 114B     		ldr	r3, .L15
 134 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 135              		.loc 1 238 5 view .LVU25
 136 0006 A3B1     		cbz	r3, .L9
 239:Core/Src/main.c ****   f_timer_30ms =0; 
 137              		.loc 1 239 3 is_stmt 1 view .LVU26
 138              		.loc 1 239 16 is_stmt 0 view .LVU27
 139 0008 0F4B     		ldr	r3, .L15
 140 000a 0022     		movs	r2, #0
 141 000c 1A70     		strb	r2, [r3]
 240:Core/Src/main.c ****    
 241:Core/Src/main.c ****  
 242:Core/Src/main.c ****   unsigned char key_pindata = (uint8_t)(key_GPIO_Port->IDR & key_Pin);
 142              		.loc 1 242 3 is_stmt 1 view .LVU28
 143              		.loc 1 242 54 is_stmt 0 view .LVU29
 144 000e 0F4B     		ldr	r3, .L15+4
 145 0010 9A68     		ldr	r2, [r3, #8]
 146              	.LVL2:
 243:Core/Src/main.c ****  
 244:Core/Src/main.c ****   key_value = key_value<<1;
 147              		.loc 1 244 3 is_stmt 1 view .LVU30
 148              		.loc 1 244 24 is_stmt 0 view .LVU31
 149 0012 0F49     		ldr	r1, .L15+8
 150 0014 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 151 0016 5B00     		lsls	r3, r3, #1
 152 0018 DBB2     		uxtb	r3, r3
 153              		.loc 1 244 13 view .LVU32
 154 001a 0B70     		strb	r3, [r1]
 245:Core/Src/main.c ****   key_value &= 0b00001110;
 155              		.loc 1 245 3 is_stmt 1 view .LVU33
ARM GAS  /tmp/cczjtYZB.s 			page 8


 156              		.loc 1 245 13 is_stmt 0 view .LVU34
 157 001c 03F00E03 		and	r3, r3, #14
 158 0020 0B70     		strb	r3, [r1]
 246:Core/Src/main.c ****   key_value |= key_pindata&0X1;
 159              		.loc 1 246 3 is_stmt 1 view .LVU35
 160              		.loc 1 246 27 is_stmt 0 view .LVU36
 161 0022 02F00102 		and	r2, r2, #1
 162              	.LVL3:
 163              		.loc 1 246 13 view .LVU37
 164 0026 1343     		orrs	r3, r3, r2
 165 0028 0B70     		strb	r3, [r1]
 247:Core/Src/main.c ****  
 248:Core/Src/main.c ****   if (key_value==KEY_PRESSED){
 166              		.loc 1 248 3 is_stmt 1 view .LVU38
 167              		.loc 1 248 6 is_stmt 0 view .LVU39
 168 002a 0C2B     		cmp	r3, #12
 169 002c 02D0     		beq	.L13
 249:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 250:Core/Src/main.c ****       
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   }else if(key_value==KEY_RELEASED){
 170              		.loc 1 252 9 is_stmt 1 view .LVU40
 171              		.loc 1 252 11 is_stmt 0 view .LVU41
 172 002e 032B     		cmp	r3, #3
 173 0030 05D0     		beq	.L14
 174              	.L9:
 253:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_RELEASED);
 254:Core/Src/main.c ****   }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** }
 175              		.loc 1 256 1 view .LVU42
 176 0032 08BD     		pop	{r3, pc}
 177              	.L13:
 249:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 178              		.loc 1 249 7 is_stmt 1 view .LVU43
 179 0034 0121     		movs	r1, #1
 180 0036 0748     		ldr	r0, .L15+12
 181 0038 FFF7FEFF 		bl	buffer_push
 182              	.LVL4:
 183 003c F9E7     		b	.L9
 184              	.L14:
 253:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_RELEASED);
 185              		.loc 1 253 7 view .LVU44
 186 003e 0221     		movs	r1, #2
 187 0040 0448     		ldr	r0, .L15+12
 188 0042 FFF7FEFF 		bl	buffer_push
 189              	.LVL5:
 190 0046 F4E7     		b	.L9
 191              	.L16:
 192              		.align	2
 193              	.L15:
 194 0048 00000000 		.word	.LANCHOR2
 195 004c 000C0140 		.word	1073810432
 196 0050 00000000 		.word	.LANCHOR3
 197 0054 00000000 		.word	.LANCHOR4
 198              		.cfi_endproc
 199              	.LFE69:
ARM GAS  /tmp/cczjtYZB.s 			page 9


 201              		.section	.text.RS485_Read_Message,"ax",%progbits
 202              		.align	1
 203              		.global	RS485_Read_Message
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu softvfp
 209              	RS485_Read_Message:
 210              	.LFB71:
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** void main_task(void)
 259:Core/Src/main.c **** {
 260:Core/Src/main.c ****   	if (event_buffer.head!=event_buffer.tail){
 261:Core/Src/main.c ****       if(!f_busy){
 262:Core/Src/main.c **** 		  event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 263:Core/Src/main.c ****       }
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****     switch(state)
 267:Core/Src/main.c ****     {
 268:Core/Src/main.c ****       case STATE_WAITING_REQUEST:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****             if(event == EVENT_KEY_PRESSED){
 271:Core/Src/main.c ****                 digit++;
 272:Core/Src/main.c **** #ifdef SLAVE_1
 273:Core/Src/main.c ****                 
 274:Core/Src/main.c ****                 if (digit>9){
 275:Core/Src/main.c ****                   digit=0;
 276:Core/Src/main.c ****                 }
 277:Core/Src/main.c **** #endif
 278:Core/Src/main.c **** #ifdef SLAVE_2
 279:Core/Src/main.c ****                 
 280:Core/Src/main.c ****                 if (digit>15){
 281:Core/Src/main.c ****                   digit=10;
 282:Core/Src/main.c ****                 }
 283:Core/Src/main.c **** #endif
 284:Core/Src/main.c ****                
 285:Core/Src/main.c ****                 seven_segment_display(seven_segment_table[digit]);
 286:Core/Src/main.c ****                 event = EVENT_RESET;
 287:Core/Src/main.c ****                 ///state = STATE_SENDING_RESPOND;
 288:Core/Src/main.c ****               }
 289:Core/Src/main.c ****             else if(event == EVENT_RX_COMPLETE){
 290:Core/Src/main.c ****                 
 291:Core/Src/main.c ****                 f_busy=1;
 292:Core/Src/main.c ****                 state = STATE_READ_MESSAGE;
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****             }
 295:Core/Src/main.c ****       
 296:Core/Src/main.c ****             break;
 297:Core/Src/main.c ****       
 298:Core/Src/main.c ****       case STATE_SENDING_RESPOND:
 299:Core/Src/main.c ****           RS485_Send_Message();
 300:Core/Src/main.c ****           state= STATE_WAITING_REQUEST;
 301:Core/Src/main.c ****           f_busy=0;
 302:Core/Src/main.c ****           break;
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****       case STATE_READ_MESSAGE:
ARM GAS  /tmp/cczjtYZB.s 			page 10


 305:Core/Src/main.c ****           read_res= RS485_Read_Message();
 306:Core/Src/main.c ****           if (read_res==MSG_READ_REQ){
 307:Core/Src/main.c ****               
 308:Core/Src/main.c ****               state=STATE_SENDING_RESPOND;
 309:Core/Src/main.c ****           }
 310:Core/Src/main.c ****           else {
 311:Core/Src/main.c ****             f_busy=0;
 312:Core/Src/main.c ****                state= STATE_WAITING_REQUEST;
 313:Core/Src/main.c ****           }
 314:Core/Src/main.c ****          
 315:Core/Src/main.c ****           event = EVENT_RESET;
 316:Core/Src/main.c ****           break;
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****       
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****     }
 321:Core/Src/main.c **** }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** uint8_t RS485_Read_Message(void){
 211              		.loc 1 323 33 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 10B5     		push	{r4, lr}
 216              	.LCFI1:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 4, -8
 219              		.cfi_offset 14, -4
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   if (rx_buffer.tail==rx_buffer.head) return MSG_ERROR;
 220              		.loc 1 325 3 view .LVU46
 221              		.loc 1 325 16 is_stmt 0 view .LVU47
 222 0002 114B     		ldr	r3, .L24
 223 0004 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 224              		.loc 1 325 32 view .LVU48
 225 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 226              		.loc 1 325 6 view .LVU49
 227 0008 9A42     		cmp	r2, r3
 228 000a 17D0     		beq	.L20
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   buffer_to_message(&rx_buffer, RX_msg);
 229              		.loc 1 327 3 is_stmt 1 view .LVU50
 230 000c 0F4C     		ldr	r4, .L24+4
 231 000e 2146     		mov	r1, r4
 232 0010 0D48     		ldr	r0, .L24
 233 0012 FFF7FEFF 		bl	buffer_to_message
 234              	.LVL6:
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****  // if (check_checksum(&RX_msg)==CHECKSUM_ERROR) return 0;
 330:Core/Src/main.c ****   if (RX_msg[0]!= ID) return MSG_ERROR;
 235              		.loc 1 330 3 view .LVU51
 236              		.loc 1 330 13 is_stmt 0 view .LVU52
 237 0016 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 238              		.loc 1 330 16 view .LVU53
 239 0018 0D4B     		ldr	r3, .L24+8
 240 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 241              		.loc 1 330 6 view .LVU54
ARM GAS  /tmp/cczjtYZB.s 			page 11


 242 001c 9A42     		cmp	r2, r3
 243 001e 10D1     		bne	.L21
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****    if (RX_msg[1] == FUNC_WRITE)
 244              		.loc 1 334 4 is_stmt 1 view .LVU55
 245              		.loc 1 334 14 is_stmt 0 view .LVU56
 246 0020 2346     		mov	r3, r4
 247 0022 6478     		ldrb	r4, [r4, #1]	@ zero_extendqisi2
 248              		.loc 1 334 7 view .LVU57
 249 0024 012C     		cmp	r4, #1
 250 0026 01D0     		beq	.L23
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****       digit = RX_msg[2];
 337:Core/Src/main.c ****       seven_segment_display(seven_segment_table[digit]);
 338:Core/Src/main.c ****       return MSG_WRITE_REQ;
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   }else if (RX_msg[1] == FUNC_READ){
 251              		.loc 1 340 9 is_stmt 1 view .LVU58
 252              		.loc 1 340 12 is_stmt 0 view .LVU59
 253 0028 022C     		cmp	r4, #2
 254 002a 08E0     		b	.L17
 255              	.L23:
 336:Core/Src/main.c ****       seven_segment_display(seven_segment_table[digit]);
 256              		.loc 1 336 7 is_stmt 1 view .LVU60
 336:Core/Src/main.c ****       seven_segment_display(seven_segment_table[digit]);
 257              		.loc 1 336 21 is_stmt 0 view .LVU61
 258 002c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 336:Core/Src/main.c ****       seven_segment_display(seven_segment_table[digit]);
 259              		.loc 1 336 13 view .LVU62
 260 002e 094A     		ldr	r2, .L24+12
 261 0030 1360     		str	r3, [r2]
 337:Core/Src/main.c ****       return MSG_WRITE_REQ;
 262              		.loc 1 337 7 is_stmt 1 view .LVU63
 263 0032 094A     		ldr	r2, .L24+16
 264 0034 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 265 0036 FFF7FEFF 		bl	seven_segment_display
 266              	.LVL7:
 338:Core/Src/main.c **** 
 267              		.loc 1 338 7 view .LVU64
 338:Core/Src/main.c **** 
 268              		.loc 1 338 14 is_stmt 0 view .LVU65
 269 003a 00E0     		b	.L17
 270              	.L20:
 325:Core/Src/main.c **** 
 271              		.loc 1 325 46 view .LVU66
 272 003c 0024     		movs	r4, #0
 273              	.L17:
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****       return MSG_READ_REQ;
 344:Core/Src/main.c ****   }
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** }
 274              		.loc 1 347 1 view .LVU67
ARM GAS  /tmp/cczjtYZB.s 			page 12


 275 003e 2046     		mov	r0, r4
 276 0040 10BD     		pop	{r4, pc}
 277              	.L21:
 330:Core/Src/main.c **** 
 278              		.loc 1 330 30 view .LVU68
 279 0042 0024     		movs	r4, #0
 280 0044 FBE7     		b	.L17
 281              	.L25:
 282 0046 00BF     		.align	2
 283              	.L24:
 284 0048 00000000 		.word	.LANCHOR5
 285 004c 00000000 		.word	.LANCHOR6
 286 0050 00000000 		.word	.LANCHOR7
 287 0054 00000000 		.word	.LANCHOR8
 288 0058 00000000 		.word	.LANCHOR9
 289              		.cfi_endproc
 290              	.LFE71:
 292              		.section	.text.RS485_Send_Message,"ax",%progbits
 293              		.align	1
 294              		.global	RS485_Send_Message
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu softvfp
 300              	RS485_Send_Message:
 301              	.LFB72:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** void RS485_Send_Message(void)
 350:Core/Src/main.c **** {
 302              		.loc 1 350 1 is_stmt 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306 0000 70B5     		push	{r4, r5, r6, lr}
 307              	.LCFI2:
 308              		.cfi_def_cfa_offset 16
 309              		.cfi_offset 4, -16
 310              		.cfi_offset 5, -12
 311              		.cfi_offset 6, -8
 312              		.cfi_offset 14, -4
 351:Core/Src/main.c ****    TX_msg[0]= ID;
 313              		.loc 1 351 4 view .LVU70
 314              		.loc 1 351 13 is_stmt 0 view .LVU71
 315 0002 154C     		ldr	r4, .L28
 316 0004 154B     		ldr	r3, .L28+4
 317 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 318 0008 2370     		strb	r3, [r4]
 352:Core/Src/main.c ****    TX_msg[1]= RX_msg[1];
 319              		.loc 1 352 4 is_stmt 1 view .LVU72
 320              		.loc 1 352 21 is_stmt 0 view .LVU73
 321 000a 154B     		ldr	r3, .L28+8
 322 000c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 323              		.loc 1 352 13 view .LVU74
 324 000e 6370     		strb	r3, [r4, #1]
 353:Core/Src/main.c ****    TX_msg[2]= digit;
 325              		.loc 1 353 4 is_stmt 1 view .LVU75
 326              		.loc 1 353 13 is_stmt 0 view .LVU76
ARM GAS  /tmp/cczjtYZB.s 			page 13


 327 0010 144B     		ldr	r3, .L28+12
 328 0012 1B68     		ldr	r3, [r3]
 329 0014 A370     		strb	r3, [r4, #2]
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****    HAL_GPIO_WritePin(TX_EN_GPIO_Port, TX_EN_Pin, 1); /// Enable Transmitter Mode
 330              		.loc 1 355 4 is_stmt 1 view .LVU77
 331 0016 144E     		ldr	r6, .L28+16
 332 0018 0122     		movs	r2, #1
 333 001a 4FF48071 		mov	r1, #256
 334 001e 3046     		mov	r0, r6
 335 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 336              	.LVL8:
 356:Core/Src/main.c ****   
 357:Core/Src/main.c ****    HAL_UART_Transmit(&huart1,&start_cmd,1,10);
 337              		.loc 1 357 4 view .LVU78
 338 0024 114D     		ldr	r5, .L28+20
 339 0026 0A23     		movs	r3, #10
 340 0028 0122     		movs	r2, #1
 341 002a 1149     		ldr	r1, .L28+24
 342 002c 2846     		mov	r0, r5
 343 002e FFF7FEFF 		bl	HAL_UART_Transmit
 344              	.LVL9:
 358:Core/Src/main.c ****   
 359:Core/Src/main.c ****    HAL_UART_Transmit(&huart1,TX_msg,sizeof(TX_msg),10);
 345              		.loc 1 359 4 view .LVU79
 346 0032 0A23     		movs	r3, #10
 347 0034 0422     		movs	r2, #4
 348 0036 2146     		mov	r1, r4
 349 0038 2846     		mov	r0, r5
 350 003a FFF7FEFF 		bl	HAL_UART_Transmit
 351              	.LVL10:
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****    HAL_UART_Transmit(&huart1,&stop_cmd,1,10);
 352              		.loc 1 361 4 view .LVU80
 353 003e 0A23     		movs	r3, #10
 354 0040 0122     		movs	r2, #1
 355 0042 0C49     		ldr	r1, .L28+28
 356 0044 2846     		mov	r0, r5
 357 0046 FFF7FEFF 		bl	HAL_UART_Transmit
 358              	.LVL11:
 362:Core/Src/main.c ****   
 363:Core/Src/main.c ****    HAL_GPIO_WritePin(TX_EN_GPIO_Port, TX_EN_Pin, 0); /// Enable Receiver Mode
 359              		.loc 1 363 4 view .LVU81
 360 004a 0022     		movs	r2, #0
 361 004c 4FF48071 		mov	r1, #256
 362 0050 3046     		mov	r0, r6
 363 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 364              	.LVL12:
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** }
 365              		.loc 1 366 1 is_stmt 0 view .LVU82
 366 0056 70BD     		pop	{r4, r5, r6, pc}
 367              	.L29:
 368              		.align	2
 369              	.L28:
 370 0058 00000000 		.word	.LANCHOR10
ARM GAS  /tmp/cczjtYZB.s 			page 14


 371 005c 00000000 		.word	.LANCHOR7
 372 0060 00000000 		.word	.LANCHOR6
 373 0064 00000000 		.word	.LANCHOR8
 374 0068 00080140 		.word	1073809408
 375 006c 00000000 		.word	huart1
 376 0070 00000000 		.word	.LANCHOR11
 377 0074 00000000 		.word	.LANCHOR12
 378              		.cfi_endproc
 379              	.LFE72:
 381              		.section	.text.main_task,"ax",%progbits
 382              		.align	1
 383              		.global	main_task
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu softvfp
 389              	main_task:
 390              	.LFB70:
 259:Core/Src/main.c ****   	if (event_buffer.head!=event_buffer.tail){
 391              		.loc 1 259 1 is_stmt 1 view -0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395 0000 08B5     		push	{r3, lr}
 396              	.LCFI3:
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 3, -8
 399              		.cfi_offset 14, -4
 260:Core/Src/main.c ****       if(!f_busy){
 400              		.loc 1 260 4 view .LVU84
 260:Core/Src/main.c ****       if(!f_busy){
 401              		.loc 1 260 20 is_stmt 0 view .LVU85
 402 0002 284B     		ldr	r3, .L44
 403 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 260:Core/Src/main.c ****       if(!f_busy){
 404              		.loc 1 260 39 view .LVU86
 405 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 260:Core/Src/main.c ****       if(!f_busy){
 406              		.loc 1 260 7 view .LVU87
 407 0008 9A42     		cmp	r2, r3
 408 000a 02D0     		beq	.L31
 261:Core/Src/main.c **** 		  event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 409              		.loc 1 261 7 is_stmt 1 view .LVU88
 261:Core/Src/main.c **** 		  event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 410              		.loc 1 261 10 is_stmt 0 view .LVU89
 411 000c 264B     		ldr	r3, .L44+4
 412 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 261:Core/Src/main.c **** 		  event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 413              		.loc 1 261 9 view .LVU90
 414 0010 3BB1     		cbz	r3, .L40
 415              	.L31:
 266:Core/Src/main.c ****     {
 416              		.loc 1 266 5 is_stmt 1 view .LVU91
 417 0012 264B     		ldr	r3, .L44+8
 418 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 419 0016 012B     		cmp	r3, #1
 420 0018 29D0     		beq	.L32
ARM GAS  /tmp/cczjtYZB.s 			page 15


 421 001a 022B     		cmp	r3, #2
 422 001c 2FD0     		beq	.L33
 423 001e 33B1     		cbz	r3, .L41
 424              	.L30:
 321:Core/Src/main.c **** 
 425              		.loc 1 321 1 is_stmt 0 view .LVU92
 426 0020 08BD     		pop	{r3, pc}
 427              	.L40:
 262:Core/Src/main.c ****       }
 428              		.loc 1 262 5 is_stmt 1 view .LVU93
 262:Core/Src/main.c ****       }
 429              		.loc 1 262 13 is_stmt 0 view .LVU94
 430 0022 2048     		ldr	r0, .L44
 431 0024 FFF7FEFF 		bl	buffer_pop
 432              	.LVL13:
 262:Core/Src/main.c ****       }
 433              		.loc 1 262 11 view .LVU95
 434 0028 214B     		ldr	r3, .L44+12
 435 002a 1870     		strb	r0, [r3]
 436 002c F1E7     		b	.L31
 437              	.L41:
 270:Core/Src/main.c ****                 digit++;
 438              		.loc 1 270 13 is_stmt 1 view .LVU96
 270:Core/Src/main.c ****                 digit++;
 439              		.loc 1 270 22 is_stmt 0 view .LVU97
 440 002e 204B     		ldr	r3, .L44+12
 441 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270:Core/Src/main.c ****                 digit++;
 442              		.loc 1 270 15 view .LVU98
 443 0032 012B     		cmp	r3, #1
 444 0034 08D0     		beq	.L42
 289:Core/Src/main.c ****                 
 445              		.loc 1 289 18 is_stmt 1 view .LVU99
 289:Core/Src/main.c ****                 
 446              		.loc 1 289 20 is_stmt 0 view .LVU100
 447 0036 032B     		cmp	r3, #3
 448 0038 F2D1     		bne	.L30
 291:Core/Src/main.c ****                 state = STATE_READ_MESSAGE;
 449              		.loc 1 291 17 is_stmt 1 view .LVU101
 291:Core/Src/main.c ****                 state = STATE_READ_MESSAGE;
 450              		.loc 1 291 23 is_stmt 0 view .LVU102
 451 003a 1B4B     		ldr	r3, .L44+4
 452 003c 0122     		movs	r2, #1
 453 003e 1A70     		strb	r2, [r3]
 292:Core/Src/main.c **** 
 454              		.loc 1 292 17 is_stmt 1 view .LVU103
 292:Core/Src/main.c **** 
 455              		.loc 1 292 23 is_stmt 0 view .LVU104
 456 0040 1A4B     		ldr	r3, .L44+8
 457 0042 0222     		movs	r2, #2
 458 0044 1A70     		strb	r2, [r3]
 459 0046 EBE7     		b	.L30
 460              	.L42:
 271:Core/Src/main.c **** #ifdef SLAVE_1
 461              		.loc 1 271 17 is_stmt 1 view .LVU105
 271:Core/Src/main.c **** #ifdef SLAVE_1
 462              		.loc 1 271 22 is_stmt 0 view .LVU106
ARM GAS  /tmp/cczjtYZB.s 			page 16


 463 0048 1A4A     		ldr	r2, .L44+16
 464 004a 1368     		ldr	r3, [r2]
 465 004c 0133     		adds	r3, r3, #1
 466 004e 1360     		str	r3, [r2]
 280:Core/Src/main.c ****                   digit=10;
 467              		.loc 1 280 17 is_stmt 1 view .LVU107
 280:Core/Src/main.c ****                   digit=10;
 468              		.loc 1 280 20 is_stmt 0 view .LVU108
 469 0050 0F2B     		cmp	r3, #15
 470 0052 02DD     		ble	.L36
 281:Core/Src/main.c ****                 }
 471              		.loc 1 281 19 is_stmt 1 view .LVU109
 281:Core/Src/main.c ****                 }
 472              		.loc 1 281 24 is_stmt 0 view .LVU110
 473 0054 1346     		mov	r3, r2
 474 0056 0A22     		movs	r2, #10
 475 0058 1A60     		str	r2, [r3]
 476              	.L36:
 285:Core/Src/main.c ****                 event = EVENT_RESET;
 477              		.loc 1 285 17 is_stmt 1 view .LVU111
 478 005a 164B     		ldr	r3, .L44+16
 479 005c 1B68     		ldr	r3, [r3]
 480 005e 164A     		ldr	r2, .L44+20
 481 0060 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 482 0062 FFF7FEFF 		bl	seven_segment_display
 483              	.LVL14:
 286:Core/Src/main.c ****                 ///state = STATE_SENDING_RESPOND;
 484              		.loc 1 286 17 view .LVU112
 286:Core/Src/main.c ****                 ///state = STATE_SENDING_RESPOND;
 485              		.loc 1 286 23 is_stmt 0 view .LVU113
 486 0066 124B     		ldr	r3, .L44+12
 487 0068 0022     		movs	r2, #0
 488 006a 1A70     		strb	r2, [r3]
 489 006c D8E7     		b	.L30
 490              	.L32:
 299:Core/Src/main.c ****           state= STATE_WAITING_REQUEST;
 491              		.loc 1 299 11 is_stmt 1 view .LVU114
 492 006e FFF7FEFF 		bl	RS485_Send_Message
 493              	.LVL15:
 300:Core/Src/main.c ****           f_busy=0;
 494              		.loc 1 300 11 view .LVU115
 300:Core/Src/main.c ****           f_busy=0;
 495              		.loc 1 300 16 is_stmt 0 view .LVU116
 496 0072 0023     		movs	r3, #0
 497 0074 0D4A     		ldr	r2, .L44+8
 498 0076 1370     		strb	r3, [r2]
 301:Core/Src/main.c ****           break;
 499              		.loc 1 301 11 is_stmt 1 view .LVU117
 301:Core/Src/main.c ****           break;
 500              		.loc 1 301 17 is_stmt 0 view .LVU118
 501 0078 0B4A     		ldr	r2, .L44+4
 502 007a 1370     		strb	r3, [r2]
 302:Core/Src/main.c **** 
 503              		.loc 1 302 11 is_stmt 1 view .LVU119
 504 007c D0E7     		b	.L30
 505              	.L33:
 305:Core/Src/main.c ****           if (read_res==MSG_READ_REQ){
ARM GAS  /tmp/cczjtYZB.s 			page 17


 506              		.loc 1 305 11 view .LVU120
 305:Core/Src/main.c ****           if (read_res==MSG_READ_REQ){
 507              		.loc 1 305 21 is_stmt 0 view .LVU121
 508 007e FFF7FEFF 		bl	RS485_Read_Message
 509              	.LVL16:
 305:Core/Src/main.c ****           if (read_res==MSG_READ_REQ){
 510              		.loc 1 305 19 view .LVU122
 511 0082 0E4B     		ldr	r3, .L44+24
 512 0084 1870     		strb	r0, [r3]
 306:Core/Src/main.c ****               
 513              		.loc 1 306 11 is_stmt 1 view .LVU123
 306:Core/Src/main.c ****               
 514              		.loc 1 306 14 is_stmt 0 view .LVU124
 515 0086 0228     		cmp	r0, #2
 516 0088 08D0     		beq	.L43
 311:Core/Src/main.c ****                state= STATE_WAITING_REQUEST;
 517              		.loc 1 311 13 is_stmt 1 view .LVU125
 311:Core/Src/main.c ****                state= STATE_WAITING_REQUEST;
 518              		.loc 1 311 19 is_stmt 0 view .LVU126
 519 008a 0023     		movs	r3, #0
 520 008c 064A     		ldr	r2, .L44+4
 521 008e 1370     		strb	r3, [r2]
 312:Core/Src/main.c ****           }
 522              		.loc 1 312 16 is_stmt 1 view .LVU127
 312:Core/Src/main.c ****           }
 523              		.loc 1 312 21 is_stmt 0 view .LVU128
 524 0090 064A     		ldr	r2, .L44+8
 525 0092 1370     		strb	r3, [r2]
 526              	.L38:
 315:Core/Src/main.c ****           break;
 527              		.loc 1 315 11 is_stmt 1 view .LVU129
 315:Core/Src/main.c ****           break;
 528              		.loc 1 315 17 is_stmt 0 view .LVU130
 529 0094 064B     		ldr	r3, .L44+12
 530 0096 0022     		movs	r2, #0
 531 0098 1A70     		strb	r2, [r3]
 316:Core/Src/main.c **** 
 532              		.loc 1 316 11 is_stmt 1 view .LVU131
 321:Core/Src/main.c **** 
 533              		.loc 1 321 1 is_stmt 0 view .LVU132
 534 009a C1E7     		b	.L30
 535              	.L43:
 308:Core/Src/main.c ****           }
 536              		.loc 1 308 15 is_stmt 1 view .LVU133
 308:Core/Src/main.c ****           }
 537              		.loc 1 308 20 is_stmt 0 view .LVU134
 538 009c 034B     		ldr	r3, .L44+8
 539 009e 0122     		movs	r2, #1
 540 00a0 1A70     		strb	r2, [r3]
 541 00a2 F7E7     		b	.L38
 542              	.L45:
 543              		.align	2
 544              	.L44:
 545 00a4 00000000 		.word	.LANCHOR4
 546 00a8 00000000 		.word	.LANCHOR13
 547 00ac 00000000 		.word	.LANCHOR15
 548 00b0 00000000 		.word	.LANCHOR14
ARM GAS  /tmp/cczjtYZB.s 			page 18


 549 00b4 00000000 		.word	.LANCHOR8
 550 00b8 00000000 		.word	.LANCHOR9
 551 00bc 00000000 		.word	.LANCHOR16
 552              		.cfi_endproc
 553              	.LFE70:
 555              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 556              		.align	1
 557              		.global	HAL_TIM_PeriodElapsedCallback
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu softvfp
 563              	HAL_TIM_PeriodElapsedCallback:
 564              	.LVL17:
 565              	.LFB73:
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 369:Core/Src/main.c **** {
 566              		.loc 1 369 1 is_stmt 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 370:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
 371:Core/Src/main.c ****   if (htim == &htim1)
 571              		.loc 1 371 3 view .LVU136
 572              		.loc 1 371 6 is_stmt 0 view .LVU137
 573 0000 034B     		ldr	r3, .L49
 574 0002 8342     		cmp	r3, r0
 575 0004 00D0     		beq	.L48
 576              	.L46:
 372:Core/Src/main.c ****   {
 373:Core/Src/main.c **** 	  f_timer_10ms=1;
 374:Core/Src/main.c ****   }
 375:Core/Src/main.c ****   
 376:Core/Src/main.c **** }
 577              		.loc 1 376 1 view .LVU138
 578 0006 7047     		bx	lr
 579              	.L48:
 373:Core/Src/main.c ****   }
 580              		.loc 1 373 4 is_stmt 1 view .LVU139
 373:Core/Src/main.c ****   }
 581              		.loc 1 373 16 is_stmt 0 view .LVU140
 582 0008 024B     		ldr	r3, .L49+4
 583 000a 0122     		movs	r2, #1
 584 000c 1A70     		strb	r2, [r3]
 585              		.loc 1 376 1 view .LVU141
 586 000e FAE7     		b	.L46
 587              	.L50:
 588              		.align	2
 589              	.L49:
 590 0010 00000000 		.word	htim1
 591 0014 00000000 		.word	.LANCHOR0
 592              		.cfi_endproc
 593              	.LFE73:
 595              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 596              		.align	1
ARM GAS  /tmp/cczjtYZB.s 			page 19


 597              		.global	HAL_UART_RxCpltCallback
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu softvfp
 603              	HAL_UART_RxCpltCallback:
 604              	.LVL18:
 605              	.LFB74:
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 381:Core/Src/main.c **** {
 606              		.loc 1 381 1 is_stmt 1 view -0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 382:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** 	if (huart == &huart1)
 610              		.loc 1 384 2 view .LVU143
 611              		.loc 1 384 5 is_stmt 0 view .LVU144
 612 0000 1B4B     		ldr	r3, .L63
 613 0002 8342     		cmp	r3, r0
 614 0004 00D0     		beq	.L60
 615 0006 7047     		bx	lr
 616              	.L60:
 381:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 617              		.loc 1 381 1 view .LVU145
 618 0008 10B5     		push	{r4, lr}
 619              	.LCFI4:
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 4, -8
 622              		.cfi_offset 14, -4
 385:Core/Src/main.c **** 	{ 
 386:Core/Src/main.c ****     digit=0;   
 623              		.loc 1 386 5 is_stmt 1 view .LVU146
 624              		.loc 1 386 10 is_stmt 0 view .LVU147
 625 000a 1A4B     		ldr	r3, .L63+4
 626 000c 0022     		movs	r2, #0
 627 000e 1A60     		str	r2, [r3]
 387:Core/Src/main.c ****                 seven_segment_display(seven_segment_table[digit]);
 628              		.loc 1 387 17 is_stmt 1 view .LVU148
 629 0010 194B     		ldr	r3, .L63+8
 630 0012 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 631              	.LVL19:
 632              		.loc 1 387 17 is_stmt 0 view .LVU149
 633 0014 FFF7FEFF 		bl	seven_segment_display
 634              	.LVL20:
 388:Core/Src/main.c **** 				transmission_f=1;
 635              		.loc 1 388 5 is_stmt 1 view .LVU150
 636              		.loc 1 388 19 is_stmt 0 view .LVU151
 637 0018 184B     		ldr	r3, .L63+12
 638 001a 0122     		movs	r2, #1
 639 001c 1A70     		strb	r2, [r3]
 389:Core/Src/main.c ****                       
 390:Core/Src/main.c ****     if (rx_temp==0x2)
ARM GAS  /tmp/cczjtYZB.s 			page 20


 640              		.loc 1 390 5 is_stmt 1 view .LVU152
 641              		.loc 1 390 16 is_stmt 0 view .LVU153
 642 001e 184B     		ldr	r3, .L63+16
 643 0020 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 644              		.loc 1 390 8 view .LVU154
 645 0022 0229     		cmp	r1, #2
 646 0024 0AD0     		beq	.L61
 391:Core/Src/main.c **** 		{
 392:Core/Src/main.c ****       digit=1;   
 393:Core/Src/main.c ****                 seven_segment_display(seven_segment_table[digit]);
 394:Core/Src/main.c **** 				transmission_f=1;
 395:Core/Src/main.c **** 		}
 396:Core/Src/main.c **** 		else if (rx_temp==0x3)
 647              		.loc 1 396 8 is_stmt 1 view .LVU155
 648              		.loc 1 396 11 is_stmt 0 view .LVU156
 649 0026 0329     		cmp	r1, #3
 650 0028 12D0     		beq	.L62
 397:Core/Src/main.c **** 		{
 398:Core/Src/main.c ****       digit=2;   
 399:Core/Src/main.c ****                 seven_segment_display(seven_segment_table[digit]);
 400:Core/Src/main.c **** 				transmission_f=0;
 401:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 402:Core/Src/main.c **** 		}
 403:Core/Src/main.c **** 		else{
 404:Core/Src/main.c **** 
 405:Core/Src/main.c **** 			if (transmission_f)
 651              		.loc 1 405 4 is_stmt 1 view .LVU157
 406:Core/Src/main.c **** 			{
 407:Core/Src/main.c **** 				 buffer_push(&rx_buffer,rx_temp);
 652              		.loc 1 407 6 view .LVU158
 653 002a 1648     		ldr	r0, .L63+20
 654 002c FFF7FEFF 		bl	buffer_push
 655              	.LVL21:
 656              	.L54:
 408:Core/Src/main.c **** 			}
 409:Core/Src/main.c **** 		}
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 657              		.loc 1 411 3 view .LVU159
 658 0030 0122     		movs	r2, #1
 659 0032 1349     		ldr	r1, .L63+16
 660 0034 0E48     		ldr	r0, .L63
 661 0036 FFF7FEFF 		bl	HAL_UART_Receive_IT
 662              	.LVL22:
 412:Core/Src/main.c ****     
 413:Core/Src/main.c ****   }
 414:Core/Src/main.c **** }
 663              		.loc 1 414 1 is_stmt 0 view .LVU160
 664 003a 10BD     		pop	{r4, pc}
 665              	.L61:
 392:Core/Src/main.c ****                 seven_segment_display(seven_segment_table[digit]);
 666              		.loc 1 392 7 is_stmt 1 view .LVU161
 392:Core/Src/main.c ****                 seven_segment_display(seven_segment_table[digit]);
 667              		.loc 1 392 12 is_stmt 0 view .LVU162
 668 003c 1446     		mov	r4, r2
 669 003e 0D4B     		ldr	r3, .L63+4
 670 0040 1A60     		str	r2, [r3]
ARM GAS  /tmp/cczjtYZB.s 			page 21


 393:Core/Src/main.c **** 				transmission_f=1;
 671              		.loc 1 393 17 is_stmt 1 view .LVU163
 672 0042 0D4B     		ldr	r3, .L63+8
 673 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 674 0046 FFF7FEFF 		bl	seven_segment_display
 675              	.LVL23:
 394:Core/Src/main.c **** 		}
 676              		.loc 1 394 5 view .LVU164
 394:Core/Src/main.c **** 		}
 677              		.loc 1 394 19 is_stmt 0 view .LVU165
 678 004a 0C4B     		ldr	r3, .L63+12
 679 004c 1C70     		strb	r4, [r3]
 680 004e EFE7     		b	.L54
 681              	.L62:
 398:Core/Src/main.c ****                 seven_segment_display(seven_segment_table[digit]);
 682              		.loc 1 398 7 is_stmt 1 view .LVU166
 398:Core/Src/main.c ****                 seven_segment_display(seven_segment_table[digit]);
 683              		.loc 1 398 12 is_stmt 0 view .LVU167
 684 0050 084B     		ldr	r3, .L63+4
 685 0052 0222     		movs	r2, #2
 686 0054 1A60     		str	r2, [r3]
 399:Core/Src/main.c **** 				transmission_f=0;
 687              		.loc 1 399 17 is_stmt 1 view .LVU168
 688 0056 084B     		ldr	r3, .L63+8
 689 0058 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 690 005a FFF7FEFF 		bl	seven_segment_display
 691              	.LVL24:
 400:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 692              		.loc 1 400 5 view .LVU169
 400:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 693              		.loc 1 400 19 is_stmt 0 view .LVU170
 694 005e 074B     		ldr	r3, .L63+12
 695 0060 0022     		movs	r2, #0
 696 0062 1A70     		strb	r2, [r3]
 401:Core/Src/main.c **** 		}
 697              		.loc 1 401 5 is_stmt 1 view .LVU171
 698 0064 0321     		movs	r1, #3
 699 0066 0848     		ldr	r0, .L63+24
 700 0068 FFF7FEFF 		bl	buffer_push
 701              	.LVL25:
 702 006c E0E7     		b	.L54
 703              	.L64:
 704 006e 00BF     		.align	2
 705              	.L63:
 706 0070 00000000 		.word	huart1
 707 0074 00000000 		.word	.LANCHOR8
 708 0078 00000000 		.word	.LANCHOR9
 709 007c 00000000 		.word	.LANCHOR17
 710 0080 00000000 		.word	.LANCHOR18
 711 0084 00000000 		.word	.LANCHOR5
 712 0088 00000000 		.word	.LANCHOR4
 713              		.cfi_endproc
 714              	.LFE74:
 716              		.section	.text.Error_Handler,"ax",%progbits
 717              		.align	1
 718              		.global	Error_Handler
 719              		.syntax unified
ARM GAS  /tmp/cczjtYZB.s 			page 22


 720              		.thumb
 721              		.thumb_func
 722              		.fpu softvfp
 724              	Error_Handler:
 725              	.LFB75:
 415:Core/Src/main.c **** /* USER CODE END 4 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** /**
 418:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 419:Core/Src/main.c ****   * @retval None
 420:Core/Src/main.c ****   */
 421:Core/Src/main.c **** void Error_Handler(void)
 422:Core/Src/main.c **** {
 726              		.loc 1 422 1 view -0
 727              		.cfi_startproc
 728              		@ Volatile: function does not return.
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 423:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 424:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 425:Core/Src/main.c ****   __disable_irq();
 732              		.loc 1 425 3 view .LVU173
 733              	.LBB4:
 734              	.LBI4:
 735              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  /tmp/cczjtYZB.s 			page 23


  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/cczjtYZB.s 			page 24


  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 736              		.loc 2 140 27 view .LVU174
 737              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 738              		.loc 2 142 3 view .LVU175
ARM GAS  /tmp/cczjtYZB.s 			page 25


 739              		.syntax unified
 740              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 741 0000 72B6     		cpsid i
 742              	@ 0 "" 2
 743              		.thumb
 744              		.syntax unified
 745              	.L66:
 746              	.LBE5:
 747              	.LBE4:
 426:Core/Src/main.c ****   while (1)
 748              		.loc 1 426 3 discriminator 1 view .LVU176
 427:Core/Src/main.c ****   {
 428:Core/Src/main.c ****   }
 749              		.loc 1 428 3 discriminator 1 view .LVU177
 426:Core/Src/main.c ****   while (1)
 750              		.loc 1 426 9 discriminator 1 view .LVU178
 751 0002 FEE7     		b	.L66
 752              		.cfi_endproc
 753              	.LFE75:
 755              		.section	.text.SystemClock_Config,"ax",%progbits
 756              		.align	1
 757              		.global	SystemClock_Config
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu softvfp
 763              	SystemClock_Config:
 764              	.LFB66:
 176:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 765              		.loc 1 176 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 64
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769 0000 00B5     		push	{lr}
 770              	.LCFI5:
 771              		.cfi_def_cfa_offset 4
 772              		.cfi_offset 14, -4
 773 0002 91B0     		sub	sp, sp, #68
 774              	.LCFI6:
 775              		.cfi_def_cfa_offset 72
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 776              		.loc 1 177 3 view .LVU180
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 777              		.loc 1 177 22 is_stmt 0 view .LVU181
 778 0004 2822     		movs	r2, #40
 779 0006 0021     		movs	r1, #0
 780 0008 06A8     		add	r0, sp, #24
 781 000a FFF7FEFF 		bl	memset
 782              	.LVL26:
 178:Core/Src/main.c **** 
 783              		.loc 1 178 3 is_stmt 1 view .LVU182
 178:Core/Src/main.c **** 
 784              		.loc 1 178 22 is_stmt 0 view .LVU183
 785 000e 0023     		movs	r3, #0
 786 0010 0193     		str	r3, [sp, #4]
 787 0012 0293     		str	r3, [sp, #8]
 788 0014 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/cczjtYZB.s 			page 26


 789 0016 0493     		str	r3, [sp, #16]
 790 0018 0593     		str	r3, [sp, #20]
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 791              		.loc 1 183 3 is_stmt 1 view .LVU184
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 792              		.loc 1 183 36 is_stmt 0 view .LVU185
 793 001a 0122     		movs	r2, #1
 794 001c 0692     		str	r2, [sp, #24]
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 795              		.loc 1 184 3 is_stmt 1 view .LVU186
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 796              		.loc 1 184 30 is_stmt 0 view .LVU187
 797 001e 4FF48033 		mov	r3, #65536
 798 0022 0793     		str	r3, [sp, #28]
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 799              		.loc 1 185 3 is_stmt 1 view .LVU188
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800              		.loc 1 186 3 view .LVU189
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 801              		.loc 1 186 30 is_stmt 0 view .LVU190
 802 0024 0A92     		str	r2, [sp, #40]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 803              		.loc 1 187 3 is_stmt 1 view .LVU191
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 804              		.loc 1 187 34 is_stmt 0 view .LVU192
 805 0026 0222     		movs	r2, #2
 806 0028 0D92     		str	r2, [sp, #52]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 807              		.loc 1 188 3 is_stmt 1 view .LVU193
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 808              		.loc 1 188 35 is_stmt 0 view .LVU194
 809 002a 0E93     		str	r3, [sp, #56]
 189:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 810              		.loc 1 189 3 is_stmt 1 view .LVU195
 190:Core/Src/main.c ****   {
 811              		.loc 1 190 3 view .LVU196
 190:Core/Src/main.c ****   {
 812              		.loc 1 190 7 is_stmt 0 view .LVU197
 813 002c 06A8     		add	r0, sp, #24
 814 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 815              	.LVL27:
 190:Core/Src/main.c ****   {
 816              		.loc 1 190 6 view .LVU198
 817 0032 88B9     		cbnz	r0, .L71
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 818              		.loc 1 197 3 is_stmt 1 view .LVU199
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 819              		.loc 1 197 31 is_stmt 0 view .LVU200
 820 0034 0F23     		movs	r3, #15
 821 0036 0193     		str	r3, [sp, #4]
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 822              		.loc 1 199 3 is_stmt 1 view .LVU201
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 823              		.loc 1 199 34 is_stmt 0 view .LVU202
 824 0038 0223     		movs	r3, #2
 825 003a 0293     		str	r3, [sp, #8]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/cczjtYZB.s 			page 27


 826              		.loc 1 200 3 is_stmt 1 view .LVU203
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 827              		.loc 1 200 35 is_stmt 0 view .LVU204
 828 003c 8023     		movs	r3, #128
 829 003e 0393     		str	r3, [sp, #12]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 830              		.loc 1 201 3 is_stmt 1 view .LVU205
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 831              		.loc 1 201 36 is_stmt 0 view .LVU206
 832 0040 4FF48063 		mov	r3, #1024
 833 0044 0493     		str	r3, [sp, #16]
 202:Core/Src/main.c **** 
 834              		.loc 1 202 3 is_stmt 1 view .LVU207
 202:Core/Src/main.c **** 
 835              		.loc 1 202 36 is_stmt 0 view .LVU208
 836 0046 0021     		movs	r1, #0
 837 0048 0591     		str	r1, [sp, #20]
 204:Core/Src/main.c ****   {
 838              		.loc 1 204 3 is_stmt 1 view .LVU209
 204:Core/Src/main.c ****   {
 839              		.loc 1 204 7 is_stmt 0 view .LVU210
 840 004a 01A8     		add	r0, sp, #4
 841 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 842              	.LVL28:
 204:Core/Src/main.c ****   {
 843              		.loc 1 204 6 view .LVU211
 844 0050 20B9     		cbnz	r0, .L72
 208:Core/Src/main.c **** 
 845              		.loc 1 208 1 view .LVU212
 846 0052 11B0     		add	sp, sp, #68
 847              	.LCFI7:
 848              		.cfi_remember_state
 849              		.cfi_def_cfa_offset 4
 850              		@ sp needed
 851 0054 5DF804FB 		ldr	pc, [sp], #4
 852              	.L71:
 853              	.LCFI8:
 854              		.cfi_restore_state
 192:Core/Src/main.c ****   }
 855              		.loc 1 192 5 is_stmt 1 view .LVU213
 856 0058 FFF7FEFF 		bl	Error_Handler
 857              	.LVL29:
 858              	.L72:
 206:Core/Src/main.c ****   }
 859              		.loc 1 206 5 view .LVU214
 860 005c FFF7FEFF 		bl	Error_Handler
 861              	.LVL30:
 862              		.cfi_endproc
 863              	.LFE66:
 865              		.section	.text.main,"ax",%progbits
 866              		.align	1
 867              		.global	main
 868              		.syntax unified
 869              		.thumb
 870              		.thumb_func
 871              		.fpu softvfp
 873              	main:
ARM GAS  /tmp/cczjtYZB.s 			page 28


 874              	.LFB65:
 110:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 875              		.loc 1 110 1 view -0
 876              		.cfi_startproc
 877              		@ Volatile: function does not return.
 878              		@ args = 0, pretend = 0, frame = 0
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880 0000 08B5     		push	{r3, lr}
 881              	.LCFI9:
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 3, -8
 884              		.cfi_offset 14, -4
 118:Core/Src/main.c **** 
 885              		.loc 1 118 3 view .LVU216
 886 0002 FFF7FEFF 		bl	HAL_Init
 887              	.LVL31:
 125:Core/Src/main.c **** 
 888              		.loc 1 125 3 view .LVU217
 889 0006 FFF7FEFF 		bl	SystemClock_Config
 890              	.LVL32:
 132:Core/Src/main.c ****   MX_TIM1_Init();
 891              		.loc 1 132 3 view .LVU218
 892 000a FFF7FEFF 		bl	MX_GPIO_Init
 893              	.LVL33:
 133:Core/Src/main.c ****   MX_USART1_UART_Init();
 894              		.loc 1 133 3 view .LVU219
 895 000e FFF7FEFF 		bl	MX_TIM1_Init
 896              	.LVL34:
 134:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 897              		.loc 1 134 3 view .LVU220
 898 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 899              	.LVL35:
 137:Core/Src/main.c **** 
 900              		.loc 1 137 3 view .LVU221
 901 0016 0F48     		ldr	r0, .L76
 902 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 903              	.LVL36:
 139:Core/Src/main.c ****   /* USER CODE END 2 */
 904              		.loc 1 139 3 view .LVU222
 905 001c 0122     		movs	r2, #1
 906 001e 0E49     		ldr	r1, .L76+4
 907 0020 0E48     		ldr	r0, .L76+8
 908 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
 909              	.LVL37:
 150:Core/Src/main.c **** #endif
 910              		.loc 1 150 3 view .LVU223
 150:Core/Src/main.c **** #endif
 911              		.loc 1 150 5 is_stmt 0 view .LVU224
 912 0026 0E4B     		ldr	r3, .L76+12
 913 0028 0222     		movs	r2, #2
 914 002a 1A70     		strb	r2, [r3]
 152:Core/Src/main.c ****   event = EVENT_RESET;
 915              		.loc 1 152 3 is_stmt 1 view .LVU225
 152:Core/Src/main.c ****   event = EVENT_RESET;
 916              		.loc 1 152 9 is_stmt 0 view .LVU226
 917 002c 0023     		movs	r3, #0
 918 002e 0D4A     		ldr	r2, .L76+16
ARM GAS  /tmp/cczjtYZB.s 			page 29


 919 0030 1370     		strb	r3, [r2]
 153:Core/Src/main.c ****   digit=16;
 920              		.loc 1 153 3 is_stmt 1 view .LVU227
 153:Core/Src/main.c ****   digit=16;
 921              		.loc 1 153 9 is_stmt 0 view .LVU228
 922 0032 0D4A     		ldr	r2, .L76+20
 923 0034 1370     		strb	r3, [r2]
 154:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 924              		.loc 1 154 3 is_stmt 1 view .LVU229
 154:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 925              		.loc 1 154 8 is_stmt 0 view .LVU230
 926 0036 0D4B     		ldr	r3, .L76+24
 927 0038 1022     		movs	r2, #16
 928 003a 1A60     		str	r2, [r3]
 155:Core/Src/main.c **** 
 929              		.loc 1 155 3 is_stmt 1 view .LVU231
 930 003c 0C4B     		ldr	r3, .L76+28
 931 003e 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 932 0040 FFF7FEFF 		bl	seven_segment_display
 933              	.LVL38:
 934              	.L74:
 157:Core/Src/main.c ****   {
 935              		.loc 1 157 3 discriminator 1 view .LVU232
 164:Core/Src/main.c ****       key_read_task();
 936              		.loc 1 164 7 discriminator 1 view .LVU233
 937 0044 FFF7FEFF 		bl	task_timer
 938              	.LVL39:
 165:Core/Src/main.c ****       main_task();
 939              		.loc 1 165 7 discriminator 1 view .LVU234
 940 0048 FFF7FEFF 		bl	key_read_task
 941              	.LVL40:
 166:Core/Src/main.c ****   }
 942              		.loc 1 166 7 discriminator 1 view .LVU235
 943 004c FFF7FEFF 		bl	main_task
 944              	.LVL41:
 157:Core/Src/main.c ****   {
 945              		.loc 1 157 9 discriminator 1 view .LVU236
 946 0050 F8E7     		b	.L74
 947              	.L77:
 948 0052 00BF     		.align	2
 949              	.L76:
 950 0054 00000000 		.word	htim1
 951 0058 00000000 		.word	.LANCHOR18
 952 005c 00000000 		.word	huart1
 953 0060 00000000 		.word	.LANCHOR7
 954 0064 00000000 		.word	.LANCHOR15
 955 0068 00000000 		.word	.LANCHOR14
 956 006c 00000000 		.word	.LANCHOR8
 957 0070 00000000 		.word	.LANCHOR9
 958              		.cfi_endproc
 959              	.LFE65:
 961              		.global	seven_segment_table
 962              		.global	digit
 963              		.global	event
 964              		.global	state
 965              		.global	RX_msg
 966              		.global	TX_msg
ARM GAS  /tmp/cczjtYZB.s 			page 30


 967              		.global	ID
 968              		.global	event_buffer
 969              		.global	rx_buffer
 970              		.global	stop_cmd
 971              		.global	start_cmd
 972              		.global	transmission_f
 973              		.global	rx_temp
 974              		.global	read_res
 975              		.global	curr_event
 976              		.global	key_value
 977              		.global	d_timer_30ms
 978              		.global	f_timer_30ms
 979              		.global	f_timer_10ms
 980              		.global	f_busy
 981              		.section	.bss.ID,"aw",%nobits
 982              		.set	.LANCHOR7,. + 0
 985              	ID:
 986 0000 00       		.space	1
 987              		.section	.bss.RX_msg,"aw",%nobits
 988              		.align	2
 989              		.set	.LANCHOR6,. + 0
 992              	RX_msg:
 993 0000 00000000 		.space	4
 994              		.section	.bss.TX_msg,"aw",%nobits
 995              		.align	2
 996              		.set	.LANCHOR10,. + 0
 999              	TX_msg:
 1000 0000 00000000 		.space	4
 1001              		.section	.bss.curr_event,"aw",%nobits
 1004              	curr_event:
 1005 0000 00       		.space	1
 1006              		.section	.bss.d_timer_30ms,"aw",%nobits
 1007              		.set	.LANCHOR1,. + 0
 1010              	d_timer_30ms:
 1011 0000 00       		.space	1
 1012              		.section	.bss.digit,"aw",%nobits
 1013              		.align	2
 1014              		.set	.LANCHOR8,. + 0
 1017              	digit:
 1018 0000 00000000 		.space	4
 1019              		.section	.bss.event,"aw",%nobits
 1020              		.set	.LANCHOR14,. + 0
 1023              	event:
 1024 0000 00       		.space	1
 1025              		.section	.bss.event_buffer,"aw",%nobits
 1026              		.align	2
 1027              		.set	.LANCHOR4,. + 0
 1030              	event_buffer:
 1031 0000 00000000 		.space	66
 1031      00000000 
 1031      00000000 
 1031      00000000 
 1031      00000000 
 1032              		.section	.bss.f_busy,"aw",%nobits
 1033              		.set	.LANCHOR13,. + 0
 1036              	f_busy:
 1037 0000 00       		.space	1
ARM GAS  /tmp/cczjtYZB.s 			page 31


 1038              		.section	.bss.f_timer_10ms,"aw",%nobits
 1039              		.set	.LANCHOR0,. + 0
 1042              	f_timer_10ms:
 1043 0000 00       		.space	1
 1044              		.section	.bss.f_timer_30ms,"aw",%nobits
 1045              		.set	.LANCHOR2,. + 0
 1048              	f_timer_30ms:
 1049 0000 00       		.space	1
 1050              		.section	.bss.key_value,"aw",%nobits
 1051              		.set	.LANCHOR3,. + 0
 1054              	key_value:
 1055 0000 00       		.space	1
 1056              		.section	.bss.read_res,"aw",%nobits
 1057              		.set	.LANCHOR16,. + 0
 1060              	read_res:
 1061 0000 00       		.space	1
 1062              		.section	.bss.rx_buffer,"aw",%nobits
 1063              		.align	2
 1064              		.set	.LANCHOR5,. + 0
 1067              	rx_buffer:
 1068 0000 00000000 		.space	66
 1068      00000000 
 1068      00000000 
 1068      00000000 
 1068      00000000 
 1069              		.section	.bss.rx_temp,"aw",%nobits
 1070              		.set	.LANCHOR18,. + 0
 1073              	rx_temp:
 1074 0000 00       		.space	1
 1075              		.section	.bss.state,"aw",%nobits
 1076              		.set	.LANCHOR15,. + 0
 1079              	state:
 1080 0000 00       		.space	1
 1081              		.section	.bss.transmission_f,"aw",%nobits
 1082              		.set	.LANCHOR17,. + 0
 1085              	transmission_f:
 1086 0000 00       		.space	1
 1087              		.section	.data.seven_segment_table,"aw"
 1088              		.align	2
 1089              		.set	.LANCHOR9,. + 0
 1092              	seven_segment_table:
 1093 0000 3F065B4F 		.ascii	"?\006[Ofm}\007\177o_|X^{q@"
 1093      666D7D07 
 1093      7F6F5F7C 
 1093      585E7B71 
 1093      40
 1094              		.section	.data.start_cmd,"aw"
 1095              		.set	.LANCHOR11,. + 0
 1098              	start_cmd:
 1099 0000 02       		.byte	2
 1100              		.section	.data.stop_cmd,"aw"
 1101              		.set	.LANCHOR12,. + 0
 1104              	stop_cmd:
 1105 0000 03       		.byte	3
 1106              		.text
 1107              	.Letext0:
 1108              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
ARM GAS  /tmp/cczjtYZB.s 			page 32


 1109              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1110              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1111              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1112              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1113              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1114              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1115              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1116              		.file 11 "Core/Inc/tim.h"
 1117              		.file 12 "Core/Inc/usart.h"
 1118              		.file 13 "Core/Inc/buffer.h"
 1119              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1120              		.file 15 "Core/Inc/message.h"
 1121              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1122              		.file 17 "Core/Inc/gpio.h"
 1123              		.file 18 "<built-in>"
ARM GAS  /tmp/cczjtYZB.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cczjtYZB.s:16     .text.task_timer:0000000000000000 $t
     /tmp/cczjtYZB.s:24     .text.task_timer:0000000000000000 task_timer
     /tmp/cczjtYZB.s:72     .text.task_timer:000000000000002c $d
     /tmp/cczjtYZB.s:79     .text.seven_segment_display:0000000000000000 $t
     /tmp/cczjtYZB.s:86     .text.seven_segment_display:0000000000000000 seven_segment_display
     /tmp/cczjtYZB.s:108    .text.seven_segment_display:000000000000000c $d
     /tmp/cczjtYZB.s:113    .text.key_read_task:0000000000000000 $t
     /tmp/cczjtYZB.s:120    .text.key_read_task:0000000000000000 key_read_task
     /tmp/cczjtYZB.s:194    .text.key_read_task:0000000000000048 $d
     /tmp/cczjtYZB.s:202    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/cczjtYZB.s:209    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/cczjtYZB.s:284    .text.RS485_Read_Message:0000000000000048 $d
     /tmp/cczjtYZB.s:293    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/cczjtYZB.s:300    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/cczjtYZB.s:370    .text.RS485_Send_Message:0000000000000058 $d
     /tmp/cczjtYZB.s:382    .text.main_task:0000000000000000 $t
     /tmp/cczjtYZB.s:389    .text.main_task:0000000000000000 main_task
     /tmp/cczjtYZB.s:545    .text.main_task:00000000000000a4 $d
     /tmp/cczjtYZB.s:556    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cczjtYZB.s:563    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cczjtYZB.s:590    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/cczjtYZB.s:596    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cczjtYZB.s:603    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cczjtYZB.s:706    .text.HAL_UART_RxCpltCallback:0000000000000070 $d
     /tmp/cczjtYZB.s:717    .text.Error_Handler:0000000000000000 $t
     /tmp/cczjtYZB.s:724    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cczjtYZB.s:756    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cczjtYZB.s:763    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cczjtYZB.s:866    .text.main:0000000000000000 $t
     /tmp/cczjtYZB.s:873    .text.main:0000000000000000 main
     /tmp/cczjtYZB.s:950    .text.main:0000000000000054 $d
     /tmp/cczjtYZB.s:1092   .data.seven_segment_table:0000000000000000 seven_segment_table
     /tmp/cczjtYZB.s:1017   .bss.digit:0000000000000000 digit
     /tmp/cczjtYZB.s:1023   .bss.event:0000000000000000 event
     /tmp/cczjtYZB.s:1079   .bss.state:0000000000000000 state
     /tmp/cczjtYZB.s:992    .bss.RX_msg:0000000000000000 RX_msg
     /tmp/cczjtYZB.s:999    .bss.TX_msg:0000000000000000 TX_msg
     /tmp/cczjtYZB.s:985    .bss.ID:0000000000000000 ID
     /tmp/cczjtYZB.s:1030   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/cczjtYZB.s:1067   .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/cczjtYZB.s:1104   .data.stop_cmd:0000000000000000 stop_cmd
     /tmp/cczjtYZB.s:1098   .data.start_cmd:0000000000000000 start_cmd
     /tmp/cczjtYZB.s:1085   .bss.transmission_f:0000000000000000 transmission_f
     /tmp/cczjtYZB.s:1073   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/cczjtYZB.s:1060   .bss.read_res:0000000000000000 read_res
     /tmp/cczjtYZB.s:1004   .bss.curr_event:0000000000000000 curr_event
     /tmp/cczjtYZB.s:1054   .bss.key_value:0000000000000000 key_value
     /tmp/cczjtYZB.s:1010   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/cczjtYZB.s:1048   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/cczjtYZB.s:1042   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/cczjtYZB.s:1036   .bss.f_busy:0000000000000000 f_busy
     /tmp/cczjtYZB.s:986    .bss.ID:0000000000000000 $d
     /tmp/cczjtYZB.s:988    .bss.RX_msg:0000000000000000 $d
     /tmp/cczjtYZB.s:995    .bss.TX_msg:0000000000000000 $d
     /tmp/cczjtYZB.s:1005   .bss.curr_event:0000000000000000 $d
ARM GAS  /tmp/cczjtYZB.s 			page 34


     /tmp/cczjtYZB.s:1011   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/cczjtYZB.s:1013   .bss.digit:0000000000000000 $d
     /tmp/cczjtYZB.s:1024   .bss.event:0000000000000000 $d
     /tmp/cczjtYZB.s:1026   .bss.event_buffer:0000000000000000 $d
     /tmp/cczjtYZB.s:1037   .bss.f_busy:0000000000000000 $d
     /tmp/cczjtYZB.s:1043   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/cczjtYZB.s:1049   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/cczjtYZB.s:1055   .bss.key_value:0000000000000000 $d
     /tmp/cczjtYZB.s:1061   .bss.read_res:0000000000000000 $d
     /tmp/cczjtYZB.s:1063   .bss.rx_buffer:0000000000000000 $d
     /tmp/cczjtYZB.s:1074   .bss.rx_temp:0000000000000000 $d
     /tmp/cczjtYZB.s:1080   .bss.state:0000000000000000 $d
     /tmp/cczjtYZB.s:1086   .bss.transmission_f:0000000000000000 $d
     /tmp/cczjtYZB.s:1088   .data.seven_segment_table:0000000000000000 $d

UNDEFINED SYMBOLS
buffer_push
buffer_to_message
HAL_GPIO_WritePin
HAL_UART_Transmit
huart1
buffer_pop
htim1
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_USART1_UART_Init
HAL_TIM_Base_Start_IT
