ARM GAS  /tmp/ccIit0WQ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.task_timer,"ax",%progbits
  16              		.align	1
  17              		.global	task_timer
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	task_timer:
  25              	.LFB67:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "message.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccIit0WQ.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** uint8_t f_timer_10ms=0;
  48:Core/Src/main.c **** uint8_t f_timer_30ms=0;
  49:Core/Src/main.c **** uint8_t d_timer_30ms;
  50:Core/Src/main.c **** uint8_t key_value;
  51:Core/Src/main.c **** uint8_t curr_event;
  52:Core/Src/main.c **** //uint8_t bufferEvent[64];
  53:Core/Src/main.c **** uint8_t rx_temp;
  54:Core/Src/main.c **** uint8_t transmission_f;
  55:Core/Src/main.c **** uint8_t start_cmd=0x2;
  56:Core/Src/main.c **** uint8_t stop_cmd=0x3;
  57:Core/Src/main.c **** circular_buffer rx_buffer;
  58:Core/Src/main.c **** circular_buffer event_buffer;
  59:Core/Src/main.c **** uint8_t ID;
  60:Core/Src/main.c **** uint8_t TX_msg[4];
  61:Core/Src/main.c **** uint8_t RX_msg[4];
  62:Core/Src/main.c **** uint8_t state,event;
  63:Core/Src/main.c **** int digit;
  64:Core/Src/main.c **** uint8_t seven_segment_table[17] = {	0b0111111,	// '0'
  65:Core/Src/main.c **** 		                            	 0b0000110,	// '1'
  66:Core/Src/main.c **** 		   	                           0b1011011,	// '2'
  67:Core/Src/main.c **** 			                             0b1001111,	// '3'
  68:Core/Src/main.c **** 			                             0b1100110,	// '4'
  69:Core/Src/main.c ****                                    0b1101101,	// '5'
  70:Core/Src/main.c ****                                    0b1111101,	// '6'
  71:Core/Src/main.c ****                                    0b0000111,	// '7'
  72:Core/Src/main.c **** 			                             0b1111111,	// '8'
  73:Core/Src/main.c ****                                    0b1101111,	// '9'
  74:Core/Src/main.c ****                                    0b1011111,	// 'a'  --10
  75:Core/Src/main.c ****                                    0b1111100,	// 'b'  --11
  76:Core/Src/main.c **** 			                             0b1011000,	// 'c'  --14
  77:Core/Src/main.c ****                                    0b1011110,	// 'd'  --13
  78:Core/Src/main.c ****                                    0b1111011,	// 'e'	--14
  79:Core/Src/main.c ****                                    0b1110001,	// 'f'  --15
  80:Core/Src/main.c ****                                    0b1000000 	// '-'  --16
  81:Core/Src/main.c **** };
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END PV */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  88:Core/Src/main.c **** void SystemClock_Config(void);
  89:Core/Src/main.c **** /* USER CODE BEGIN PFP */
ARM GAS  /tmp/ccIit0WQ.s 			page 3


  90:Core/Src/main.c **** void task_timer(void);
  91:Core/Src/main.c **** void seven_segment_display(char input);
  92:Core/Src/main.c **** void key_read_task(void);
  93:Core/Src/main.c **** void main_task(void);
  94:Core/Src/main.c **** void RS485_Send_Message(void);
  95:Core/Src/main.c **** void RS485_Read_Message(void);
  96:Core/Src/main.c **** /* USER CODE END PFP */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  99:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* USER CODE END 0 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /**
 104:Core/Src/main.c ****   * @brief  The application entry point.
 105:Core/Src/main.c ****   * @retval int
 106:Core/Src/main.c ****   */
 107:Core/Src/main.c **** int main(void)
 108:Core/Src/main.c **** {
 109:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END 1 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 116:Core/Src/main.c ****   HAL_Init();
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE END Init */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Configure the system clock */
 123:Core/Src/main.c ****   SystemClock_Config();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE END SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Initialize all configured peripherals */
 130:Core/Src/main.c ****   MX_GPIO_Init();
 131:Core/Src/main.c ****   MX_TIM1_Init();
 132:Core/Src/main.c ****   MX_USART1_UART_Init();
 133:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 134:Core/Src/main.c ****   
 135:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);  
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1,&rx_temp, 1);
 138:Core/Src/main.c ****   /* USER CODE END 2 */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Infinite loop */
 141:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 142:Core/Src/main.c ****   state = STATE_WAITING_REQUEST;
 143:Core/Src/main.c ****   event = EVENT_RESET;
 144:Core/Src/main.c ****   digit=16;
 145:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 146:Core/Src/main.c **** 
ARM GAS  /tmp/ccIit0WQ.s 			page 4


 147:Core/Src/main.c ****   while (1)
 148:Core/Src/main.c ****   {
 149:Core/Src/main.c ****     /* USER CODE END WHILE */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 152:Core/Src/main.c ****      
 153:Core/Src/main.c ****       
 154:Core/Src/main.c ****       task_timer();
 155:Core/Src/main.c ****       key_read_task();
 156:Core/Src/main.c ****       main_task();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c ****   /* USER CODE END 3 */
 159:Core/Src/main.c **** }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /**
 162:Core/Src/main.c ****   * @brief System Clock Configuration
 163:Core/Src/main.c ****   * @retval None
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** void SystemClock_Config(void)
 166:Core/Src/main.c **** {
 167:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 168:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 171:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 180:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 188:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c **** }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** void task_timer(void)
 203:Core/Src/main.c **** {
ARM GAS  /tmp/ccIit0WQ.s 			page 5


  27              		.loc 1 203 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 204:Core/Src/main.c ****   if (!f_timer_10ms) return;
  32              		.loc 1 204 3 view .LVU1
  33              		.loc 1 204 7 is_stmt 0 view .LVU2
  34 0000 0A4B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36              		.loc 1 204 6 view .LVU3
  37 0004 4BB1     		cbz	r3, .L1
 205:Core/Src/main.c ****   f_timer_10ms=0;
  38              		.loc 1 205 3 is_stmt 1 view .LVU4
  39              		.loc 1 205 15 is_stmt 0 view .LVU5
  40 0006 094B     		ldr	r3, .L4
  41 0008 0022     		movs	r2, #0
  42 000a 1A70     		strb	r2, [r3]
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   d_timer_30ms++;
  43              		.loc 1 207 3 is_stmt 1 view .LVU6
  44              		.loc 1 207 15 is_stmt 0 view .LVU7
  45 000c 084A     		ldr	r2, .L4+4
  46 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  47 0010 0133     		adds	r3, r3, #1
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 1370     		strb	r3, [r2]
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   if(d_timer_30ms==3){
  50              		.loc 1 209 3 is_stmt 1 view .LVU8
  51              		.loc 1 209 5 is_stmt 0 view .LVU9
  52 0016 032B     		cmp	r3, #3
  53 0018 00D0     		beq	.L3
  54              	.L1:
 210:Core/Src/main.c ****     d_timer_30ms =0;
 211:Core/Src/main.c ****     f_timer_30ms=1;
 212:Core/Src/main.c ****     
 213:Core/Src/main.c ****     
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c ****   
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** }
  55              		.loc 1 217 1 view .LVU10
  56 001a 7047     		bx	lr
  57              	.L3:
 210:Core/Src/main.c ****     d_timer_30ms =0;
  58              		.loc 1 210 5 is_stmt 1 view .LVU11
 210:Core/Src/main.c ****     d_timer_30ms =0;
  59              		.loc 1 210 18 is_stmt 0 view .LVU12
  60 001c 1346     		mov	r3, r2
  61 001e 0022     		movs	r2, #0
  62 0020 1A70     		strb	r2, [r3]
 211:Core/Src/main.c ****     
  63              		.loc 1 211 5 is_stmt 1 view .LVU13
 211:Core/Src/main.c ****     
  64              		.loc 1 211 17 is_stmt 0 view .LVU14
  65 0022 044B     		ldr	r3, .L4+8
ARM GAS  /tmp/ccIit0WQ.s 			page 6


  66 0024 0122     		movs	r2, #1
  67 0026 1A70     		strb	r2, [r3]
  68 0028 F7E7     		b	.L1
  69              	.L5:
  70 002a 00BF     		.align	2
  71              	.L4:
  72 002c 00000000 		.word	.LANCHOR0
  73 0030 00000000 		.word	.LANCHOR1
  74 0034 00000000 		.word	.LANCHOR2
  75              		.cfi_endproc
  76              	.LFE67:
  78              		.section	.text.seven_segment_display,"ax",%progbits
  79              		.align	1
  80              		.global	seven_segment_display
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	seven_segment_display:
  87              	.LVL0:
  88              	.LFB68:
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** void seven_segment_display(char input)
 220:Core/Src/main.c **** {
  89              		.loc 1 220 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 221:Core/Src/main.c ****    uint32_t mask =  a_Pin|b_Pin|c_Pin|d_Pin|e_Pin|f_Pin|g_Pin;
  94              		.loc 1 221 4 view .LVU16
 222:Core/Src/main.c ****    uint32_t val = (uint32_t)input & mask;
  95              		.loc 1 222 4 view .LVU17
  96              		.loc 1 222 13 is_stmt 0 view .LVU18
  97 0000 00F07F00 		and	r0, r0, #127
  98              	.LVL1:
 223:Core/Src/main.c ****    SEGMENT_PORT->ODR = val;
  99              		.loc 1 223 4 is_stmt 1 view .LVU19
 100              		.loc 1 223 22 is_stmt 0 view .LVU20
 101 0004 014B     		ldr	r3, .L7
 102 0006 D860     		str	r0, [r3, #12]
 224:Core/Src/main.c **** }
 103              		.loc 1 224 1 view .LVU21
 104 0008 7047     		bx	lr
 105              	.L8:
 106 000a 00BF     		.align	2
 107              	.L7:
 108 000c 00080140 		.word	1073809408
 109              		.cfi_endproc
 110              	.LFE68:
 112              		.section	.text.key_read_task,"ax",%progbits
 113              		.align	1
 114              		.global	key_read_task
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu softvfp
ARM GAS  /tmp/ccIit0WQ.s 			page 7


 120              	key_read_task:
 121              	.LFB69:
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** void key_read_task(void)
 227:Core/Src/main.c **** {
 122              		.loc 1 227 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126 0000 08B5     		push	{r3, lr}
 127              	.LCFI0:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 3, -8
 130              		.cfi_offset 14, -4
 228:Core/Src/main.c ****   if(!f_timer_30ms) return;
 131              		.loc 1 228 3 view .LVU23
 132              		.loc 1 228 6 is_stmt 0 view .LVU24
 133 0002 114B     		ldr	r3, .L15
 134 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 135              		.loc 1 228 5 view .LVU25
 136 0006 A3B1     		cbz	r3, .L9
 229:Core/Src/main.c ****   f_timer_30ms =0; 
 137              		.loc 1 229 3 is_stmt 1 view .LVU26
 138              		.loc 1 229 16 is_stmt 0 view .LVU27
 139 0008 0F4B     		ldr	r3, .L15
 140 000a 0022     		movs	r2, #0
 141 000c 1A70     		strb	r2, [r3]
 230:Core/Src/main.c ****    
 231:Core/Src/main.c ****  
 232:Core/Src/main.c ****   unsigned char key_pindata = (uint8_t)(key_GPIO_Port->IDR & key_Pin);
 142              		.loc 1 232 3 is_stmt 1 view .LVU28
 143              		.loc 1 232 54 is_stmt 0 view .LVU29
 144 000e 0F4B     		ldr	r3, .L15+4
 145 0010 9A68     		ldr	r2, [r3, #8]
 146              	.LVL2:
 233:Core/Src/main.c ****  
 234:Core/Src/main.c ****   key_value = key_value<<1;
 147              		.loc 1 234 3 is_stmt 1 view .LVU30
 148              		.loc 1 234 24 is_stmt 0 view .LVU31
 149 0012 0F49     		ldr	r1, .L15+8
 150 0014 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 151 0016 5B00     		lsls	r3, r3, #1
 152 0018 DBB2     		uxtb	r3, r3
 153              		.loc 1 234 13 view .LVU32
 154 001a 0B70     		strb	r3, [r1]
 235:Core/Src/main.c ****   key_value &= 0b00001110;
 155              		.loc 1 235 3 is_stmt 1 view .LVU33
 156              		.loc 1 235 13 is_stmt 0 view .LVU34
 157 001c 03F00E03 		and	r3, r3, #14
 158 0020 0B70     		strb	r3, [r1]
 236:Core/Src/main.c ****   key_value |= key_pindata&0X1;
 159              		.loc 1 236 3 is_stmt 1 view .LVU35
 160              		.loc 1 236 27 is_stmt 0 view .LVU36
 161 0022 02F00102 		and	r2, r2, #1
 162              	.LVL3:
 163              		.loc 1 236 13 view .LVU37
 164 0026 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccIit0WQ.s 			page 8


 165 0028 0B70     		strb	r3, [r1]
 237:Core/Src/main.c ****  
 238:Core/Src/main.c ****   if (key_value==KEY_PRESSED){
 166              		.loc 1 238 3 is_stmt 1 view .LVU38
 167              		.loc 1 238 6 is_stmt 0 view .LVU39
 168 002a 0C2B     		cmp	r3, #12
 169 002c 02D0     		beq	.L13
 239:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 240:Core/Src/main.c ****       
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   }else if(key_value==KEY_RELEASED){
 170              		.loc 1 242 9 is_stmt 1 view .LVU40
 171              		.loc 1 242 11 is_stmt 0 view .LVU41
 172 002e 032B     		cmp	r3, #3
 173 0030 05D0     		beq	.L14
 174              	.L9:
 243:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_RELEASED);
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** }
 175              		.loc 1 246 1 view .LVU42
 176 0032 08BD     		pop	{r3, pc}
 177              	.L13:
 239:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 178              		.loc 1 239 7 is_stmt 1 view .LVU43
 179 0034 0121     		movs	r1, #1
 180 0036 0748     		ldr	r0, .L15+12
 181 0038 FFF7FEFF 		bl	buffer_push
 182              	.LVL4:
 183 003c F9E7     		b	.L9
 184              	.L14:
 243:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_RELEASED);
 185              		.loc 1 243 7 view .LVU44
 186 003e 0221     		movs	r1, #2
 187 0040 0448     		ldr	r0, .L15+12
 188 0042 FFF7FEFF 		bl	buffer_push
 189              	.LVL5:
 190 0046 F4E7     		b	.L9
 191              	.L16:
 192              		.align	2
 193              	.L15:
 194 0048 00000000 		.word	.LANCHOR2
 195 004c 000C0140 		.word	1073810432
 196 0050 00000000 		.word	.LANCHOR3
 197 0054 00000000 		.word	.LANCHOR4
 198              		.cfi_endproc
 199              	.LFE69:
 201              		.section	.text.main_task,"ax",%progbits
 202              		.align	1
 203              		.global	main_task
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu softvfp
 209              	main_task:
 210              	.LFB70:
 247:Core/Src/main.c **** 
ARM GAS  /tmp/ccIit0WQ.s 			page 9


 248:Core/Src/main.c **** void main_task(void)
 249:Core/Src/main.c **** {
 211              		.loc 1 249 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 08B5     		push	{r3, lr}
 216              	.LCFI1:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 3, -8
 219              		.cfi_offset 14, -4
 250:Core/Src/main.c ****   	if (event_buffer.head!=event_buffer.tail){
 220              		.loc 1 250 4 view .LVU46
 221              		.loc 1 250 20 is_stmt 0 view .LVU47
 222 0002 1D4B     		ldr	r3, .L28
 223 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 224              		.loc 1 250 39 view .LVU48
 225 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 226              		.loc 1 250 7 view .LVU49
 227 0008 9A42     		cmp	r2, r3
 228 000a 07D1     		bne	.L25
 229              	.L18:
 251:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 252:Core/Src/main.c **** 	}
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****     switch(state)
 230              		.loc 1 254 5 is_stmt 1 view .LVU50
 231 000c 1B4B     		ldr	r3, .L28+4
 232 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 233 0010 012B     		cmp	r3, #1
 234 0012 26D0     		beq	.L19
 235 0014 022B     		cmp	r3, #2
 236 0016 28D0     		beq	.L20
 237 0018 33B1     		cbz	r3, .L26
 238              	.L17:
 255:Core/Src/main.c ****     {
 256:Core/Src/main.c ****       case STATE_WAITING_REQUEST:
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****             if(event == EVENT_KEY_PRESSED){
 259:Core/Src/main.c ****                 digit++;
 260:Core/Src/main.c **** #ifdef SLAVE_1
 261:Core/Src/main.c ****                 
 262:Core/Src/main.c ****                 if (digit>9){
 263:Core/Src/main.c ****                   digit=0;
 264:Core/Src/main.c ****                 }
 265:Core/Src/main.c **** #endif
 266:Core/Src/main.c **** #ifdef SLAVE_2
 267:Core/Src/main.c ****                 
 268:Core/Src/main.c ****                 if (digit>15){
 269:Core/Src/main.c ****                   digit=10;
 270:Core/Src/main.c ****                 }
 271:Core/Src/main.c **** #endif
 272:Core/Src/main.c ****                 seven_segment_display(seven_segment_table[digit]);
 273:Core/Src/main.c ****                 event = EVENT_RESET;
 274:Core/Src/main.c ****                 ///state = STATE_SENDING_RESPOND;
 275:Core/Src/main.c ****               }
 276:Core/Src/main.c ****             else if(event == EVENT_RX_COMPLETE){
ARM GAS  /tmp/ccIit0WQ.s 			page 10


 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****                 state = STATE_READ_MESSAGE;
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****             }
 281:Core/Src/main.c ****       
 282:Core/Src/main.c ****             break;
 283:Core/Src/main.c ****       
 284:Core/Src/main.c ****       case STATE_SENDING_RESPOND:
 285:Core/Src/main.c ****           RS485_Send_Message();
 286:Core/Src/main.c ****           state= STATE_WAITING_REQUEST;
 287:Core/Src/main.c ****          
 288:Core/Src/main.c ****           break;
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****       case STATE_READ_MESSAGE:
 291:Core/Src/main.c ****           RS485_Read_Message();
 292:Core/Src/main.c ****           state= STATE_WAITING_REQUEST;
 293:Core/Src/main.c ****           event = EVENT_RESET;
 294:Core/Src/main.c ****           break;
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****       
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****     }
 299:Core/Src/main.c **** }
 239              		.loc 1 299 1 is_stmt 0 view .LVU51
 240 001a 08BD     		pop	{r3, pc}
 241              	.L25:
 251:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 242              		.loc 1 251 3 is_stmt 1 view .LVU52
 251:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 243              		.loc 1 251 11 is_stmt 0 view .LVU53
 244 001c 1648     		ldr	r0, .L28
 245 001e FFF7FEFF 		bl	buffer_pop
 246              	.LVL6:
 251:Core/Src/main.c **** 		event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 247              		.loc 1 251 9 view .LVU54
 248 0022 174B     		ldr	r3, .L28+8
 249 0024 1870     		strb	r0, [r3]
 250 0026 F1E7     		b	.L18
 251              	.L26:
 258:Core/Src/main.c ****                 digit++;
 252              		.loc 1 258 13 is_stmt 1 view .LVU55
 258:Core/Src/main.c ****                 digit++;
 253              		.loc 1 258 22 is_stmt 0 view .LVU56
 254 0028 154B     		ldr	r3, .L28+8
 255 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 258:Core/Src/main.c ****                 digit++;
 256              		.loc 1 258 15 view .LVU57
 257 002c 012B     		cmp	r3, #1
 258 002e 05D0     		beq	.L27
 276:Core/Src/main.c **** 
 259              		.loc 1 276 18 is_stmt 1 view .LVU58
 276:Core/Src/main.c **** 
 260              		.loc 1 276 20 is_stmt 0 view .LVU59
 261 0030 032B     		cmp	r3, #3
 262 0032 F2D1     		bne	.L17
 278:Core/Src/main.c **** 
 263              		.loc 1 278 17 is_stmt 1 view .LVU60
ARM GAS  /tmp/ccIit0WQ.s 			page 11


 278:Core/Src/main.c **** 
 264              		.loc 1 278 23 is_stmt 0 view .LVU61
 265 0034 114B     		ldr	r3, .L28+4
 266 0036 0222     		movs	r2, #2
 267 0038 1A70     		strb	r2, [r3]
 268 003a EEE7     		b	.L17
 269              	.L27:
 259:Core/Src/main.c **** #ifdef SLAVE_1
 270              		.loc 1 259 17 is_stmt 1 view .LVU62
 259:Core/Src/main.c **** #ifdef SLAVE_1
 271              		.loc 1 259 22 is_stmt 0 view .LVU63
 272 003c 114A     		ldr	r2, .L28+12
 273 003e 1368     		ldr	r3, [r2]
 274 0040 0133     		adds	r3, r3, #1
 275 0042 1360     		str	r3, [r2]
 268:Core/Src/main.c ****                   digit=10;
 276              		.loc 1 268 17 is_stmt 1 view .LVU64
 268:Core/Src/main.c ****                   digit=10;
 277              		.loc 1 268 20 is_stmt 0 view .LVU65
 278 0044 0F2B     		cmp	r3, #15
 279 0046 02DD     		ble	.L23
 269:Core/Src/main.c ****                 }
 280              		.loc 1 269 19 is_stmt 1 view .LVU66
 269:Core/Src/main.c ****                 }
 281              		.loc 1 269 24 is_stmt 0 view .LVU67
 282 0048 1346     		mov	r3, r2
 283 004a 0A22     		movs	r2, #10
 284 004c 1A60     		str	r2, [r3]
 285              	.L23:
 272:Core/Src/main.c ****                 event = EVENT_RESET;
 286              		.loc 1 272 17 is_stmt 1 view .LVU68
 287 004e 0D4B     		ldr	r3, .L28+12
 288 0050 1B68     		ldr	r3, [r3]
 289 0052 0D4A     		ldr	r2, .L28+16
 290 0054 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 291 0056 FFF7FEFF 		bl	seven_segment_display
 292              	.LVL7:
 273:Core/Src/main.c ****                 ///state = STATE_SENDING_RESPOND;
 293              		.loc 1 273 17 view .LVU69
 273:Core/Src/main.c ****                 ///state = STATE_SENDING_RESPOND;
 294              		.loc 1 273 23 is_stmt 0 view .LVU70
 295 005a 094B     		ldr	r3, .L28+8
 296 005c 0022     		movs	r2, #0
 297 005e 1A70     		strb	r2, [r3]
 298 0060 DBE7     		b	.L17
 299              	.L19:
 285:Core/Src/main.c ****           state= STATE_WAITING_REQUEST;
 300              		.loc 1 285 11 is_stmt 1 view .LVU71
 286:Core/Src/main.c ****          
 301              		.loc 1 286 11 view .LVU72
 286:Core/Src/main.c ****          
 302              		.loc 1 286 16 is_stmt 0 view .LVU73
 303 0062 064B     		ldr	r3, .L28+4
 304 0064 0022     		movs	r2, #0
 305 0066 1A70     		strb	r2, [r3]
 288:Core/Src/main.c **** 
 306              		.loc 1 288 11 is_stmt 1 view .LVU74
ARM GAS  /tmp/ccIit0WQ.s 			page 12


 307 0068 D7E7     		b	.L17
 308              	.L20:
 291:Core/Src/main.c ****           state= STATE_WAITING_REQUEST;
 309              		.loc 1 291 11 view .LVU75
 292:Core/Src/main.c ****           event = EVENT_RESET;
 310              		.loc 1 292 11 view .LVU76
 292:Core/Src/main.c ****           event = EVENT_RESET;
 311              		.loc 1 292 16 is_stmt 0 view .LVU77
 312 006a 0023     		movs	r3, #0
 313 006c 034A     		ldr	r2, .L28+4
 314 006e 1370     		strb	r3, [r2]
 293:Core/Src/main.c ****           break;
 315              		.loc 1 293 11 is_stmt 1 view .LVU78
 293:Core/Src/main.c ****           break;
 316              		.loc 1 293 17 is_stmt 0 view .LVU79
 317 0070 034A     		ldr	r2, .L28+8
 318 0072 1370     		strb	r3, [r2]
 294:Core/Src/main.c **** 
 319              		.loc 1 294 11 is_stmt 1 view .LVU80
 320              		.loc 1 299 1 is_stmt 0 view .LVU81
 321 0074 D1E7     		b	.L17
 322              	.L29:
 323 0076 00BF     		.align	2
 324              	.L28:
 325 0078 00000000 		.word	.LANCHOR4
 326 007c 00000000 		.word	.LANCHOR6
 327 0080 00000000 		.word	.LANCHOR5
 328 0084 00000000 		.word	.LANCHOR7
 329 0088 00000000 		.word	.LANCHOR8
 330              		.cfi_endproc
 331              	.LFE70:
 333              		.section	.text.RS485_Read_Message,"ax",%progbits
 334              		.align	1
 335              		.global	RS485_Read_Message
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 339              		.fpu softvfp
 341              	RS485_Read_Message:
 342              	.LFB71:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** void RS485_Read_Message(void){
 343              		.loc 1 301 30 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   
 305:Core/Src/main.c **** }
 348              		.loc 1 305 1 view .LVU83
 349 0000 7047     		bx	lr
 350              		.cfi_endproc
 351              	.LFE71:
 353              		.section	.text.RS485_Send_Message,"ax",%progbits
 354              		.align	1
ARM GAS  /tmp/ccIit0WQ.s 			page 13


 355              		.global	RS485_Send_Message
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 359              		.fpu softvfp
 361              	RS485_Send_Message:
 362              	.LFB72:
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** void RS485_Send_Message(void)
 308:Core/Src/main.c **** {
 363              		.loc 1 308 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** }
 368              		.loc 1 311 1 view .LVU85
 369 0000 7047     		bx	lr
 370              		.cfi_endproc
 371              	.LFE72:
 373              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 374              		.align	1
 375              		.global	HAL_TIM_PeriodElapsedCallback
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 379              		.fpu softvfp
 381              	HAL_TIM_PeriodElapsedCallback:
 382              	.LVL8:
 383              	.LFB73:
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 314:Core/Src/main.c **** {
 384              		.loc 1 314 1 view -0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 315:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
 316:Core/Src/main.c ****   if (htim == &htim1)
 389              		.loc 1 316 3 view .LVU87
 390              		.loc 1 316 6 is_stmt 0 view .LVU88
 391 0000 034B     		ldr	r3, .L35
 392 0002 8342     		cmp	r3, r0
 393 0004 00D0     		beq	.L34
 394              	.L32:
 317:Core/Src/main.c ****   {
 318:Core/Src/main.c **** 	  f_timer_10ms=1;
 319:Core/Src/main.c ****   }
 320:Core/Src/main.c ****   
 321:Core/Src/main.c **** }
 395              		.loc 1 321 1 view .LVU89
 396 0006 7047     		bx	lr
 397              	.L34:
 318:Core/Src/main.c ****   }
ARM GAS  /tmp/ccIit0WQ.s 			page 14


 398              		.loc 1 318 4 is_stmt 1 view .LVU90
 318:Core/Src/main.c ****   }
 399              		.loc 1 318 16 is_stmt 0 view .LVU91
 400 0008 024B     		ldr	r3, .L35+4
 401 000a 0122     		movs	r2, #1
 402 000c 1A70     		strb	r2, [r3]
 403              		.loc 1 321 1 view .LVU92
 404 000e FAE7     		b	.L32
 405              	.L36:
 406              		.align	2
 407              	.L35:
 408 0010 00000000 		.word	htim1
 409 0014 00000000 		.word	.LANCHOR0
 410              		.cfi_endproc
 411              	.LFE73:
 413              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 414              		.align	1
 415              		.global	HAL_UART_RxCpltCallback
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu softvfp
 421              	HAL_UART_RxCpltCallback:
 422              	.LVL9:
 423              	.LFB74:
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 326:Core/Src/main.c **** {
 424              		.loc 1 326 1 is_stmt 1 view -0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              		.loc 1 326 1 is_stmt 0 view .LVU94
 429 0000 08B5     		push	{r3, lr}
 430              	.LCFI2:
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 3, -8
 433              		.cfi_offset 14, -4
 327:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** 	if (huart == &huart1)
 434              		.loc 1 329 2 is_stmt 1 view .LVU95
 435              		.loc 1 329 5 is_stmt 0 view .LVU96
 436 0002 114B     		ldr	r3, .L47
 437 0004 8342     		cmp	r3, r0
 438 0006 00D0     		beq	.L43
 439              	.LVL10:
 440              	.L37:
 330:Core/Src/main.c **** 	{ 
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****     if (rx_temp==0x2)
 333:Core/Src/main.c **** 		{
 334:Core/Src/main.c **** 				transmission_f=1;
 335:Core/Src/main.c **** 		}
 336:Core/Src/main.c **** 		else if (rx_temp==0x3)
ARM GAS  /tmp/ccIit0WQ.s 			page 15


 337:Core/Src/main.c **** 		{
 338:Core/Src/main.c **** 				transmission_f=0;
 339:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 340:Core/Src/main.c **** 		}
 341:Core/Src/main.c **** 		else{
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** 			if (transmission_f)
 344:Core/Src/main.c **** 			{
 345:Core/Src/main.c **** 				 buffer_push(&rx_buffer,rx_temp);
 346:Core/Src/main.c **** 			}
 347:Core/Src/main.c **** 		}
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 350:Core/Src/main.c ****     
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c **** }
 441              		.loc 1 352 1 view .LVU97
 442 0008 08BD     		pop	{r3, pc}
 443              	.LVL11:
 444              	.L43:
 332:Core/Src/main.c **** 		{
 445              		.loc 1 332 5 is_stmt 1 view .LVU98
 332:Core/Src/main.c **** 		{
 446              		.loc 1 332 16 is_stmt 0 view .LVU99
 447 000a 104B     		ldr	r3, .L47+4
 448 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 332:Core/Src/main.c **** 		{
 449              		.loc 1 332 8 view .LVU100
 450 000e 0229     		cmp	r1, #2
 451 0010 0AD0     		beq	.L44
 336:Core/Src/main.c **** 		{
 452              		.loc 1 336 8 is_stmt 1 view .LVU101
 336:Core/Src/main.c **** 		{
 453              		.loc 1 336 11 is_stmt 0 view .LVU102
 454 0012 0329     		cmp	r1, #3
 455 0014 0CD0     		beq	.L45
 343:Core/Src/main.c **** 			{
 456              		.loc 1 343 4 is_stmt 1 view .LVU103
 343:Core/Src/main.c **** 			{
 457              		.loc 1 343 8 is_stmt 0 view .LVU104
 458 0016 0E4B     		ldr	r3, .L47+8
 459 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 343:Core/Src/main.c **** 			{
 460              		.loc 1 343 7 view .LVU105
 461 001a 83B9     		cbnz	r3, .L46
 462              	.LVL12:
 463              	.L40:
 349:Core/Src/main.c ****     
 464              		.loc 1 349 3 is_stmt 1 view .LVU106
 465 001c 0122     		movs	r2, #1
 466 001e 0B49     		ldr	r1, .L47+4
 467 0020 0948     		ldr	r0, .L47
 468 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
 469              	.LVL13:
 470              		.loc 1 352 1 is_stmt 0 view .LVU107
 471 0026 EFE7     		b	.L37
 472              	.LVL14:
ARM GAS  /tmp/ccIit0WQ.s 			page 16


 473              	.L44:
 334:Core/Src/main.c **** 		}
 474              		.loc 1 334 5 is_stmt 1 view .LVU108
 334:Core/Src/main.c **** 		}
 475              		.loc 1 334 19 is_stmt 0 view .LVU109
 476 0028 094B     		ldr	r3, .L47+8
 477 002a 0122     		movs	r2, #1
 478 002c 1A70     		strb	r2, [r3]
 479 002e F5E7     		b	.L40
 480              	.L45:
 338:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 481              		.loc 1 338 5 is_stmt 1 view .LVU110
 338:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 482              		.loc 1 338 19 is_stmt 0 view .LVU111
 483 0030 074B     		ldr	r3, .L47+8
 484 0032 0022     		movs	r2, #0
 485 0034 1A70     		strb	r2, [r3]
 339:Core/Src/main.c **** 		}
 486              		.loc 1 339 5 is_stmt 1 view .LVU112
 487 0036 0748     		ldr	r0, .L47+12
 488              	.LVL15:
 339:Core/Src/main.c **** 		}
 489              		.loc 1 339 5 is_stmt 0 view .LVU113
 490 0038 FFF7FEFF 		bl	buffer_push
 491              	.LVL16:
 492 003c EEE7     		b	.L40
 493              	.LVL17:
 494              	.L46:
 345:Core/Src/main.c **** 			}
 495              		.loc 1 345 6 is_stmt 1 view .LVU114
 496 003e 0648     		ldr	r0, .L47+16
 497              	.LVL18:
 345:Core/Src/main.c **** 			}
 498              		.loc 1 345 6 is_stmt 0 view .LVU115
 499 0040 FFF7FEFF 		bl	buffer_push
 500              	.LVL19:
 501 0044 EAE7     		b	.L40
 502              	.L48:
 503 0046 00BF     		.align	2
 504              	.L47:
 505 0048 00000000 		.word	huart1
 506 004c 00000000 		.word	.LANCHOR9
 507 0050 00000000 		.word	.LANCHOR10
 508 0054 00000000 		.word	.LANCHOR4
 509 0058 00000000 		.word	.LANCHOR11
 510              		.cfi_endproc
 511              	.LFE74:
 513              		.section	.text.Error_Handler,"ax",%progbits
 514              		.align	1
 515              		.global	Error_Handler
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 519              		.fpu softvfp
 521              	Error_Handler:
 522              	.LFB75:
 353:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  /tmp/ccIit0WQ.s 			page 17


 354:Core/Src/main.c **** 
 355:Core/Src/main.c **** /**
 356:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 357:Core/Src/main.c ****   * @retval None
 358:Core/Src/main.c ****   */
 359:Core/Src/main.c **** void Error_Handler(void)
 360:Core/Src/main.c **** {
 523              		.loc 1 360 1 is_stmt 1 view -0
 524              		.cfi_startproc
 525              		@ Volatile: function does not return.
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 361:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 362:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 363:Core/Src/main.c ****   __disable_irq();
 529              		.loc 1 363 3 view .LVU117
 530              	.LBB4:
 531              	.LBI4:
 532              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccIit0WQ.s 			page 18


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  /tmp/ccIit0WQ.s 			page 19


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 533              		.loc 2 140 27 view .LVU118
 534              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 535              		.loc 2 142 3 view .LVU119
 536              		.syntax unified
 537              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 538 0000 72B6     		cpsid i
 539              	@ 0 "" 2
 540              		.thumb
 541              		.syntax unified
ARM GAS  /tmp/ccIit0WQ.s 			page 20


 542              	.L50:
 543              	.LBE5:
 544              	.LBE4:
 364:Core/Src/main.c ****   while (1)
 545              		.loc 1 364 3 discriminator 1 view .LVU120
 365:Core/Src/main.c ****   {
 366:Core/Src/main.c ****   }
 546              		.loc 1 366 3 discriminator 1 view .LVU121
 364:Core/Src/main.c ****   while (1)
 547              		.loc 1 364 9 discriminator 1 view .LVU122
 548 0002 FEE7     		b	.L50
 549              		.cfi_endproc
 550              	.LFE75:
 552              		.section	.text.SystemClock_Config,"ax",%progbits
 553              		.align	1
 554              		.global	SystemClock_Config
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 558              		.fpu softvfp
 560              	SystemClock_Config:
 561              	.LFB66:
 166:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 562              		.loc 1 166 1 view -0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 64
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566 0000 00B5     		push	{lr}
 567              	.LCFI3:
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 14, -4
 570 0002 91B0     		sub	sp, sp, #68
 571              	.LCFI4:
 572              		.cfi_def_cfa_offset 72
 167:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 573              		.loc 1 167 3 view .LVU124
 167:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 574              		.loc 1 167 22 is_stmt 0 view .LVU125
 575 0004 2822     		movs	r2, #40
 576 0006 0021     		movs	r1, #0
 577 0008 06A8     		add	r0, sp, #24
 578 000a FFF7FEFF 		bl	memset
 579              	.LVL20:
 168:Core/Src/main.c **** 
 580              		.loc 1 168 3 is_stmt 1 view .LVU126
 168:Core/Src/main.c **** 
 581              		.loc 1 168 22 is_stmt 0 view .LVU127
 582 000e 0023     		movs	r3, #0
 583 0010 0193     		str	r3, [sp, #4]
 584 0012 0293     		str	r3, [sp, #8]
 585 0014 0393     		str	r3, [sp, #12]
 586 0016 0493     		str	r3, [sp, #16]
 587 0018 0593     		str	r3, [sp, #20]
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 588              		.loc 1 173 3 is_stmt 1 view .LVU128
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 589              		.loc 1 173 36 is_stmt 0 view .LVU129
ARM GAS  /tmp/ccIit0WQ.s 			page 21


 590 001a 0122     		movs	r2, #1
 591 001c 0692     		str	r2, [sp, #24]
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 592              		.loc 1 174 3 is_stmt 1 view .LVU130
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 593              		.loc 1 174 30 is_stmt 0 view .LVU131
 594 001e 4FF48033 		mov	r3, #65536
 595 0022 0793     		str	r3, [sp, #28]
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 596              		.loc 1 175 3 is_stmt 1 view .LVU132
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 597              		.loc 1 176 3 view .LVU133
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 598              		.loc 1 176 30 is_stmt 0 view .LVU134
 599 0024 0A92     		str	r2, [sp, #40]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 600              		.loc 1 177 3 is_stmt 1 view .LVU135
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 601              		.loc 1 177 34 is_stmt 0 view .LVU136
 602 0026 0222     		movs	r2, #2
 603 0028 0D92     		str	r2, [sp, #52]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 604              		.loc 1 178 3 is_stmt 1 view .LVU137
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 605              		.loc 1 178 35 is_stmt 0 view .LVU138
 606 002a 0E93     		str	r3, [sp, #56]
 179:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 607              		.loc 1 179 3 is_stmt 1 view .LVU139
 180:Core/Src/main.c ****   {
 608              		.loc 1 180 3 view .LVU140
 180:Core/Src/main.c ****   {
 609              		.loc 1 180 7 is_stmt 0 view .LVU141
 610 002c 06A8     		add	r0, sp, #24
 611 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 612              	.LVL21:
 180:Core/Src/main.c ****   {
 613              		.loc 1 180 6 view .LVU142
 614 0032 88B9     		cbnz	r0, .L55
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 615              		.loc 1 187 3 is_stmt 1 view .LVU143
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 616              		.loc 1 187 31 is_stmt 0 view .LVU144
 617 0034 0F23     		movs	r3, #15
 618 0036 0193     		str	r3, [sp, #4]
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 619              		.loc 1 189 3 is_stmt 1 view .LVU145
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 620              		.loc 1 189 34 is_stmt 0 view .LVU146
 621 0038 0223     		movs	r3, #2
 622 003a 0293     		str	r3, [sp, #8]
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 623              		.loc 1 190 3 is_stmt 1 view .LVU147
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 624              		.loc 1 190 35 is_stmt 0 view .LVU148
 625 003c 8023     		movs	r3, #128
 626 003e 0393     		str	r3, [sp, #12]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccIit0WQ.s 			page 22


 627              		.loc 1 191 3 is_stmt 1 view .LVU149
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 628              		.loc 1 191 36 is_stmt 0 view .LVU150
 629 0040 4FF48063 		mov	r3, #1024
 630 0044 0493     		str	r3, [sp, #16]
 192:Core/Src/main.c **** 
 631              		.loc 1 192 3 is_stmt 1 view .LVU151
 192:Core/Src/main.c **** 
 632              		.loc 1 192 36 is_stmt 0 view .LVU152
 633 0046 0021     		movs	r1, #0
 634 0048 0591     		str	r1, [sp, #20]
 194:Core/Src/main.c ****   {
 635              		.loc 1 194 3 is_stmt 1 view .LVU153
 194:Core/Src/main.c ****   {
 636              		.loc 1 194 7 is_stmt 0 view .LVU154
 637 004a 01A8     		add	r0, sp, #4
 638 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 639              	.LVL22:
 194:Core/Src/main.c ****   {
 640              		.loc 1 194 6 view .LVU155
 641 0050 20B9     		cbnz	r0, .L56
 198:Core/Src/main.c **** 
 642              		.loc 1 198 1 view .LVU156
 643 0052 11B0     		add	sp, sp, #68
 644              	.LCFI5:
 645              		.cfi_remember_state
 646              		.cfi_def_cfa_offset 4
 647              		@ sp needed
 648 0054 5DF804FB 		ldr	pc, [sp], #4
 649              	.L55:
 650              	.LCFI6:
 651              		.cfi_restore_state
 182:Core/Src/main.c ****   }
 652              		.loc 1 182 5 is_stmt 1 view .LVU157
 653 0058 FFF7FEFF 		bl	Error_Handler
 654              	.LVL23:
 655              	.L56:
 196:Core/Src/main.c ****   }
 656              		.loc 1 196 5 view .LVU158
 657 005c FFF7FEFF 		bl	Error_Handler
 658              	.LVL24:
 659              		.cfi_endproc
 660              	.LFE66:
 662              		.section	.text.main,"ax",%progbits
 663              		.align	1
 664              		.global	main
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu softvfp
 670              	main:
 671              	.LFB65:
 108:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 672              		.loc 1 108 1 view -0
 673              		.cfi_startproc
 674              		@ Volatile: function does not return.
 675              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccIit0WQ.s 			page 23


 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677 0000 08B5     		push	{r3, lr}
 678              	.LCFI7:
 679              		.cfi_def_cfa_offset 8
 680              		.cfi_offset 3, -8
 681              		.cfi_offset 14, -4
 116:Core/Src/main.c **** 
 682              		.loc 1 116 3 view .LVU160
 683 0002 FFF7FEFF 		bl	HAL_Init
 684              	.LVL25:
 123:Core/Src/main.c **** 
 685              		.loc 1 123 3 view .LVU161
 686 0006 FFF7FEFF 		bl	SystemClock_Config
 687              	.LVL26:
 130:Core/Src/main.c ****   MX_TIM1_Init();
 688              		.loc 1 130 3 view .LVU162
 689 000a FFF7FEFF 		bl	MX_GPIO_Init
 690              	.LVL27:
 131:Core/Src/main.c ****   MX_USART1_UART_Init();
 691              		.loc 1 131 3 view .LVU163
 692 000e FFF7FEFF 		bl	MX_TIM1_Init
 693              	.LVL28:
 132:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 694              		.loc 1 132 3 view .LVU164
 695 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 696              	.LVL29:
 135:Core/Src/main.c **** 
 697              		.loc 1 135 3 view .LVU165
 698 0016 0D48     		ldr	r0, .L60
 699 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 700              	.LVL30:
 137:Core/Src/main.c ****   /* USER CODE END 2 */
 701              		.loc 1 137 3 view .LVU166
 702 001c 0122     		movs	r2, #1
 703 001e 0C49     		ldr	r1, .L60+4
 704 0020 0C48     		ldr	r0, .L60+8
 705 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
 706              	.LVL31:
 142:Core/Src/main.c ****   event = EVENT_RESET;
 707              		.loc 1 142 3 view .LVU167
 142:Core/Src/main.c ****   event = EVENT_RESET;
 708              		.loc 1 142 9 is_stmt 0 view .LVU168
 709 0026 0023     		movs	r3, #0
 710 0028 0B4A     		ldr	r2, .L60+12
 711 002a 1370     		strb	r3, [r2]
 143:Core/Src/main.c ****   digit=16;
 712              		.loc 1 143 3 is_stmt 1 view .LVU169
 143:Core/Src/main.c ****   digit=16;
 713              		.loc 1 143 9 is_stmt 0 view .LVU170
 714 002c 0B4A     		ldr	r2, .L60+16
 715 002e 1370     		strb	r3, [r2]
 144:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 716              		.loc 1 144 3 is_stmt 1 view .LVU171
 144:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 717              		.loc 1 144 8 is_stmt 0 view .LVU172
 718 0030 0B4B     		ldr	r3, .L60+20
 719 0032 1022     		movs	r2, #16
ARM GAS  /tmp/ccIit0WQ.s 			page 24


 720 0034 1A60     		str	r2, [r3]
 145:Core/Src/main.c **** 
 721              		.loc 1 145 3 is_stmt 1 view .LVU173
 722 0036 0B4B     		ldr	r3, .L60+24
 723 0038 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 724 003a FFF7FEFF 		bl	seven_segment_display
 725              	.LVL32:
 726              	.L58:
 147:Core/Src/main.c ****   {
 727              		.loc 1 147 3 discriminator 1 view .LVU174
 154:Core/Src/main.c ****       key_read_task();
 728              		.loc 1 154 7 discriminator 1 view .LVU175
 729 003e FFF7FEFF 		bl	task_timer
 730              	.LVL33:
 155:Core/Src/main.c ****       main_task();
 731              		.loc 1 155 7 discriminator 1 view .LVU176
 732 0042 FFF7FEFF 		bl	key_read_task
 733              	.LVL34:
 156:Core/Src/main.c ****   }
 734              		.loc 1 156 7 discriminator 1 view .LVU177
 735 0046 FFF7FEFF 		bl	main_task
 736              	.LVL35:
 147:Core/Src/main.c ****   {
 737              		.loc 1 147 9 discriminator 1 view .LVU178
 738 004a F8E7     		b	.L58
 739              	.L61:
 740              		.align	2
 741              	.L60:
 742 004c 00000000 		.word	htim1
 743 0050 00000000 		.word	.LANCHOR9
 744 0054 00000000 		.word	huart1
 745 0058 00000000 		.word	.LANCHOR6
 746 005c 00000000 		.word	.LANCHOR5
 747 0060 00000000 		.word	.LANCHOR7
 748 0064 00000000 		.word	.LANCHOR8
 749              		.cfi_endproc
 750              	.LFE65:
 752              		.global	seven_segment_table
 753              		.global	digit
 754              		.global	event
 755              		.global	state
 756              		.global	RX_msg
 757              		.global	TX_msg
 758              		.global	ID
 759              		.global	event_buffer
 760              		.global	rx_buffer
 761              		.global	stop_cmd
 762              		.global	start_cmd
 763              		.global	transmission_f
 764              		.global	rx_temp
 765              		.global	curr_event
 766              		.global	key_value
 767              		.global	d_timer_30ms
 768              		.global	f_timer_30ms
 769              		.global	f_timer_10ms
 770              		.section	.bss.ID,"aw",%nobits
 773              	ID:
ARM GAS  /tmp/ccIit0WQ.s 			page 25


 774 0000 00       		.space	1
 775              		.section	.bss.RX_msg,"aw",%nobits
 776              		.align	2
 779              	RX_msg:
 780 0000 00000000 		.space	4
 781              		.section	.bss.TX_msg,"aw",%nobits
 782              		.align	2
 785              	TX_msg:
 786 0000 00000000 		.space	4
 787              		.section	.bss.curr_event,"aw",%nobits
 790              	curr_event:
 791 0000 00       		.space	1
 792              		.section	.bss.d_timer_30ms,"aw",%nobits
 793              		.set	.LANCHOR1,. + 0
 796              	d_timer_30ms:
 797 0000 00       		.space	1
 798              		.section	.bss.digit,"aw",%nobits
 799              		.align	2
 800              		.set	.LANCHOR7,. + 0
 803              	digit:
 804 0000 00000000 		.space	4
 805              		.section	.bss.event,"aw",%nobits
 806              		.set	.LANCHOR5,. + 0
 809              	event:
 810 0000 00       		.space	1
 811              		.section	.bss.event_buffer,"aw",%nobits
 812              		.align	2
 813              		.set	.LANCHOR4,. + 0
 816              	event_buffer:
 817 0000 00000000 		.space	66
 817      00000000 
 817      00000000 
 817      00000000 
 817      00000000 
 818              		.section	.bss.f_timer_10ms,"aw",%nobits
 819              		.set	.LANCHOR0,. + 0
 822              	f_timer_10ms:
 823 0000 00       		.space	1
 824              		.section	.bss.f_timer_30ms,"aw",%nobits
 825              		.set	.LANCHOR2,. + 0
 828              	f_timer_30ms:
 829 0000 00       		.space	1
 830              		.section	.bss.key_value,"aw",%nobits
 831              		.set	.LANCHOR3,. + 0
 834              	key_value:
 835 0000 00       		.space	1
 836              		.section	.bss.rx_buffer,"aw",%nobits
 837              		.align	2
 838              		.set	.LANCHOR11,. + 0
 841              	rx_buffer:
 842 0000 00000000 		.space	66
 842      00000000 
 842      00000000 
 842      00000000 
 842      00000000 
 843              		.section	.bss.rx_temp,"aw",%nobits
 844              		.set	.LANCHOR9,. + 0
ARM GAS  /tmp/ccIit0WQ.s 			page 26


 847              	rx_temp:
 848 0000 00       		.space	1
 849              		.section	.bss.state,"aw",%nobits
 850              		.set	.LANCHOR6,. + 0
 853              	state:
 854 0000 00       		.space	1
 855              		.section	.bss.transmission_f,"aw",%nobits
 856              		.set	.LANCHOR10,. + 0
 859              	transmission_f:
 860 0000 00       		.space	1
 861              		.section	.data.seven_segment_table,"aw"
 862              		.align	2
 863              		.set	.LANCHOR8,. + 0
 866              	seven_segment_table:
 867 0000 3F065B4F 		.ascii	"?\006[Ofm}\007\177o_|X^{q@"
 867      666D7D07 
 867      7F6F5F7C 
 867      585E7B71 
 867      40
 868              		.section	.data.start_cmd,"aw"
 871              	start_cmd:
 872 0000 02       		.byte	2
 873              		.section	.data.stop_cmd,"aw"
 876              	stop_cmd:
 877 0000 03       		.byte	3
 878              		.text
 879              	.Letext0:
 880              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 881              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 882              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 883              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 884              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 885              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 886              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 887              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 888              		.file 11 "Core/Inc/tim.h"
 889              		.file 12 "Core/Inc/usart.h"
 890              		.file 13 "Core/Inc/buffer.h"
 891              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 892              		.file 15 "Core/Inc/gpio.h"
 893              		.file 16 "<built-in>"
ARM GAS  /tmp/ccIit0WQ.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccIit0WQ.s:16     .text.task_timer:0000000000000000 $t
     /tmp/ccIit0WQ.s:24     .text.task_timer:0000000000000000 task_timer
     /tmp/ccIit0WQ.s:72     .text.task_timer:000000000000002c $d
     /tmp/ccIit0WQ.s:79     .text.seven_segment_display:0000000000000000 $t
     /tmp/ccIit0WQ.s:86     .text.seven_segment_display:0000000000000000 seven_segment_display
     /tmp/ccIit0WQ.s:108    .text.seven_segment_display:000000000000000c $d
     /tmp/ccIit0WQ.s:113    .text.key_read_task:0000000000000000 $t
     /tmp/ccIit0WQ.s:120    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccIit0WQ.s:194    .text.key_read_task:0000000000000048 $d
     /tmp/ccIit0WQ.s:202    .text.main_task:0000000000000000 $t
     /tmp/ccIit0WQ.s:209    .text.main_task:0000000000000000 main_task
     /tmp/ccIit0WQ.s:325    .text.main_task:0000000000000078 $d
     /tmp/ccIit0WQ.s:334    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccIit0WQ.s:341    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccIit0WQ.s:354    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccIit0WQ.s:361    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccIit0WQ.s:374    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccIit0WQ.s:381    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccIit0WQ.s:408    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccIit0WQ.s:414    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccIit0WQ.s:421    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccIit0WQ.s:505    .text.HAL_UART_RxCpltCallback:0000000000000048 $d
     /tmp/ccIit0WQ.s:514    .text.Error_Handler:0000000000000000 $t
     /tmp/ccIit0WQ.s:521    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccIit0WQ.s:553    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccIit0WQ.s:560    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccIit0WQ.s:663    .text.main:0000000000000000 $t
     /tmp/ccIit0WQ.s:670    .text.main:0000000000000000 main
     /tmp/ccIit0WQ.s:742    .text.main:000000000000004c $d
     /tmp/ccIit0WQ.s:866    .data.seven_segment_table:0000000000000000 seven_segment_table
     /tmp/ccIit0WQ.s:803    .bss.digit:0000000000000000 digit
     /tmp/ccIit0WQ.s:809    .bss.event:0000000000000000 event
     /tmp/ccIit0WQ.s:853    .bss.state:0000000000000000 state
     /tmp/ccIit0WQ.s:779    .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccIit0WQ.s:785    .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccIit0WQ.s:773    .bss.ID:0000000000000000 ID
     /tmp/ccIit0WQ.s:816    .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccIit0WQ.s:841    .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/ccIit0WQ.s:876    .data.stop_cmd:0000000000000000 stop_cmd
     /tmp/ccIit0WQ.s:871    .data.start_cmd:0000000000000000 start_cmd
     /tmp/ccIit0WQ.s:859    .bss.transmission_f:0000000000000000 transmission_f
     /tmp/ccIit0WQ.s:847    .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccIit0WQ.s:790    .bss.curr_event:0000000000000000 curr_event
     /tmp/ccIit0WQ.s:834    .bss.key_value:0000000000000000 key_value
     /tmp/ccIit0WQ.s:796    .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccIit0WQ.s:828    .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccIit0WQ.s:822    .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccIit0WQ.s:774    .bss.ID:0000000000000000 $d
     /tmp/ccIit0WQ.s:776    .bss.RX_msg:0000000000000000 $d
     /tmp/ccIit0WQ.s:782    .bss.TX_msg:0000000000000000 $d
     /tmp/ccIit0WQ.s:791    .bss.curr_event:0000000000000000 $d
     /tmp/ccIit0WQ.s:797    .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccIit0WQ.s:799    .bss.digit:0000000000000000 $d
     /tmp/ccIit0WQ.s:810    .bss.event:0000000000000000 $d
     /tmp/ccIit0WQ.s:812    .bss.event_buffer:0000000000000000 $d
ARM GAS  /tmp/ccIit0WQ.s 			page 28


     /tmp/ccIit0WQ.s:823    .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccIit0WQ.s:829    .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccIit0WQ.s:835    .bss.key_value:0000000000000000 $d
     /tmp/ccIit0WQ.s:837    .bss.rx_buffer:0000000000000000 $d
     /tmp/ccIit0WQ.s:848    .bss.rx_temp:0000000000000000 $d
     /tmp/ccIit0WQ.s:854    .bss.state:0000000000000000 $d
     /tmp/ccIit0WQ.s:860    .bss.transmission_f:0000000000000000 $d
     /tmp/ccIit0WQ.s:862    .data.seven_segment_table:0000000000000000 $d

UNDEFINED SYMBOLS
buffer_push
buffer_pop
htim1
HAL_UART_Receive_IT
huart1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_USART1_UART_Init
HAL_TIM_Base_Start_IT
