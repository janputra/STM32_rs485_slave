ARM GAS  /tmp/ccFD7AbC.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.task_timer,"ax",%progbits
  16              		.align	1
  17              		.global	task_timer
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	task_timer:
  25              	.LFB67:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** #include "message.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccFD7AbC.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** uint8_t f_timer_10ms=0;
  49:Core/Src/main.c **** uint8_t f_timer_30ms=0;
  50:Core/Src/main.c **** uint8_t d_timer_30ms;
  51:Core/Src/main.c **** uint8_t key_value;
  52:Core/Src/main.c **** uint8_t curr_event;
  53:Core/Src/main.c **** uint8_t bufferEvent[64];
  54:Core/Src/main.c **** uint8_t rx_temp;
  55:Core/Src/main.c **** uint8_t start_transmission;
  56:Core/Src/main.c **** uint8_t start_cmd=0x2;
  57:Core/Src/main.c **** uint8_t stop_cmd=0x3;
  58:Core/Src/main.c **** circular_buffer rx_buffer;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** int digit;
  61:Core/Src/main.c **** uint8_t seven_segment_table[17] = {	0b1111110,	// '0'
  62:Core/Src/main.c **** 		                            	0b0110000,	// '1'
  63:Core/Src/main.c **** 		   	                          0b1101101,	// '2'
  64:Core/Src/main.c **** 			                            0b1111001,	// '3'
  65:Core/Src/main.c **** 			                            0b0110011,	// '4'
  66:Core/Src/main.c **** 			                            0b1011011,	// '5'
  67:Core/Src/main.c **** 			                            0b1011111,	// '6'
  68:Core/Src/main.c **** 			                            0b1110000,	// '7'
  69:Core/Src/main.c **** 			                            0b1111111,	// '8'
  70:Core/Src/main.c **** 			                            0b1111011,	// '9'
  71:Core/Src/main.c **** 			                            0b1111101,	// 'a'  --10
  72:Core/Src/main.c **** 			                            0b0011111,	// 'b'  --11
  73:Core/Src/main.c **** 			                            0b0001101,	// 'c'  --12
  74:Core/Src/main.c **** 			                            0b0111101,	// 'd'  --13
  75:Core/Src/main.c **** 			                            0b1101111,	// 'e'	--14
  76:Core/Src/main.c **** 			                            0b1000111,	// 'f'  --15
  77:Core/Src/main.c **** 			                            0b0000001 	// '-'  --16
  78:Core/Src/main.c **** };
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE END PV */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  85:Core/Src/main.c **** void SystemClock_Config(void);
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** void task_timer(void);
  88:Core/Src/main.c **** void seven_segment_display(char input);
  89:Core/Src/main.c **** void key_read_task(void);
ARM GAS  /tmp/ccFD7AbC.s 			page 3


  90:Core/Src/main.c **** void main_task(void);
  91:Core/Src/main.c **** void RS485_Send_Message(message msg);
  92:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* USER CODE END PFP */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  97:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* USER CODE END 0 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /**
 102:Core/Src/main.c ****   * @brief  The application entry point.
 103:Core/Src/main.c ****   * @retval int
 104:Core/Src/main.c ****   */
 105:Core/Src/main.c **** int main(void)
 106:Core/Src/main.c **** {
 107:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END 1 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 114:Core/Src/main.c ****   HAL_Init();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END Init */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Configure the system clock */
 121:Core/Src/main.c ****   SystemClock_Config();
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE END SysInit */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Initialize all configured peripherals */
 128:Core/Src/main.c ****   MX_GPIO_Init();
 129:Core/Src/main.c ****   MX_TIM1_Init();
 130:Core/Src/main.c ****   MX_USART1_UART_Init();
 131:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 132:Core/Src/main.c ****   
 133:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);  
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1,&rx_temp, 1);
 136:Core/Src/main.c ****   /* USER CODE END 2 */
 137:Core/Src/main.c ****   digit=0;
 138:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 139:Core/Src/main.c ****   /* Infinite loop */
 140:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 141:Core/Src/main.c ****   while (1)
 142:Core/Src/main.c ****   {
 143:Core/Src/main.c ****     /* USER CODE END WHILE */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 146:Core/Src/main.c ****   }
ARM GAS  /tmp/ccFD7AbC.s 			page 4


 147:Core/Src/main.c ****   /* USER CODE END 3 */
 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /**
 151:Core/Src/main.c ****   * @brief System Clock Configuration
 152:Core/Src/main.c ****   * @retval None
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c **** void SystemClock_Config(void)
 155:Core/Src/main.c **** {
 156:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 160:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 169:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 170:Core/Src/main.c ****   {
 171:Core/Src/main.c ****     Error_Handler();
 172:Core/Src/main.c ****   }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 179:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c **** }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** void task_timer(void)
 192:Core/Src/main.c **** {
  27              		.loc 1 192 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 193:Core/Src/main.c ****   if (!f_timer_10ms) return;
  32              		.loc 1 193 3 view .LVU1
  33              		.loc 1 193 7 is_stmt 0 view .LVU2
  34 0000 0A4B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36              		.loc 1 193 6 view .LVU3
ARM GAS  /tmp/ccFD7AbC.s 			page 5


  37 0004 4BB1     		cbz	r3, .L1
 194:Core/Src/main.c ****   f_timer_10ms=0;
  38              		.loc 1 194 3 is_stmt 1 view .LVU4
  39              		.loc 1 194 15 is_stmt 0 view .LVU5
  40 0006 094B     		ldr	r3, .L4
  41 0008 0022     		movs	r2, #0
  42 000a 1A70     		strb	r2, [r3]
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   d_timer_30ms++;
  43              		.loc 1 196 3 is_stmt 1 view .LVU6
  44              		.loc 1 196 15 is_stmt 0 view .LVU7
  45 000c 084A     		ldr	r2, .L4+4
  46 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  47 0010 0133     		adds	r3, r3, #1
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 1370     		strb	r3, [r2]
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   if(d_timer_30ms==3){
  50              		.loc 1 198 3 is_stmt 1 view .LVU8
  51              		.loc 1 198 5 is_stmt 0 view .LVU9
  52 0016 032B     		cmp	r3, #3
  53 0018 00D0     		beq	.L3
  54              	.L1:
 199:Core/Src/main.c ****     d_timer_30ms =0;
 200:Core/Src/main.c ****     f_timer_10ms=1;
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c ****   
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** }
  55              		.loc 1 204 1 view .LVU10
  56 001a 7047     		bx	lr
  57              	.L3:
 199:Core/Src/main.c ****     d_timer_30ms =0;
  58              		.loc 1 199 5 is_stmt 1 view .LVU11
 199:Core/Src/main.c ****     d_timer_30ms =0;
  59              		.loc 1 199 18 is_stmt 0 view .LVU12
  60 001c 1346     		mov	r3, r2
  61 001e 0022     		movs	r2, #0
  62 0020 1A70     		strb	r2, [r3]
 200:Core/Src/main.c ****   }
  63              		.loc 1 200 5 is_stmt 1 view .LVU13
 200:Core/Src/main.c ****   }
  64              		.loc 1 200 17 is_stmt 0 view .LVU14
  65 0022 024B     		ldr	r3, .L4
  66 0024 0122     		movs	r2, #1
  67 0026 1A70     		strb	r2, [r3]
  68 0028 F7E7     		b	.L1
  69              	.L5:
  70 002a 00BF     		.align	2
  71              	.L4:
  72 002c 00000000 		.word	.LANCHOR0
  73 0030 00000000 		.word	.LANCHOR1
  74              		.cfi_endproc
  75              	.LFE67:
  77              		.section	.text.seven_segment_display,"ax",%progbits
  78              		.align	1
  79              		.global	seven_segment_display
ARM GAS  /tmp/ccFD7AbC.s 			page 6


  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	seven_segment_display:
  86              	.LVL0:
  87              	.LFB68:
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** void seven_segment_display(char input)
 207:Core/Src/main.c **** {
  88              		.loc 1 207 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
 208:Core/Src/main.c ****    uint32_t mask =  a_Pin|b_Pin|c_Pin|d_Pin|e_Pin|f_Pin|g_Pin;
  93              		.loc 1 208 4 view .LVU16
 209:Core/Src/main.c ****    uint32_t val = (uint32_t)input & mask;
  94              		.loc 1 209 4 view .LVU17
  95              		.loc 1 209 13 is_stmt 0 view .LVU18
  96 0000 00F07F00 		and	r0, r0, #127
  97              	.LVL1:
 210:Core/Src/main.c ****    SEGMENT_PORT->ODR = val;
  98              		.loc 1 210 4 is_stmt 1 view .LVU19
  99              		.loc 1 210 22 is_stmt 0 view .LVU20
 100 0004 014B     		ldr	r3, .L7
 101 0006 D860     		str	r0, [r3, #12]
 211:Core/Src/main.c **** }
 102              		.loc 1 211 1 view .LVU21
 103 0008 7047     		bx	lr
 104              	.L8:
 105 000a 00BF     		.align	2
 106              	.L7:
 107 000c 00080140 		.word	1073809408
 108              		.cfi_endproc
 109              	.LFE68:
 111              		.section	.text.key_read_task,"ax",%progbits
 112              		.align	1
 113              		.global	key_read_task
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu softvfp
 119              	key_read_task:
 120              	.LFB69:
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** void key_read_task(void)
 214:Core/Src/main.c **** {
 121              		.loc 1 214 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 215:Core/Src/main.c ****   if(!f_timer_30ms) return;
 126              		.loc 1 215 3 view .LVU23
 127              		.loc 1 215 6 is_stmt 0 view .LVU24
 128 0000 0A4B     		ldr	r3, .L11
ARM GAS  /tmp/ccFD7AbC.s 			page 7


 129 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 130              		.loc 1 215 5 view .LVU25
 131 0004 8BB1     		cbz	r3, .L9
 216:Core/Src/main.c ****   unsigned char key_pindata = (uint8_t)(key_GPIO_Port->IDR & key_Pin);
 132              		.loc 1 216 3 is_stmt 1 view .LVU26
 133              		.loc 1 216 54 is_stmt 0 view .LVU27
 134 0006 0A4B     		ldr	r3, .L11+4
 135 0008 9B68     		ldr	r3, [r3, #8]
 136              		.loc 1 216 17 view .LVU28
 137 000a 03F08003 		and	r3, r3, #128
 138              	.LVL2:
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   key_value = key_value<<1;
 139              		.loc 1 218 3 is_stmt 1 view .LVU29
 140              		.loc 1 218 24 is_stmt 0 view .LVU30
 141 000e 0949     		ldr	r1, .L11+8
 142 0010 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 143 0012 5200     		lsls	r2, r2, #1
 144 0014 D2B2     		uxtb	r2, r2
 145              		.loc 1 218 13 view .LVU31
 146 0016 0A70     		strb	r2, [r1]
 219:Core/Src/main.c ****   key_value &= 0b00001110;
 147              		.loc 1 219 3 is_stmt 1 view .LVU32
 148              		.loc 1 219 13 is_stmt 0 view .LVU33
 149 0018 02F00E02 		and	r2, r2, #14
 150 001c 0A70     		strb	r2, [r1]
 220:Core/Src/main.c ****   key_value |= (key_pindata>>key_Pin)&0x1;
 151              		.loc 1 220 3 is_stmt 1 view .LVU34
 152              		.loc 1 220 28 is_stmt 0 view .LVU35
 153 001e 8020     		movs	r0, #128
 154 0020 0341     		asrs	r3, r3, r0
 155              	.LVL3:
 156              		.loc 1 220 38 view .LVU36
 157 0022 03F00103 		and	r3, r3, #1
 158              		.loc 1 220 13 view .LVU37
 159 0026 1343     		orrs	r3, r3, r2
 160 0028 0B70     		strb	r3, [r1]
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   if (key_value==KEY_PRESSED){
 161              		.loc 1 222 3 is_stmt 1 view .LVU38
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   }else if(key_value==KEY_RELEASED){
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   }
 162              		.loc 1 226 3 view .LVU39
 163              	.L9:
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** }
 164              		.loc 1 228 1 is_stmt 0 view .LVU40
 165 002a 7047     		bx	lr
 166              	.L12:
 167              		.align	2
 168              	.L11:
 169 002c 00000000 		.word	.LANCHOR2
 170 0030 00080140 		.word	1073809408
 171 0034 00000000 		.word	.LANCHOR3
 172              		.cfi_endproc
ARM GAS  /tmp/ccFD7AbC.s 			page 8


 173              	.LFE69:
 175              		.section	.text.main_task,"ax",%progbits
 176              		.align	1
 177              		.global	main_task
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu softvfp
 183              	main_task:
 184              	.LFB70:
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** void main_task(void)
 231:Core/Src/main.c **** {
 185              		.loc 1 231 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** }
 190              		.loc 1 233 1 view .LVU42
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE70:
 195              		.section	.text.RS485_Send_Message,"ax",%progbits
 196              		.align	1
 197              		.global	RS485_Send_Message
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu softvfp
 203              	RS485_Send_Message:
 204              	.LFB71:
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** void RS485_Send_Message(message msg)
 237:Core/Src/main.c **** {
 205              		.loc 1 237 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 30B5     		push	{r4, r5, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 12
 212              		.cfi_offset 4, -12
 213              		.cfi_offset 5, -8
 214              		.cfi_offset 14, -4
 215 0002 83B0     		sub	sp, sp, #12
 216              	.LCFI1:
 217              		.cfi_def_cfa_offset 24
 218 0004 6D46     		mov	r5, sp
 219 0006 85E80300 		stm	r5, {r0, r1}
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****    //uint8_t *pbuf_tx = (uint8_t *)&msg; 
 240:Core/Src/main.c ****  /// Enable Transmitter Mode
 241:Core/Src/main.c ****    HAL_UART_Transmit(&huart1,&start_cmd,1,10);
 220              		.loc 1 241 4 view .LVU44
ARM GAS  /tmp/ccFD7AbC.s 			page 9


 221 000a 0A4C     		ldr	r4, .L16
 222 000c 0A23     		movs	r3, #10
 223 000e 0122     		movs	r2, #1
 224 0010 0949     		ldr	r1, .L16+4
 225 0012 2046     		mov	r0, r4
 226 0014 FFF7FEFF 		bl	HAL_UART_Transmit
 227              	.LVL4:
 242:Core/Src/main.c ****   
 243:Core/Src/main.c ****    HAL_UART_Transmit(&huart1,(uint8_t *)&msg,sizeof(msg),10);
 228              		.loc 1 243 4 view .LVU45
 229 0018 0A23     		movs	r3, #10
 230 001a 0522     		movs	r2, #5
 231 001c 2946     		mov	r1, r5
 232 001e 2046     		mov	r0, r4
 233 0020 FFF7FEFF 		bl	HAL_UART_Transmit
 234              	.LVL5:
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****    HAL_UART_Transmit(&huart1,&stop_cmd,1,10);
 235              		.loc 1 245 4 view .LVU46
 236 0024 0A23     		movs	r3, #10
 237 0026 0122     		movs	r2, #1
 238 0028 0449     		ldr	r1, .L16+8
 239 002a 2046     		mov	r0, r4
 240 002c FFF7FEFF 		bl	HAL_UART_Transmit
 241              	.LVL6:
 246:Core/Src/main.c ****   
 247:Core/Src/main.c ****    /// Enable Receiver Mode
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** }
 242              		.loc 1 249 1 is_stmt 0 view .LVU47
 243 0030 03B0     		add	sp, sp, #12
 244              	.LCFI2:
 245              		.cfi_def_cfa_offset 12
 246              		@ sp needed
 247 0032 30BD     		pop	{r4, r5, pc}
 248              	.L17:
 249              		.align	2
 250              	.L16:
 251 0034 00000000 		.word	huart1
 252 0038 00000000 		.word	.LANCHOR4
 253 003c 00000000 		.word	.LANCHOR5
 254              		.cfi_endproc
 255              	.LFE71:
 257              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 258              		.align	1
 259              		.global	HAL_TIM_PeriodElapsedCallback
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu softvfp
 265              	HAL_TIM_PeriodElapsedCallback:
 266              	.LVL7:
 267              	.LFB72:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 252:Core/Src/main.c **** {
 268              		.loc 1 252 1 is_stmt 1 view -0
ARM GAS  /tmp/ccFD7AbC.s 			page 10


 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 253:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
 254:Core/Src/main.c ****   if (htim == &htim1)
 273              		.loc 1 254 3 view .LVU49
 274              		.loc 1 254 6 is_stmt 0 view .LVU50
 275 0000 034B     		ldr	r3, .L21
 276 0002 8342     		cmp	r3, r0
 277 0004 00D0     		beq	.L20
 278              	.L18:
 255:Core/Src/main.c ****   {
 256:Core/Src/main.c **** 	  f_timer_10ms=1;
 257:Core/Src/main.c ****   }
 258:Core/Src/main.c ****   
 259:Core/Src/main.c **** }
 279              		.loc 1 259 1 view .LVU51
 280 0006 7047     		bx	lr
 281              	.L20:
 256:Core/Src/main.c ****   }
 282              		.loc 1 256 4 is_stmt 1 view .LVU52
 256:Core/Src/main.c ****   }
 283              		.loc 1 256 16 is_stmt 0 view .LVU53
 284 0008 024B     		ldr	r3, .L21+4
 285 000a 0122     		movs	r2, #1
 286 000c 1A70     		strb	r2, [r3]
 287              		.loc 1 259 1 view .LVU54
 288 000e FAE7     		b	.L18
 289              	.L22:
 290              		.align	2
 291              	.L21:
 292 0010 00000000 		.word	htim1
 293 0014 00000000 		.word	.LANCHOR0
 294              		.cfi_endproc
 295              	.LFE72:
 297              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 298              		.align	1
 299              		.global	HAL_UART_RxCpltCallback
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu softvfp
 305              	HAL_UART_RxCpltCallback:
 306              	.LVL8:
 307              	.LFB73:
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 264:Core/Src/main.c **** {
 308              		.loc 1 264 1 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		.loc 1 264 1 is_stmt 0 view .LVU56
 313 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccFD7AbC.s 			page 11


 314              	.LCFI3:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 3, -8
 317              		.cfi_offset 14, -4
 265:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** 	if (huart == &huart1)
 318              		.loc 1 267 2 is_stmt 1 view .LVU57
 319              		.loc 1 267 5 is_stmt 0 view .LVU58
 320 0002 104B     		ldr	r3, .L32
 321 0004 8342     		cmp	r3, r0
 322 0006 00D0     		beq	.L29
 323              	.LVL9:
 324              	.L23:
 268:Core/Src/main.c **** 	{ 
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****     if (start_transmission){
 271:Core/Src/main.c ****       if (!(rx_temp==0x3)){
 272:Core/Src/main.c ****         buffer_push(&rx_buffer,rx_temp);
 273:Core/Src/main.c ****       }
 274:Core/Src/main.c ****       else{
 275:Core/Src/main.c ****         start_transmission =0;
 276:Core/Src/main.c ****       }
 277:Core/Src/main.c ****     }else{
 278:Core/Src/main.c ****        if (rx_temp==0x2){
 279:Core/Src/main.c ****         start_transmission =1;
 280:Core/Src/main.c ****       } 
 281:Core/Src/main.c ****     }
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****     HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 284:Core/Src/main.c ****     } 
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** }
 325              		.loc 1 286 1 view .LVU59
 326 0008 08BD     		pop	{r3, pc}
 327              	.LVL10:
 328              	.L29:
 270:Core/Src/main.c ****       if (!(rx_temp==0x3)){
 329              		.loc 1 270 5 is_stmt 1 view .LVU60
 270:Core/Src/main.c ****       if (!(rx_temp==0x3)){
 330              		.loc 1 270 9 is_stmt 0 view .LVU61
 331 000a 0F4B     		ldr	r3, .L32+4
 332 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270:Core/Src/main.c ****       if (!(rx_temp==0x3)){
 333              		.loc 1 270 8 view .LVU62
 334 000e 5BB1     		cbz	r3, .L25
 271:Core/Src/main.c ****         buffer_push(&rx_buffer,rx_temp);
 335              		.loc 1 271 7 is_stmt 1 view .LVU63
 271:Core/Src/main.c ****         buffer_push(&rx_buffer,rx_temp);
 336              		.loc 1 271 11 is_stmt 0 view .LVU64
 337 0010 0E4B     		ldr	r3, .L32+8
 338 0012 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 271:Core/Src/main.c ****         buffer_push(&rx_buffer,rx_temp);
 339              		.loc 1 271 10 view .LVU65
 340 0014 0329     		cmp	r1, #3
 341 0016 03D1     		bne	.L30
 275:Core/Src/main.c ****       }
ARM GAS  /tmp/ccFD7AbC.s 			page 12


 342              		.loc 1 275 9 is_stmt 1 view .LVU66
 275:Core/Src/main.c ****       }
 343              		.loc 1 275 28 is_stmt 0 view .LVU67
 344 0018 0B4B     		ldr	r3, .L32+4
 345 001a 0022     		movs	r2, #0
 346 001c 1A70     		strb	r2, [r3]
 347 001e 07E0     		b	.L27
 348              	.L30:
 272:Core/Src/main.c ****       }
 349              		.loc 1 272 9 is_stmt 1 view .LVU68
 350 0020 0B48     		ldr	r0, .L32+12
 351              	.LVL11:
 272:Core/Src/main.c ****       }
 352              		.loc 1 272 9 is_stmt 0 view .LVU69
 353 0022 FFF7FEFF 		bl	buffer_push
 354              	.LVL12:
 355 0026 03E0     		b	.L27
 356              	.LVL13:
 357              	.L25:
 278:Core/Src/main.c ****         start_transmission =1;
 358              		.loc 1 278 8 is_stmt 1 view .LVU70
 278:Core/Src/main.c ****         start_transmission =1;
 359              		.loc 1 278 19 is_stmt 0 view .LVU71
 360 0028 084B     		ldr	r3, .L32+8
 361 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 278:Core/Src/main.c ****         start_transmission =1;
 362              		.loc 1 278 11 view .LVU72
 363 002c 022B     		cmp	r3, #2
 364 002e 05D0     		beq	.L31
 365              	.LVL14:
 366              	.L27:
 283:Core/Src/main.c ****     } 
 367              		.loc 1 283 5 is_stmt 1 view .LVU73
 368 0030 0122     		movs	r2, #1
 369 0032 0649     		ldr	r1, .L32+8
 370 0034 0348     		ldr	r0, .L32
 371 0036 FFF7FEFF 		bl	HAL_UART_Receive_IT
 372              	.LVL15:
 373              		.loc 1 286 1 is_stmt 0 view .LVU74
 374 003a E5E7     		b	.L23
 375              	.LVL16:
 376              	.L31:
 279:Core/Src/main.c ****       } 
 377              		.loc 1 279 9 is_stmt 1 view .LVU75
 279:Core/Src/main.c ****       } 
 378              		.loc 1 279 28 is_stmt 0 view .LVU76
 379 003c 024B     		ldr	r3, .L32+4
 380 003e 0122     		movs	r2, #1
 381 0040 1A70     		strb	r2, [r3]
 382 0042 F5E7     		b	.L27
 383              	.L33:
 384              		.align	2
 385              	.L32:
 386 0044 00000000 		.word	huart1
 387 0048 00000000 		.word	.LANCHOR6
 388 004c 00000000 		.word	.LANCHOR7
 389 0050 00000000 		.word	.LANCHOR8
ARM GAS  /tmp/ccFD7AbC.s 			page 13


 390              		.cfi_endproc
 391              	.LFE73:
 393              		.section	.text.Error_Handler,"ax",%progbits
 394              		.align	1
 395              		.global	Error_Handler
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu softvfp
 401              	Error_Handler:
 402              	.LFB74:
 287:Core/Src/main.c **** /* USER CODE END 4 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /**
 290:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 291:Core/Src/main.c ****   * @retval None
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c **** void Error_Handler(void)
 294:Core/Src/main.c **** {
 403              		.loc 1 294 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ Volatile: function does not return.
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 295:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 296:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 297:Core/Src/main.c ****   __disable_irq();
 409              		.loc 1 297 3 view .LVU78
 410              	.LBB4:
 411              	.LBI4:
 412              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  /tmp/ccFD7AbC.s 			page 14


  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
ARM GAS  /tmp/ccFD7AbC.s 			page 15


  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccFD7AbC.s 			page 16


 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 413              		.loc 2 140 27 view .LVU79
 414              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 415              		.loc 2 142 3 view .LVU80
 416              		.syntax unified
 417              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 418 0000 72B6     		cpsid i
 419              	@ 0 "" 2
 420              		.thumb
 421              		.syntax unified
 422              	.L35:
 423              	.LBE5:
 424              	.LBE4:
 298:Core/Src/main.c ****   while (1)
 425              		.loc 1 298 3 discriminator 1 view .LVU81
 299:Core/Src/main.c ****   {
 300:Core/Src/main.c ****   }
 426              		.loc 1 300 3 discriminator 1 view .LVU82
 298:Core/Src/main.c ****   while (1)
 427              		.loc 1 298 9 discriminator 1 view .LVU83
 428 0002 FEE7     		b	.L35
 429              		.cfi_endproc
 430              	.LFE74:
 432              		.section	.text.SystemClock_Config,"ax",%progbits
 433              		.align	1
 434              		.global	SystemClock_Config
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu softvfp
 440              	SystemClock_Config:
 441              	.LFB66:
 155:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 442              		.loc 1 155 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 64
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446 0000 00B5     		push	{lr}
 447              	.LCFI4:
 448              		.cfi_def_cfa_offset 4
 449              		.cfi_offset 14, -4
 450 0002 91B0     		sub	sp, sp, #68
 451              	.LCFI5:
 452              		.cfi_def_cfa_offset 72
 156:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 453              		.loc 1 156 3 view .LVU85
 156:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 454              		.loc 1 156 22 is_stmt 0 view .LVU86
 455 0004 2822     		movs	r2, #40
 456 0006 0021     		movs	r1, #0
 457 0008 06A8     		add	r0, sp, #24
 458 000a FFF7FEFF 		bl	memset
 459              	.LVL17:
 157:Core/Src/main.c **** 
 460              		.loc 1 157 3 is_stmt 1 view .LVU87
ARM GAS  /tmp/ccFD7AbC.s 			page 17


 157:Core/Src/main.c **** 
 461              		.loc 1 157 22 is_stmt 0 view .LVU88
 462 000e 0023     		movs	r3, #0
 463 0010 0193     		str	r3, [sp, #4]
 464 0012 0293     		str	r3, [sp, #8]
 465 0014 0393     		str	r3, [sp, #12]
 466 0016 0493     		str	r3, [sp, #16]
 467 0018 0593     		str	r3, [sp, #20]
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 468              		.loc 1 162 3 is_stmt 1 view .LVU89
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 469              		.loc 1 162 36 is_stmt 0 view .LVU90
 470 001a 0122     		movs	r2, #1
 471 001c 0692     		str	r2, [sp, #24]
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 472              		.loc 1 163 3 is_stmt 1 view .LVU91
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 473              		.loc 1 163 30 is_stmt 0 view .LVU92
 474 001e 4FF48033 		mov	r3, #65536
 475 0022 0793     		str	r3, [sp, #28]
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 476              		.loc 1 164 3 is_stmt 1 view .LVU93
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 477              		.loc 1 165 3 view .LVU94
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 478              		.loc 1 165 30 is_stmt 0 view .LVU95
 479 0024 0A92     		str	r2, [sp, #40]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 480              		.loc 1 166 3 is_stmt 1 view .LVU96
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 481              		.loc 1 166 34 is_stmt 0 view .LVU97
 482 0026 0222     		movs	r2, #2
 483 0028 0D92     		str	r2, [sp, #52]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 484              		.loc 1 167 3 is_stmt 1 view .LVU98
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 485              		.loc 1 167 35 is_stmt 0 view .LVU99
 486 002a 0E93     		str	r3, [sp, #56]
 168:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 487              		.loc 1 168 3 is_stmt 1 view .LVU100
 169:Core/Src/main.c ****   {
 488              		.loc 1 169 3 view .LVU101
 169:Core/Src/main.c ****   {
 489              		.loc 1 169 7 is_stmt 0 view .LVU102
 490 002c 06A8     		add	r0, sp, #24
 491 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 492              	.LVL18:
 169:Core/Src/main.c ****   {
 493              		.loc 1 169 6 view .LVU103
 494 0032 88B9     		cbnz	r0, .L40
 176:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 495              		.loc 1 176 3 is_stmt 1 view .LVU104
 176:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 496              		.loc 1 176 31 is_stmt 0 view .LVU105
 497 0034 0F23     		movs	r3, #15
 498 0036 0193     		str	r3, [sp, #4]
 178:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
ARM GAS  /tmp/ccFD7AbC.s 			page 18


 499              		.loc 1 178 3 is_stmt 1 view .LVU106
 178:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 500              		.loc 1 178 34 is_stmt 0 view .LVU107
 501 0038 0223     		movs	r3, #2
 502 003a 0293     		str	r3, [sp, #8]
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 503              		.loc 1 179 3 is_stmt 1 view .LVU108
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 504              		.loc 1 179 35 is_stmt 0 view .LVU109
 505 003c 8023     		movs	r3, #128
 506 003e 0393     		str	r3, [sp, #12]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 507              		.loc 1 180 3 is_stmt 1 view .LVU110
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 508              		.loc 1 180 36 is_stmt 0 view .LVU111
 509 0040 4FF48063 		mov	r3, #1024
 510 0044 0493     		str	r3, [sp, #16]
 181:Core/Src/main.c **** 
 511              		.loc 1 181 3 is_stmt 1 view .LVU112
 181:Core/Src/main.c **** 
 512              		.loc 1 181 36 is_stmt 0 view .LVU113
 513 0046 0021     		movs	r1, #0
 514 0048 0591     		str	r1, [sp, #20]
 183:Core/Src/main.c ****   {
 515              		.loc 1 183 3 is_stmt 1 view .LVU114
 183:Core/Src/main.c ****   {
 516              		.loc 1 183 7 is_stmt 0 view .LVU115
 517 004a 01A8     		add	r0, sp, #4
 518 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 519              	.LVL19:
 183:Core/Src/main.c ****   {
 520              		.loc 1 183 6 view .LVU116
 521 0050 20B9     		cbnz	r0, .L41
 187:Core/Src/main.c **** 
 522              		.loc 1 187 1 view .LVU117
 523 0052 11B0     		add	sp, sp, #68
 524              	.LCFI6:
 525              		.cfi_remember_state
 526              		.cfi_def_cfa_offset 4
 527              		@ sp needed
 528 0054 5DF804FB 		ldr	pc, [sp], #4
 529              	.L40:
 530              	.LCFI7:
 531              		.cfi_restore_state
 171:Core/Src/main.c ****   }
 532              		.loc 1 171 5 is_stmt 1 view .LVU118
 533 0058 FFF7FEFF 		bl	Error_Handler
 534              	.LVL20:
 535              	.L41:
 185:Core/Src/main.c ****   }
 536              		.loc 1 185 5 view .LVU119
 537 005c FFF7FEFF 		bl	Error_Handler
 538              	.LVL21:
 539              		.cfi_endproc
 540              	.LFE66:
 542              		.section	.text.main,"ax",%progbits
 543              		.align	1
ARM GAS  /tmp/ccFD7AbC.s 			page 19


 544              		.global	main
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu softvfp
 550              	main:
 551              	.LFB65:
 106:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 552              		.loc 1 106 1 view -0
 553              		.cfi_startproc
 554              		@ Volatile: function does not return.
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557 0000 08B5     		push	{r3, lr}
 558              	.LCFI8:
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 3, -8
 561              		.cfi_offset 14, -4
 114:Core/Src/main.c **** 
 562              		.loc 1 114 3 view .LVU121
 563 0002 FFF7FEFF 		bl	HAL_Init
 564              	.LVL22:
 121:Core/Src/main.c **** 
 565              		.loc 1 121 3 view .LVU122
 566 0006 FFF7FEFF 		bl	SystemClock_Config
 567              	.LVL23:
 128:Core/Src/main.c ****   MX_TIM1_Init();
 568              		.loc 1 128 3 view .LVU123
 569 000a FFF7FEFF 		bl	MX_GPIO_Init
 570              	.LVL24:
 129:Core/Src/main.c ****   MX_USART1_UART_Init();
 571              		.loc 1 129 3 view .LVU124
 572 000e FFF7FEFF 		bl	MX_TIM1_Init
 573              	.LVL25:
 130:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 574              		.loc 1 130 3 view .LVU125
 575 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 576              	.LVL26:
 133:Core/Src/main.c **** 
 577              		.loc 1 133 3 view .LVU126
 578 0016 0848     		ldr	r0, .L45
 579 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 580              	.LVL27:
 135:Core/Src/main.c ****   /* USER CODE END 2 */
 581              		.loc 1 135 3 view .LVU127
 582 001c 0122     		movs	r2, #1
 583 001e 0749     		ldr	r1, .L45+4
 584 0020 0748     		ldr	r0, .L45+8
 585 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
 586              	.LVL28:
 137:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 587              		.loc 1 137 3 view .LVU128
 137:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 588              		.loc 1 137 8 is_stmt 0 view .LVU129
 589 0026 074B     		ldr	r3, .L45+12
 590 0028 0022     		movs	r2, #0
 591 002a 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccFD7AbC.s 			page 20


 138:Core/Src/main.c ****   /* Infinite loop */
 592              		.loc 1 138 3 is_stmt 1 view .LVU130
 593 002c 064B     		ldr	r3, .L45+16
 594 002e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 595 0030 FFF7FEFF 		bl	seven_segment_display
 596              	.LVL29:
 597              	.L43:
 141:Core/Src/main.c ****   {
 598              		.loc 1 141 3 discriminator 1 view .LVU131
 146:Core/Src/main.c ****   /* USER CODE END 3 */
 599              		.loc 1 146 3 discriminator 1 view .LVU132
 141:Core/Src/main.c ****   {
 600              		.loc 1 141 9 discriminator 1 view .LVU133
 601 0034 FEE7     		b	.L43
 602              	.L46:
 603 0036 00BF     		.align	2
 604              	.L45:
 605 0038 00000000 		.word	htim1
 606 003c 00000000 		.word	.LANCHOR7
 607 0040 00000000 		.word	huart1
 608 0044 00000000 		.word	.LANCHOR9
 609 0048 00000000 		.word	.LANCHOR10
 610              		.cfi_endproc
 611              	.LFE65:
 613              		.global	seven_segment_table
 614              		.global	digit
 615              		.global	rx_buffer
 616              		.global	stop_cmd
 617              		.global	start_cmd
 618              		.global	start_transmission
 619              		.global	rx_temp
 620              		.global	bufferEvent
 621              		.global	curr_event
 622              		.global	key_value
 623              		.global	d_timer_30ms
 624              		.global	f_timer_30ms
 625              		.global	f_timer_10ms
 626              		.section	.bss.bufferEvent,"aw",%nobits
 627              		.align	2
 630              	bufferEvent:
 631 0000 00000000 		.space	64
 631      00000000 
 631      00000000 
 631      00000000 
 631      00000000 
 632              		.section	.bss.curr_event,"aw",%nobits
 635              	curr_event:
 636 0000 00       		.space	1
 637              		.section	.bss.d_timer_30ms,"aw",%nobits
 638              		.set	.LANCHOR1,. + 0
 641              	d_timer_30ms:
 642 0000 00       		.space	1
 643              		.section	.bss.digit,"aw",%nobits
 644              		.align	2
 645              		.set	.LANCHOR9,. + 0
 648              	digit:
 649 0000 00000000 		.space	4
ARM GAS  /tmp/ccFD7AbC.s 			page 21


 650              		.section	.bss.f_timer_10ms,"aw",%nobits
 651              		.set	.LANCHOR0,. + 0
 654              	f_timer_10ms:
 655 0000 00       		.space	1
 656              		.section	.bss.f_timer_30ms,"aw",%nobits
 657              		.set	.LANCHOR2,. + 0
 660              	f_timer_30ms:
 661 0000 00       		.space	1
 662              		.section	.bss.key_value,"aw",%nobits
 663              		.set	.LANCHOR3,. + 0
 666              	key_value:
 667 0000 00       		.space	1
 668              		.section	.bss.rx_buffer,"aw",%nobits
 669              		.align	2
 670              		.set	.LANCHOR8,. + 0
 673              	rx_buffer:
 674 0000 00000000 		.space	66
 674      00000000 
 674      00000000 
 674      00000000 
 674      00000000 
 675              		.section	.bss.rx_temp,"aw",%nobits
 676              		.set	.LANCHOR7,. + 0
 679              	rx_temp:
 680 0000 00       		.space	1
 681              		.section	.bss.start_transmission,"aw",%nobits
 682              		.set	.LANCHOR6,. + 0
 685              	start_transmission:
 686 0000 00       		.space	1
 687              		.section	.data.seven_segment_table,"aw"
 688              		.align	2
 689              		.set	.LANCHOR10,. + 0
 692              	seven_segment_table:
 693 0000 7E306D79 		.ascii	"~0my3[_p\177{}\037\015=oG\001"
 693      335B5F70 
 693      7F7B7D1F 
 693      0D3D6F47 
 693      01
 694              		.section	.data.start_cmd,"aw"
 695              		.set	.LANCHOR4,. + 0
 698              	start_cmd:
 699 0000 02       		.byte	2
 700              		.section	.data.stop_cmd,"aw"
 701              		.set	.LANCHOR5,. + 0
 704              	stop_cmd:
 705 0000 03       		.byte	3
 706              		.text
 707              	.Letext0:
 708              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 709              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 710              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 711              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 712              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 713              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 714              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 715              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 716              		.file 11 "Core/Inc/tim.h"
ARM GAS  /tmp/ccFD7AbC.s 			page 22


 717              		.file 12 "Core/Inc/usart.h"
 718              		.file 13 "Core/Inc/buffer.h"
 719              		.file 14 "Core/Inc/message.h"
 720              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 721              		.file 16 "Core/Inc/gpio.h"
 722              		.file 17 "<built-in>"
ARM GAS  /tmp/ccFD7AbC.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccFD7AbC.s:16     .text.task_timer:0000000000000000 $t
     /tmp/ccFD7AbC.s:24     .text.task_timer:0000000000000000 task_timer
     /tmp/ccFD7AbC.s:72     .text.task_timer:000000000000002c $d
     /tmp/ccFD7AbC.s:78     .text.seven_segment_display:0000000000000000 $t
     /tmp/ccFD7AbC.s:85     .text.seven_segment_display:0000000000000000 seven_segment_display
     /tmp/ccFD7AbC.s:107    .text.seven_segment_display:000000000000000c $d
     /tmp/ccFD7AbC.s:112    .text.key_read_task:0000000000000000 $t
     /tmp/ccFD7AbC.s:119    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccFD7AbC.s:169    .text.key_read_task:000000000000002c $d
     /tmp/ccFD7AbC.s:176    .text.main_task:0000000000000000 $t
     /tmp/ccFD7AbC.s:183    .text.main_task:0000000000000000 main_task
     /tmp/ccFD7AbC.s:196    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccFD7AbC.s:203    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccFD7AbC.s:251    .text.RS485_Send_Message:0000000000000034 $d
     /tmp/ccFD7AbC.s:258    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccFD7AbC.s:265    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccFD7AbC.s:292    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccFD7AbC.s:298    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccFD7AbC.s:305    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccFD7AbC.s:386    .text.HAL_UART_RxCpltCallback:0000000000000044 $d
     /tmp/ccFD7AbC.s:394    .text.Error_Handler:0000000000000000 $t
     /tmp/ccFD7AbC.s:401    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccFD7AbC.s:433    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccFD7AbC.s:440    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccFD7AbC.s:543    .text.main:0000000000000000 $t
     /tmp/ccFD7AbC.s:550    .text.main:0000000000000000 main
     /tmp/ccFD7AbC.s:605    .text.main:0000000000000038 $d
     /tmp/ccFD7AbC.s:692    .data.seven_segment_table:0000000000000000 seven_segment_table
     /tmp/ccFD7AbC.s:648    .bss.digit:0000000000000000 digit
     /tmp/ccFD7AbC.s:673    .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/ccFD7AbC.s:704    .data.stop_cmd:0000000000000000 stop_cmd
     /tmp/ccFD7AbC.s:698    .data.start_cmd:0000000000000000 start_cmd
     /tmp/ccFD7AbC.s:685    .bss.start_transmission:0000000000000000 start_transmission
     /tmp/ccFD7AbC.s:679    .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccFD7AbC.s:630    .bss.bufferEvent:0000000000000000 bufferEvent
     /tmp/ccFD7AbC.s:635    .bss.curr_event:0000000000000000 curr_event
     /tmp/ccFD7AbC.s:666    .bss.key_value:0000000000000000 key_value
     /tmp/ccFD7AbC.s:641    .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccFD7AbC.s:660    .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccFD7AbC.s:654    .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccFD7AbC.s:627    .bss.bufferEvent:0000000000000000 $d
     /tmp/ccFD7AbC.s:636    .bss.curr_event:0000000000000000 $d
     /tmp/ccFD7AbC.s:642    .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccFD7AbC.s:644    .bss.digit:0000000000000000 $d
     /tmp/ccFD7AbC.s:655    .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccFD7AbC.s:661    .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccFD7AbC.s:667    .bss.key_value:0000000000000000 $d
     /tmp/ccFD7AbC.s:669    .bss.rx_buffer:0000000000000000 $d
     /tmp/ccFD7AbC.s:680    .bss.rx_temp:0000000000000000 $d
     /tmp/ccFD7AbC.s:686    .bss.start_transmission:0000000000000000 $d
     /tmp/ccFD7AbC.s:688    .data.seven_segment_table:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
ARM GAS  /tmp/ccFD7AbC.s 			page 24


htim1
buffer_push
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_USART1_UART_Init
HAL_TIM_Base_Start_IT
