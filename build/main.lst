ARM GAS  /tmp/cccF36uw.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.task_timer,"ax",%progbits
  16              		.align	1
  17              		.global	task_timer
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	task_timer:
  25              	.LFB67:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/cccF36uw.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** unsigned char f_timer_10ms=0;
  48:Core/Src/main.c **** unsigned char f_timer_30ms=0;
  49:Core/Src/main.c **** unsigned char d_timer_30ms;
  50:Core/Src/main.c **** unsigned char key_value;
  51:Core/Src/main.c **** unsigned char curr_event;
  52:Core/Src/main.c **** unsigned char bufferEvent[64];
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** int digit;
  55:Core/Src/main.c **** char seven_segment_table[17] = {	0b1111110,	// '0'
  56:Core/Src/main.c **** 		                            	0b0110000,	// '1'
  57:Core/Src/main.c **** 		   	                          0b1101101,	// '2'
  58:Core/Src/main.c **** 			                            0b1111001,	// '3'
  59:Core/Src/main.c **** 			                            0b0110011,	// '4'
  60:Core/Src/main.c **** 			                            0b1011011,	// '5'
  61:Core/Src/main.c **** 			                            0b1011111,	// '6'
  62:Core/Src/main.c **** 			                            0b1110000,	// '7'
  63:Core/Src/main.c **** 			                            0b1111111,	// '8'
  64:Core/Src/main.c **** 			                            0b1111011,	// '9'
  65:Core/Src/main.c **** 			                            0b1111101,	// 'a'  --10
  66:Core/Src/main.c **** 			                            0b0011111,	// 'b'  --11
  67:Core/Src/main.c **** 			                            0b0001101,	// 'c'  --12
  68:Core/Src/main.c **** 			                            0b0111101,	// 'd'  --13
  69:Core/Src/main.c **** 			                            0b1101111,	// 'e'	--14
  70:Core/Src/main.c **** 			                            0b1000111,	// 'f'  --15
  71:Core/Src/main.c **** 			                            0b0000001 	// '-'  --16
  72:Core/Src/main.c **** };
  73:Core/Src/main.c **** /* USER CODE END PV */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  76:Core/Src/main.c **** void SystemClock_Config(void);
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** void task_timer(void);
  79:Core/Src/main.c **** void seven_segment_display(char input);
  80:Core/Src/main.c **** void key_read_task(void);
  81:Core/Src/main.c **** void main_task(void);
  82:Core/Src/main.c **** void setEvent(unsigned char event);
  83:Core/Src/main.c **** void getevent(unsigned char* event);
  84:Core/Src/main.c **** void uart_TX_task(void);
  85:Core/Src/main.c **** void uart_RX_task(void);
  86:Core/Src/main.c **** void Set_Transmitter_RS485(void);
  87:Core/Src/main.c **** void Set_Receiver_RS485(void);
  88:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  89:Core/Src/main.c **** 
ARM GAS  /tmp/cccF36uw.s 			page 3


  90:Core/Src/main.c **** /* USER CODE END PFP */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  93:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* USER CODE END 0 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /**
  98:Core/Src/main.c ****   * @brief  The application entry point.
  99:Core/Src/main.c ****   * @retval int
 100:Core/Src/main.c ****   */
 101:Core/Src/main.c **** int main(void)
 102:Core/Src/main.c **** {
 103:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END 1 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 110:Core/Src/main.c ****   HAL_Init();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END Init */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Configure the system clock */
 117:Core/Src/main.c ****   SystemClock_Config();
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE END SysInit */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Initialize all configured peripherals */
 124:Core/Src/main.c ****   MX_GPIO_Init();
 125:Core/Src/main.c ****   MX_TIM1_Init();
 126:Core/Src/main.c ****   MX_USART1_UART_Init();
 127:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 128:Core/Src/main.c ****   
 129:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);  
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   //HAL_UART_Receive_IT(&huart1,&rx_buffer1[rx1_wp], 1);
 132:Core/Src/main.c ****   /* USER CODE END 2 */
 133:Core/Src/main.c ****   digit=0;
 134:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 135:Core/Src/main.c ****   /* Infinite loop */
 136:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 137:Core/Src/main.c ****   while (1)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     /* USER CODE END WHILE */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c ****   /* USER CODE END 3 */
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /**
ARM GAS  /tmp/cccF36uw.s 			page 4


 147:Core/Src/main.c ****   * @brief System Clock Configuration
 148:Core/Src/main.c ****   * @retval None
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c **** void SystemClock_Config(void)
 151:Core/Src/main.c **** {
 152:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 153:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 156:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166:Core/Src/main.c ****   {
 167:Core/Src/main.c ****     Error_Handler();
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 180:Core/Src/main.c ****   {
 181:Core/Src/main.c ****     Error_Handler();
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c **** }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** void task_timer(void)
 188:Core/Src/main.c **** {
  27              		.loc 1 188 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 189:Core/Src/main.c ****   if (!f_timer_10ms) return;
  32              		.loc 1 189 3 view .LVU1
  33              		.loc 1 189 7 is_stmt 0 view .LVU2
  34 0000 0A4B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36              		.loc 1 189 6 view .LVU3
  37 0004 4BB1     		cbz	r3, .L1
 190:Core/Src/main.c ****   f_timer_10ms=0;
  38              		.loc 1 190 3 is_stmt 1 view .LVU4
  39              		.loc 1 190 15 is_stmt 0 view .LVU5
ARM GAS  /tmp/cccF36uw.s 			page 5


  40 0006 094B     		ldr	r3, .L4
  41 0008 0022     		movs	r2, #0
  42 000a 1A70     		strb	r2, [r3]
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   d_timer_30ms++;
  43              		.loc 1 192 3 is_stmt 1 view .LVU6
  44              		.loc 1 192 15 is_stmt 0 view .LVU7
  45 000c 084A     		ldr	r2, .L4+4
  46 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  47 0010 0133     		adds	r3, r3, #1
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 1370     		strb	r3, [r2]
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   if(d_timer_30ms==3){
  50              		.loc 1 194 3 is_stmt 1 view .LVU8
  51              		.loc 1 194 5 is_stmt 0 view .LVU9
  52 0016 032B     		cmp	r3, #3
  53 0018 00D0     		beq	.L3
  54              	.L1:
 195:Core/Src/main.c ****     d_timer_30ms =0;
 196:Core/Src/main.c ****     f_timer_10ms=1;
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c ****   
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** }
  55              		.loc 1 200 1 view .LVU10
  56 001a 7047     		bx	lr
  57              	.L3:
 195:Core/Src/main.c ****     d_timer_30ms =0;
  58              		.loc 1 195 5 is_stmt 1 view .LVU11
 195:Core/Src/main.c ****     d_timer_30ms =0;
  59              		.loc 1 195 18 is_stmt 0 view .LVU12
  60 001c 1346     		mov	r3, r2
  61 001e 0022     		movs	r2, #0
  62 0020 1A70     		strb	r2, [r3]
 196:Core/Src/main.c ****   }
  63              		.loc 1 196 5 is_stmt 1 view .LVU13
 196:Core/Src/main.c ****   }
  64              		.loc 1 196 17 is_stmt 0 view .LVU14
  65 0022 024B     		ldr	r3, .L4
  66 0024 0122     		movs	r2, #1
  67 0026 1A70     		strb	r2, [r3]
  68 0028 F7E7     		b	.L1
  69              	.L5:
  70 002a 00BF     		.align	2
  71              	.L4:
  72 002c 00000000 		.word	.LANCHOR0
  73 0030 00000000 		.word	.LANCHOR1
  74              		.cfi_endproc
  75              	.LFE67:
  77              		.section	.text.seven_segment_display,"ax",%progbits
  78              		.align	1
  79              		.global	seven_segment_display
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
ARM GAS  /tmp/cccF36uw.s 			page 6


  85              	seven_segment_display:
  86              	.LVL0:
  87              	.LFB68:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** void seven_segment_display(char input)
 203:Core/Src/main.c **** {
  88              		.loc 1 203 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
 204:Core/Src/main.c ****    uint32_t mask =  a_Pin|b_Pin|c_Pin|d_Pin|e_Pin|f_Pin|g_Pin;
  93              		.loc 1 204 4 view .LVU16
 205:Core/Src/main.c ****    uint32_t val = (uint32_t)input & mask;
  94              		.loc 1 205 4 view .LVU17
  95              		.loc 1 205 13 is_stmt 0 view .LVU18
  96 0000 00F07F00 		and	r0, r0, #127
  97              	.LVL1:
 206:Core/Src/main.c ****    SEGMENT_PORT->ODR = val;
  98              		.loc 1 206 4 is_stmt 1 view .LVU19
  99              		.loc 1 206 22 is_stmt 0 view .LVU20
 100 0004 014B     		ldr	r3, .L7
 101 0006 D860     		str	r0, [r3, #12]
 207:Core/Src/main.c **** }
 102              		.loc 1 207 1 view .LVU21
 103 0008 7047     		bx	lr
 104              	.L8:
 105 000a 00BF     		.align	2
 106              	.L7:
 107 000c 00080140 		.word	1073809408
 108              		.cfi_endproc
 109              	.LFE68:
 111              		.section	.text.key_read_task,"ax",%progbits
 112              		.align	1
 113              		.global	key_read_task
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu softvfp
 119              	key_read_task:
 120              	.LFB69:
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** void key_read_task(void)
 210:Core/Src/main.c **** {
 121              		.loc 1 210 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 211:Core/Src/main.c ****   if(!f_timer_30ms) return;
 126              		.loc 1 211 3 view .LVU23
 127              		.loc 1 211 6 is_stmt 0 view .LVU24
 128 0000 0A4B     		ldr	r3, .L11
 129 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 130              		.loc 1 211 5 view .LVU25
 131 0004 8BB1     		cbz	r3, .L9
 212:Core/Src/main.c ****   unsigned char key_pindata = (uint8_t)(key_GPIO_Port->IDR & key_Pin);
ARM GAS  /tmp/cccF36uw.s 			page 7


 132              		.loc 1 212 3 is_stmt 1 view .LVU26
 133              		.loc 1 212 54 is_stmt 0 view .LVU27
 134 0006 0A4B     		ldr	r3, .L11+4
 135 0008 9B68     		ldr	r3, [r3, #8]
 136              		.loc 1 212 17 view .LVU28
 137 000a 03F08003 		and	r3, r3, #128
 138              	.LVL2:
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   key_value = key_value<<1;
 139              		.loc 1 214 3 is_stmt 1 view .LVU29
 140              		.loc 1 214 24 is_stmt 0 view .LVU30
 141 000e 0949     		ldr	r1, .L11+8
 142 0010 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 143 0012 5200     		lsls	r2, r2, #1
 144 0014 D2B2     		uxtb	r2, r2
 145              		.loc 1 214 13 view .LVU31
 146 0016 0A70     		strb	r2, [r1]
 215:Core/Src/main.c ****   key_value &= 0b00001110;
 147              		.loc 1 215 3 is_stmt 1 view .LVU32
 148              		.loc 1 215 13 is_stmt 0 view .LVU33
 149 0018 02F00E02 		and	r2, r2, #14
 150 001c 0A70     		strb	r2, [r1]
 216:Core/Src/main.c ****   key_value |= (key_pindata>>key_Pin)&0x1;
 151              		.loc 1 216 3 is_stmt 1 view .LVU34
 152              		.loc 1 216 28 is_stmt 0 view .LVU35
 153 001e 8020     		movs	r0, #128
 154 0020 0341     		asrs	r3, r3, r0
 155              	.LVL3:
 156              		.loc 1 216 38 view .LVU36
 157 0022 03F00103 		and	r3, r3, #1
 158              		.loc 1 216 13 view .LVU37
 159 0026 1343     		orrs	r3, r3, r2
 160 0028 0B70     		strb	r3, [r1]
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   if (key_value==KEY_PRESSED){
 161              		.loc 1 218 3 is_stmt 1 view .LVU38
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   }else if(key_value==KEY_RELEASED){
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   }
 162              		.loc 1 222 3 view .LVU39
 163              	.L9:
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** }
 164              		.loc 1 224 1 is_stmt 0 view .LVU40
 165 002a 7047     		bx	lr
 166              	.L12:
 167              		.align	2
 168              	.L11:
 169 002c 00000000 		.word	.LANCHOR2
 170 0030 00080140 		.word	1073809408
 171 0034 00000000 		.word	.LANCHOR3
 172              		.cfi_endproc
 173              	.LFE69:
 175              		.section	.text.main_task,"ax",%progbits
 176              		.align	1
 177              		.global	main_task
ARM GAS  /tmp/cccF36uw.s 			page 8


 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu softvfp
 183              	main_task:
 184              	.LFB70:
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** void main_task(void)
 227:Core/Src/main.c **** {
 185              		.loc 1 227 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** }
 190              		.loc 1 229 1 view .LVU42
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE70:
 195              		.section	.text.setEvent,"ax",%progbits
 196              		.align	1
 197              		.global	setEvent
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu softvfp
 203              	setEvent:
 204              	.LVL4:
 205              	.LFB71:
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** void setEvent(unsigned char event)
 232:Core/Src/main.c **** {
 206              		.loc 1 232 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** }
 211              		.loc 1 234 1 view .LVU44
 212 0000 7047     		bx	lr
 213              		.cfi_endproc
 214              	.LFE71:
 216              		.section	.text.getevent,"ax",%progbits
 217              		.align	1
 218              		.global	getevent
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu softvfp
 224              	getevent:
 225              	.LVL5:
 226              	.LFB72:
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** void getevent(unsigned char* event)
 237:Core/Src/main.c **** {
ARM GAS  /tmp/cccF36uw.s 			page 9


 227              		.loc 1 237 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** }
 232              		.loc 1 239 1 view .LVU46
 233 0000 7047     		bx	lr
 234              		.cfi_endproc
 235              	.LFE72:
 237              		.section	.text.uart_TX_task,"ax",%progbits
 238              		.align	1
 239              		.global	uart_TX_task
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu softvfp
 245              	uart_TX_task:
 246              	.LFB73:
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** void uart_TX_task(void)
 242:Core/Src/main.c **** {
 247              		.loc 1 242 1 view -0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** }
 252              		.loc 1 244 1 view .LVU48
 253 0000 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE73:
 257              		.section	.text.uart_RX_task,"ax",%progbits
 258              		.align	1
 259              		.global	uart_RX_task
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu softvfp
 265              	uart_RX_task:
 266              	.LFB74:
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** void uart_RX_task(void)
 247:Core/Src/main.c **** {
 267              		.loc 1 247 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** }
 272              		.loc 1 249 1 view .LVU50
 273 0000 7047     		bx	lr
 274              		.cfi_endproc
 275              	.LFE74:
ARM GAS  /tmp/cccF36uw.s 			page 10


 277              		.section	.text.Set_Transmitter_RS485,"ax",%progbits
 278              		.align	1
 279              		.global	Set_Transmitter_RS485
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu softvfp
 285              	Set_Transmitter_RS485:
 286              	.LFB75:
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** void Set_Transmitter_RS485(void)
 252:Core/Src/main.c **** {
 287              		.loc 1 252 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** }
 292              		.loc 1 254 1 view .LVU52
 293 0000 7047     		bx	lr
 294              		.cfi_endproc
 295              	.LFE75:
 297              		.section	.text.Set_Receiver_RS485,"ax",%progbits
 298              		.align	1
 299              		.global	Set_Receiver_RS485
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu softvfp
 305              	Set_Receiver_RS485:
 306              	.LFB76:
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** void Set_Receiver_RS485(void)
 257:Core/Src/main.c **** {
 307              		.loc 1 257 1 view -0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** }
 312              		.loc 1 259 1 view .LVU54
 313 0000 7047     		bx	lr
 314              		.cfi_endproc
 315              	.LFE76:
 317              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 318              		.align	1
 319              		.global	HAL_TIM_PeriodElapsedCallback
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu softvfp
 325              	HAL_TIM_PeriodElapsedCallback:
 326              	.LVL6:
 327              	.LFB77:
 260:Core/Src/main.c **** 
ARM GAS  /tmp/cccF36uw.s 			page 11


 261:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 262:Core/Src/main.c **** {
 328              		.loc 1 262 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 263:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
 264:Core/Src/main.c ****   if (htim == &htim1)
 333              		.loc 1 264 3 view .LVU56
 334              		.loc 1 264 6 is_stmt 0 view .LVU57
 335 0000 034B     		ldr	r3, .L23
 336 0002 8342     		cmp	r3, r0
 337 0004 00D0     		beq	.L22
 338              	.L20:
 265:Core/Src/main.c ****   {
 266:Core/Src/main.c **** 	  f_timer_10ms=1;
 267:Core/Src/main.c ****   }
 268:Core/Src/main.c ****   
 269:Core/Src/main.c **** }
 339              		.loc 1 269 1 view .LVU58
 340 0006 7047     		bx	lr
 341              	.L22:
 266:Core/Src/main.c ****   }
 342              		.loc 1 266 4 is_stmt 1 view .LVU59
 266:Core/Src/main.c ****   }
 343              		.loc 1 266 16 is_stmt 0 view .LVU60
 344 0008 024B     		ldr	r3, .L23+4
 345 000a 0122     		movs	r2, #1
 346 000c 1A70     		strb	r2, [r3]
 347              		.loc 1 269 1 view .LVU61
 348 000e FAE7     		b	.L20
 349              	.L24:
 350              		.align	2
 351              	.L23:
 352 0010 00000000 		.word	htim1
 353 0014 00000000 		.word	.LANCHOR0
 354              		.cfi_endproc
 355              	.LFE77:
 357              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 358              		.align	1
 359              		.global	HAL_UART_RxCpltCallback
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu softvfp
 365              	HAL_UART_RxCpltCallback:
 366              	.LVL7:
 367              	.LFB78:
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 274:Core/Src/main.c **** {
 368              		.loc 1 274 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cccF36uw.s 			page 12


 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 275:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** 	if (huart == &huart1)
 373              		.loc 1 277 2 view .LVU63
 278:Core/Src/main.c **** 	{
 279:Core/Src/main.c **** 	/*	rx1_wp++;
 280:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart1, &rx_buffer1[rx1_wp], 1);
 281:Core/Src/main.c **** 		 if(rx1_wp>63){
 282:Core/Src/main.c **** 		    	rx1_wp=0;
 283:Core/Src/main.c **** 		    }*/
 284:Core/Src/main.c **** 	}
 374              		.loc 1 284 2 view .LVU64
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** }
 375              		.loc 1 287 1 is_stmt 0 view .LVU65
 376 0000 7047     		bx	lr
 377              		.cfi_endproc
 378              	.LFE78:
 380              		.section	.text.Error_Handler,"ax",%progbits
 381              		.align	1
 382              		.global	Error_Handler
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu softvfp
 388              	Error_Handler:
 389              	.LFB79:
 288:Core/Src/main.c **** /* USER CODE END 4 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /**
 291:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 292:Core/Src/main.c ****   * @retval None
 293:Core/Src/main.c ****   */
 294:Core/Src/main.c **** void Error_Handler(void)
 295:Core/Src/main.c **** {
 390              		.loc 1 295 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ Volatile: function does not return.
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 296:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 297:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 298:Core/Src/main.c ****   __disable_irq();
 396              		.loc 1 298 3 view .LVU67
 397              	.LBB4:
 398              	.LBI4:
 399              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
ARM GAS  /tmp/cccF36uw.s 			page 13


   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cccF36uw.s 			page 14


  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
ARM GAS  /tmp/cccF36uw.s 			page 15


 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 400              		.loc 2 140 27 view .LVU68
 401              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 402              		.loc 2 142 3 view .LVU69
 403              		.syntax unified
 404              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 405 0000 72B6     		cpsid i
 406              	@ 0 "" 2
 407              		.thumb
 408              		.syntax unified
 409              	.L27:
 410              	.LBE5:
 411              	.LBE4:
 299:Core/Src/main.c ****   while (1)
 412              		.loc 1 299 3 discriminator 1 view .LVU70
 300:Core/Src/main.c ****   {
 301:Core/Src/main.c ****   }
 413              		.loc 1 301 3 discriminator 1 view .LVU71
 299:Core/Src/main.c ****   while (1)
 414              		.loc 1 299 9 discriminator 1 view .LVU72
 415 0002 FEE7     		b	.L27
 416              		.cfi_endproc
 417              	.LFE79:
 419              		.section	.text.SystemClock_Config,"ax",%progbits
 420              		.align	1
 421              		.global	SystemClock_Config
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu softvfp
 427              	SystemClock_Config:
 428              	.LFB66:
 151:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 429              		.loc 1 151 1 view -0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 64
ARM GAS  /tmp/cccF36uw.s 			page 16


 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433 0000 00B5     		push	{lr}
 434              	.LCFI0:
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 14, -4
 437 0002 91B0     		sub	sp, sp, #68
 438              	.LCFI1:
 439              		.cfi_def_cfa_offset 72
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 440              		.loc 1 152 3 view .LVU74
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 441              		.loc 1 152 22 is_stmt 0 view .LVU75
 442 0004 2822     		movs	r2, #40
 443 0006 0021     		movs	r1, #0
 444 0008 06A8     		add	r0, sp, #24
 445 000a FFF7FEFF 		bl	memset
 446              	.LVL8:
 153:Core/Src/main.c **** 
 447              		.loc 1 153 3 is_stmt 1 view .LVU76
 153:Core/Src/main.c **** 
 448              		.loc 1 153 22 is_stmt 0 view .LVU77
 449 000e 0023     		movs	r3, #0
 450 0010 0193     		str	r3, [sp, #4]
 451 0012 0293     		str	r3, [sp, #8]
 452 0014 0393     		str	r3, [sp, #12]
 453 0016 0493     		str	r3, [sp, #16]
 454 0018 0593     		str	r3, [sp, #20]
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 455              		.loc 1 158 3 is_stmt 1 view .LVU78
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 456              		.loc 1 158 36 is_stmt 0 view .LVU79
 457 001a 0122     		movs	r2, #1
 458 001c 0692     		str	r2, [sp, #24]
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 459              		.loc 1 159 3 is_stmt 1 view .LVU80
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 460              		.loc 1 159 30 is_stmt 0 view .LVU81
 461 001e 4FF48033 		mov	r3, #65536
 462 0022 0793     		str	r3, [sp, #28]
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 463              		.loc 1 160 3 is_stmt 1 view .LVU82
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 464              		.loc 1 161 3 view .LVU83
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 465              		.loc 1 161 30 is_stmt 0 view .LVU84
 466 0024 0A92     		str	r2, [sp, #40]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 467              		.loc 1 162 3 is_stmt 1 view .LVU85
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 468              		.loc 1 162 34 is_stmt 0 view .LVU86
 469 0026 0222     		movs	r2, #2
 470 0028 0D92     		str	r2, [sp, #52]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 471              		.loc 1 163 3 is_stmt 1 view .LVU87
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 472              		.loc 1 163 35 is_stmt 0 view .LVU88
 473 002a 0E93     		str	r3, [sp, #56]
ARM GAS  /tmp/cccF36uw.s 			page 17


 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 474              		.loc 1 164 3 is_stmt 1 view .LVU89
 165:Core/Src/main.c ****   {
 475              		.loc 1 165 3 view .LVU90
 165:Core/Src/main.c ****   {
 476              		.loc 1 165 7 is_stmt 0 view .LVU91
 477 002c 06A8     		add	r0, sp, #24
 478 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 479              	.LVL9:
 165:Core/Src/main.c ****   {
 480              		.loc 1 165 6 view .LVU92
 481 0032 88B9     		cbnz	r0, .L32
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 482              		.loc 1 172 3 is_stmt 1 view .LVU93
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 483              		.loc 1 172 31 is_stmt 0 view .LVU94
 484 0034 0F23     		movs	r3, #15
 485 0036 0193     		str	r3, [sp, #4]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 486              		.loc 1 174 3 is_stmt 1 view .LVU95
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 487              		.loc 1 174 34 is_stmt 0 view .LVU96
 488 0038 0223     		movs	r3, #2
 489 003a 0293     		str	r3, [sp, #8]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 490              		.loc 1 175 3 is_stmt 1 view .LVU97
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 491              		.loc 1 175 35 is_stmt 0 view .LVU98
 492 003c 8023     		movs	r3, #128
 493 003e 0393     		str	r3, [sp, #12]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 494              		.loc 1 176 3 is_stmt 1 view .LVU99
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 495              		.loc 1 176 36 is_stmt 0 view .LVU100
 496 0040 4FF48063 		mov	r3, #1024
 497 0044 0493     		str	r3, [sp, #16]
 177:Core/Src/main.c **** 
 498              		.loc 1 177 3 is_stmt 1 view .LVU101
 177:Core/Src/main.c **** 
 499              		.loc 1 177 36 is_stmt 0 view .LVU102
 500 0046 0021     		movs	r1, #0
 501 0048 0591     		str	r1, [sp, #20]
 179:Core/Src/main.c ****   {
 502              		.loc 1 179 3 is_stmt 1 view .LVU103
 179:Core/Src/main.c ****   {
 503              		.loc 1 179 7 is_stmt 0 view .LVU104
 504 004a 01A8     		add	r0, sp, #4
 505 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 506              	.LVL10:
 179:Core/Src/main.c ****   {
 507              		.loc 1 179 6 view .LVU105
 508 0050 20B9     		cbnz	r0, .L33
 183:Core/Src/main.c **** 
 509              		.loc 1 183 1 view .LVU106
 510 0052 11B0     		add	sp, sp, #68
 511              	.LCFI2:
 512              		.cfi_remember_state
ARM GAS  /tmp/cccF36uw.s 			page 18


 513              		.cfi_def_cfa_offset 4
 514              		@ sp needed
 515 0054 5DF804FB 		ldr	pc, [sp], #4
 516              	.L32:
 517              	.LCFI3:
 518              		.cfi_restore_state
 167:Core/Src/main.c ****   }
 519              		.loc 1 167 5 is_stmt 1 view .LVU107
 520 0058 FFF7FEFF 		bl	Error_Handler
 521              	.LVL11:
 522              	.L33:
 181:Core/Src/main.c ****   }
 523              		.loc 1 181 5 view .LVU108
 524 005c FFF7FEFF 		bl	Error_Handler
 525              	.LVL12:
 526              		.cfi_endproc
 527              	.LFE66:
 529              		.section	.text.main,"ax",%progbits
 530              		.align	1
 531              		.global	main
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu softvfp
 537              	main:
 538              	.LFB65:
 102:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 539              		.loc 1 102 1 view -0
 540              		.cfi_startproc
 541              		@ Volatile: function does not return.
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544 0000 08B5     		push	{r3, lr}
 545              	.LCFI4:
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 3, -8
 548              		.cfi_offset 14, -4
 110:Core/Src/main.c **** 
 549              		.loc 1 110 3 view .LVU110
 550 0002 FFF7FEFF 		bl	HAL_Init
 551              	.LVL13:
 117:Core/Src/main.c **** 
 552              		.loc 1 117 3 view .LVU111
 553 0006 FFF7FEFF 		bl	SystemClock_Config
 554              	.LVL14:
 124:Core/Src/main.c ****   MX_TIM1_Init();
 555              		.loc 1 124 3 view .LVU112
 556 000a FFF7FEFF 		bl	MX_GPIO_Init
 557              	.LVL15:
 125:Core/Src/main.c ****   MX_USART1_UART_Init();
 558              		.loc 1 125 3 view .LVU113
 559 000e FFF7FEFF 		bl	MX_TIM1_Init
 560              	.LVL16:
 126:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 561              		.loc 1 126 3 view .LVU114
 562 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 563              	.LVL17:
ARM GAS  /tmp/cccF36uw.s 			page 19


 129:Core/Src/main.c **** 
 564              		.loc 1 129 3 view .LVU115
 565 0016 0548     		ldr	r0, .L37
 566 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 567              	.LVL18:
 133:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 568              		.loc 1 133 3 view .LVU116
 133:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 569              		.loc 1 133 8 is_stmt 0 view .LVU117
 570 001c 044B     		ldr	r3, .L37+4
 571 001e 0022     		movs	r2, #0
 572 0020 1A60     		str	r2, [r3]
 134:Core/Src/main.c ****   /* Infinite loop */
 573              		.loc 1 134 3 is_stmt 1 view .LVU118
 574 0022 044B     		ldr	r3, .L37+8
 575 0024 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 576 0026 FFF7FEFF 		bl	seven_segment_display
 577              	.LVL19:
 578              	.L35:
 137:Core/Src/main.c ****   {
 579              		.loc 1 137 3 discriminator 1 view .LVU119
 142:Core/Src/main.c ****   /* USER CODE END 3 */
 580              		.loc 1 142 3 discriminator 1 view .LVU120
 137:Core/Src/main.c ****   {
 581              		.loc 1 137 9 discriminator 1 view .LVU121
 582 002a FEE7     		b	.L35
 583              	.L38:
 584              		.align	2
 585              	.L37:
 586 002c 00000000 		.word	htim1
 587 0030 00000000 		.word	.LANCHOR4
 588 0034 00000000 		.word	.LANCHOR5
 589              		.cfi_endproc
 590              	.LFE65:
 592              		.global	seven_segment_table
 593              		.global	digit
 594              		.global	bufferEvent
 595              		.global	curr_event
 596              		.global	key_value
 597              		.global	d_timer_30ms
 598              		.global	f_timer_30ms
 599              		.global	f_timer_10ms
 600              		.section	.bss.bufferEvent,"aw",%nobits
 601              		.align	2
 604              	bufferEvent:
 605 0000 00000000 		.space	64
 605      00000000 
 605      00000000 
 605      00000000 
 605      00000000 
 606              		.section	.bss.curr_event,"aw",%nobits
 609              	curr_event:
 610 0000 00       		.space	1
 611              		.section	.bss.d_timer_30ms,"aw",%nobits
 612              		.set	.LANCHOR1,. + 0
 615              	d_timer_30ms:
 616 0000 00       		.space	1
ARM GAS  /tmp/cccF36uw.s 			page 20


 617              		.section	.bss.digit,"aw",%nobits
 618              		.align	2
 619              		.set	.LANCHOR4,. + 0
 622              	digit:
 623 0000 00000000 		.space	4
 624              		.section	.bss.f_timer_10ms,"aw",%nobits
 625              		.set	.LANCHOR0,. + 0
 628              	f_timer_10ms:
 629 0000 00       		.space	1
 630              		.section	.bss.f_timer_30ms,"aw",%nobits
 631              		.set	.LANCHOR2,. + 0
 634              	f_timer_30ms:
 635 0000 00       		.space	1
 636              		.section	.bss.key_value,"aw",%nobits
 637              		.set	.LANCHOR3,. + 0
 640              	key_value:
 641 0000 00       		.space	1
 642              		.section	.data.seven_segment_table,"aw"
 643              		.align	2
 644              		.set	.LANCHOR5,. + 0
 647              	seven_segment_table:
 648 0000 7E306D79 		.ascii	"~0my3[_p\177{}\037\015=oG\001"
 648      335B5F70 
 648      7F7B7D1F 
 648      0D3D6F47 
 648      01
 649              		.text
 650              	.Letext0:
 651              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 652              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 653              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 654              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 655              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 656              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 657              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 658              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 659              		.file 11 "Core/Inc/tim.h"
 660              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 661              		.file 13 "Core/Inc/gpio.h"
 662              		.file 14 "Core/Inc/usart.h"
 663              		.file 15 "<built-in>"
ARM GAS  /tmp/cccF36uw.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cccF36uw.s:16     .text.task_timer:0000000000000000 $t
     /tmp/cccF36uw.s:24     .text.task_timer:0000000000000000 task_timer
     /tmp/cccF36uw.s:72     .text.task_timer:000000000000002c $d
     /tmp/cccF36uw.s:78     .text.seven_segment_display:0000000000000000 $t
     /tmp/cccF36uw.s:85     .text.seven_segment_display:0000000000000000 seven_segment_display
     /tmp/cccF36uw.s:107    .text.seven_segment_display:000000000000000c $d
     /tmp/cccF36uw.s:112    .text.key_read_task:0000000000000000 $t
     /tmp/cccF36uw.s:119    .text.key_read_task:0000000000000000 key_read_task
     /tmp/cccF36uw.s:169    .text.key_read_task:000000000000002c $d
     /tmp/cccF36uw.s:176    .text.main_task:0000000000000000 $t
     /tmp/cccF36uw.s:183    .text.main_task:0000000000000000 main_task
     /tmp/cccF36uw.s:196    .text.setEvent:0000000000000000 $t
     /tmp/cccF36uw.s:203    .text.setEvent:0000000000000000 setEvent
     /tmp/cccF36uw.s:217    .text.getevent:0000000000000000 $t
     /tmp/cccF36uw.s:224    .text.getevent:0000000000000000 getevent
     /tmp/cccF36uw.s:238    .text.uart_TX_task:0000000000000000 $t
     /tmp/cccF36uw.s:245    .text.uart_TX_task:0000000000000000 uart_TX_task
     /tmp/cccF36uw.s:258    .text.uart_RX_task:0000000000000000 $t
     /tmp/cccF36uw.s:265    .text.uart_RX_task:0000000000000000 uart_RX_task
     /tmp/cccF36uw.s:278    .text.Set_Transmitter_RS485:0000000000000000 $t
     /tmp/cccF36uw.s:285    .text.Set_Transmitter_RS485:0000000000000000 Set_Transmitter_RS485
     /tmp/cccF36uw.s:298    .text.Set_Receiver_RS485:0000000000000000 $t
     /tmp/cccF36uw.s:305    .text.Set_Receiver_RS485:0000000000000000 Set_Receiver_RS485
     /tmp/cccF36uw.s:318    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cccF36uw.s:325    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cccF36uw.s:352    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/cccF36uw.s:358    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cccF36uw.s:365    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cccF36uw.s:381    .text.Error_Handler:0000000000000000 $t
     /tmp/cccF36uw.s:388    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cccF36uw.s:420    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cccF36uw.s:427    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cccF36uw.s:530    .text.main:0000000000000000 $t
     /tmp/cccF36uw.s:537    .text.main:0000000000000000 main
     /tmp/cccF36uw.s:586    .text.main:000000000000002c $d
     /tmp/cccF36uw.s:647    .data.seven_segment_table:0000000000000000 seven_segment_table
     /tmp/cccF36uw.s:622    .bss.digit:0000000000000000 digit
     /tmp/cccF36uw.s:604    .bss.bufferEvent:0000000000000000 bufferEvent
     /tmp/cccF36uw.s:609    .bss.curr_event:0000000000000000 curr_event
     /tmp/cccF36uw.s:640    .bss.key_value:0000000000000000 key_value
     /tmp/cccF36uw.s:615    .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/cccF36uw.s:634    .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/cccF36uw.s:628    .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/cccF36uw.s:601    .bss.bufferEvent:0000000000000000 $d
     /tmp/cccF36uw.s:610    .bss.curr_event:0000000000000000 $d
     /tmp/cccF36uw.s:616    .bss.d_timer_30ms:0000000000000000 $d
     /tmp/cccF36uw.s:618    .bss.digit:0000000000000000 $d
     /tmp/cccF36uw.s:629    .bss.f_timer_10ms:0000000000000000 $d
     /tmp/cccF36uw.s:635    .bss.f_timer_30ms:0000000000000000 $d
     /tmp/cccF36uw.s:641    .bss.key_value:0000000000000000 $d
     /tmp/cccF36uw.s:643    .data.seven_segment_table:0000000000000000 $d

UNDEFINED SYMBOLS
htim1
memset
ARM GAS  /tmp/cccF36uw.s 			page 22


HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_USART1_UART_Init
HAL_TIM_Base_Start_IT
