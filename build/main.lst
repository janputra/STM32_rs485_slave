ARM GAS  /tmp/ccX4ZANx.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.task_timer,"ax",%progbits
  16              		.align	1
  17              		.global	task_timer
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	task_timer:
  25              	.LFB67:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "message.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccX4ZANx.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** uint8_t f_busy;
  48:Core/Src/main.c **** uint8_t f_timer_10ms=0;
  49:Core/Src/main.c **** uint8_t f_timer_30ms=0;
  50:Core/Src/main.c **** uint8_t d_timer_30ms;
  51:Core/Src/main.c **** uint8_t key_value;
  52:Core/Src/main.c **** uint8_t curr_event;
  53:Core/Src/main.c **** //uint8_t bufferEvent[64];
  54:Core/Src/main.c **** uint8_t read_res;
  55:Core/Src/main.c **** uint8_t rx_temp;
  56:Core/Src/main.c **** uint8_t transmission_f;
  57:Core/Src/main.c **** uint8_t start_cmd=0x2;
  58:Core/Src/main.c **** uint8_t stop_cmd=0x3;
  59:Core/Src/main.c **** circular_buffer rx_buffer;
  60:Core/Src/main.c **** circular_buffer event_buffer;
  61:Core/Src/main.c **** uint8_t ID;
  62:Core/Src/main.c **** uint8_t TX_msg[4];
  63:Core/Src/main.c **** uint8_t RX_msg[4];
  64:Core/Src/main.c **** uint8_t state,event;
  65:Core/Src/main.c **** int digit;
  66:Core/Src/main.c **** uint8_t seven_segment_table[17] = {	0b0111111,	// '0'
  67:Core/Src/main.c **** 		                            	 0b0000110,	// '1'
  68:Core/Src/main.c **** 		   	                           0b1011011,	// '2'
  69:Core/Src/main.c **** 			                             0b1001111,	// '3'
  70:Core/Src/main.c **** 			                             0b1100110,	// '4'
  71:Core/Src/main.c ****                                    0b1101101,	// '5'
  72:Core/Src/main.c ****                                    0b1111101,	// '6'
  73:Core/Src/main.c ****                                    0b0000111,	// '7'
  74:Core/Src/main.c **** 			                             0b1111111,	// '8'
  75:Core/Src/main.c ****                                    0b1101111,	// '9'
  76:Core/Src/main.c ****                                    0b1011111,	// 'a'  --10
  77:Core/Src/main.c ****                                    0b1111100,	// 'b'  --11
  78:Core/Src/main.c **** 			                             0b1011000,	// 'c'  --14
  79:Core/Src/main.c ****                                    0b1011110,	// 'd'  --13
  80:Core/Src/main.c ****                                    0b1111011,	// 'e'	--14
  81:Core/Src/main.c ****                                    0b1110001,	// 'f'  --15
  82:Core/Src/main.c ****                                    0b1000000 	// '-'  --16
  83:Core/Src/main.c **** };
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* USER CODE END PV */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/ccX4ZANx.s 			page 3


  90:Core/Src/main.c **** void SystemClock_Config(void);
  91:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  92:Core/Src/main.c **** void task_timer(void);
  93:Core/Src/main.c **** void seven_segment_display(char input);
  94:Core/Src/main.c **** void key_read_task(void);
  95:Core/Src/main.c **** void main_task(void);
  96:Core/Src/main.c **** void RS485_Send_Message(void);
  97:Core/Src/main.c **** uint8_t RS485_Read_Message(void);
  98:Core/Src/main.c **** /* USER CODE END PFP */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 101:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* USER CODE END 0 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /**
 106:Core/Src/main.c ****   * @brief  The application entry point.
 107:Core/Src/main.c ****   * @retval int
 108:Core/Src/main.c ****   */
 109:Core/Src/main.c **** int main(void)
 110:Core/Src/main.c **** {
 111:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END 1 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 118:Core/Src/main.c ****   HAL_Init();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END Init */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Configure the system clock */
 125:Core/Src/main.c ****   SystemClock_Config();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END SysInit */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Initialize all configured peripherals */
 132:Core/Src/main.c ****   MX_GPIO_Init();
 133:Core/Src/main.c ****   MX_TIM1_Init();
 134:Core/Src/main.c ****   MX_USART1_UART_Init();
 135:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 136:Core/Src/main.c ****   
 137:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);  
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****  	HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 140:Core/Src/main.c ****   /* USER CODE END 2 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Infinite loop */
 143:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 144:Core/Src/main.c **** #ifdef SLAVE_1
 145:Core/Src/main.c ****                 
 146:Core/Src/main.c ****   ID =0x10;
ARM GAS  /tmp/ccX4ZANx.s 			page 4


 147:Core/Src/main.c **** #endif
 148:Core/Src/main.c **** #ifdef SLAVE_2
 149:Core/Src/main.c ****                 
 150:Core/Src/main.c ****   ID=0x20;
 151:Core/Src/main.c **** #endif
 152:Core/Src/main.c ****   state = STATE_WAITING_REQUEST;
 153:Core/Src/main.c ****   event = EVENT_RESET;
 154:Core/Src/main.c ****   digit=16;
 155:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   while (1)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     /* USER CODE END WHILE */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 162:Core/Src/main.c ****      
 163:Core/Src/main.c ****       
 164:Core/Src/main.c ****       task_timer();
 165:Core/Src/main.c ****       key_read_task();
 166:Core/Src/main.c ****       main_task();
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c ****   /* USER CODE END 3 */
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief System Clock Configuration
 173:Core/Src/main.c ****   * @retval None
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c **** void SystemClock_Config(void)
 176:Core/Src/main.c **** {
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 181:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****     Error_Handler();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 203:Core/Src/main.c **** 
ARM GAS  /tmp/ccX4ZANx.s 			page 5


 204:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** void task_timer(void)
 213:Core/Src/main.c **** {
  27              		.loc 1 213 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 214:Core/Src/main.c ****   if (!f_timer_10ms) return;
  32              		.loc 1 214 3 view .LVU1
  33              		.loc 1 214 7 is_stmt 0 view .LVU2
  34 0000 0A4B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36              		.loc 1 214 6 view .LVU3
  37 0004 4BB1     		cbz	r3, .L1
 215:Core/Src/main.c ****   f_timer_10ms=0;
  38              		.loc 1 215 3 is_stmt 1 view .LVU4
  39              		.loc 1 215 15 is_stmt 0 view .LVU5
  40 0006 094B     		ldr	r3, .L4
  41 0008 0022     		movs	r2, #0
  42 000a 1A70     		strb	r2, [r3]
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   d_timer_30ms++;
  43              		.loc 1 217 3 is_stmt 1 view .LVU6
  44              		.loc 1 217 15 is_stmt 0 view .LVU7
  45 000c 084A     		ldr	r2, .L4+4
  46 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  47 0010 0133     		adds	r3, r3, #1
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 1370     		strb	r3, [r2]
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   if(d_timer_30ms==3){
  50              		.loc 1 219 3 is_stmt 1 view .LVU8
  51              		.loc 1 219 5 is_stmt 0 view .LVU9
  52 0016 032B     		cmp	r3, #3
  53 0018 00D0     		beq	.L3
  54              	.L1:
 220:Core/Src/main.c ****     d_timer_30ms =0;
 221:Core/Src/main.c ****     f_timer_30ms=1;
 222:Core/Src/main.c ****     
 223:Core/Src/main.c ****     
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c ****   
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** }
  55              		.loc 1 227 1 view .LVU10
  56 001a 7047     		bx	lr
  57              	.L3:
 220:Core/Src/main.c ****     d_timer_30ms =0;
  58              		.loc 1 220 5 is_stmt 1 view .LVU11
ARM GAS  /tmp/ccX4ZANx.s 			page 6


 220:Core/Src/main.c ****     d_timer_30ms =0;
  59              		.loc 1 220 18 is_stmt 0 view .LVU12
  60 001c 1346     		mov	r3, r2
  61 001e 0022     		movs	r2, #0
  62 0020 1A70     		strb	r2, [r3]
 221:Core/Src/main.c ****     
  63              		.loc 1 221 5 is_stmt 1 view .LVU13
 221:Core/Src/main.c ****     
  64              		.loc 1 221 17 is_stmt 0 view .LVU14
  65 0022 044B     		ldr	r3, .L4+8
  66 0024 0122     		movs	r2, #1
  67 0026 1A70     		strb	r2, [r3]
  68 0028 F7E7     		b	.L1
  69              	.L5:
  70 002a 00BF     		.align	2
  71              	.L4:
  72 002c 00000000 		.word	.LANCHOR0
  73 0030 00000000 		.word	.LANCHOR1
  74 0034 00000000 		.word	.LANCHOR2
  75              		.cfi_endproc
  76              	.LFE67:
  78              		.section	.text.seven_segment_display,"ax",%progbits
  79              		.align	1
  80              		.global	seven_segment_display
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	seven_segment_display:
  87              	.LVL0:
  88              	.LFB68:
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** void seven_segment_display(char input)
 230:Core/Src/main.c **** {
  89              		.loc 1 230 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 231:Core/Src/main.c ****    uint32_t mask =  a_Pin|b_Pin|c_Pin|d_Pin|e_Pin|f_Pin|g_Pin;
  94              		.loc 1 231 4 view .LVU16
 232:Core/Src/main.c ****    uint32_t val = (uint32_t)input & mask;
  95              		.loc 1 232 4 view .LVU17
  96              		.loc 1 232 13 is_stmt 0 view .LVU18
  97 0000 00F07F00 		and	r0, r0, #127
  98              	.LVL1:
 233:Core/Src/main.c ****    SEGMENT_PORT->ODR = val;
  99              		.loc 1 233 4 is_stmt 1 view .LVU19
 100              		.loc 1 233 22 is_stmt 0 view .LVU20
 101 0004 014B     		ldr	r3, .L7
 102 0006 D860     		str	r0, [r3, #12]
 234:Core/Src/main.c **** }
 103              		.loc 1 234 1 view .LVU21
 104 0008 7047     		bx	lr
 105              	.L8:
 106 000a 00BF     		.align	2
 107              	.L7:
ARM GAS  /tmp/ccX4ZANx.s 			page 7


 108 000c 00080140 		.word	1073809408
 109              		.cfi_endproc
 110              	.LFE68:
 112              		.section	.text.key_read_task,"ax",%progbits
 113              		.align	1
 114              		.global	key_read_task
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu softvfp
 120              	key_read_task:
 121              	.LFB69:
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** void key_read_task(void)
 237:Core/Src/main.c **** {
 122              		.loc 1 237 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126 0000 08B5     		push	{r3, lr}
 127              	.LCFI0:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 3, -8
 130              		.cfi_offset 14, -4
 238:Core/Src/main.c ****   if(!f_timer_30ms) return;
 131              		.loc 1 238 3 view .LVU23
 132              		.loc 1 238 6 is_stmt 0 view .LVU24
 133 0002 114B     		ldr	r3, .L15
 134 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 135              		.loc 1 238 5 view .LVU25
 136 0006 A3B1     		cbz	r3, .L9
 239:Core/Src/main.c ****   f_timer_30ms =0; 
 137              		.loc 1 239 3 is_stmt 1 view .LVU26
 138              		.loc 1 239 16 is_stmt 0 view .LVU27
 139 0008 0F4B     		ldr	r3, .L15
 140 000a 0022     		movs	r2, #0
 141 000c 1A70     		strb	r2, [r3]
 240:Core/Src/main.c ****    
 241:Core/Src/main.c ****  
 242:Core/Src/main.c ****   unsigned char key_pindata = (uint8_t)(key_GPIO_Port->IDR & key_Pin);
 142              		.loc 1 242 3 is_stmt 1 view .LVU28
 143              		.loc 1 242 54 is_stmt 0 view .LVU29
 144 000e 0F4B     		ldr	r3, .L15+4
 145 0010 9A68     		ldr	r2, [r3, #8]
 146              	.LVL2:
 243:Core/Src/main.c ****  
 244:Core/Src/main.c ****   key_value = key_value<<1;
 147              		.loc 1 244 3 is_stmt 1 view .LVU30
 148              		.loc 1 244 24 is_stmt 0 view .LVU31
 149 0012 0F49     		ldr	r1, .L15+8
 150 0014 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 151 0016 5B00     		lsls	r3, r3, #1
 152 0018 DBB2     		uxtb	r3, r3
 153              		.loc 1 244 13 view .LVU32
 154 001a 0B70     		strb	r3, [r1]
 245:Core/Src/main.c ****   key_value &= 0b00001110;
 155              		.loc 1 245 3 is_stmt 1 view .LVU33
ARM GAS  /tmp/ccX4ZANx.s 			page 8


 156              		.loc 1 245 13 is_stmt 0 view .LVU34
 157 001c 03F00E03 		and	r3, r3, #14
 158 0020 0B70     		strb	r3, [r1]
 246:Core/Src/main.c ****   key_value |= key_pindata&0X1;
 159              		.loc 1 246 3 is_stmt 1 view .LVU35
 160              		.loc 1 246 27 is_stmt 0 view .LVU36
 161 0022 02F00102 		and	r2, r2, #1
 162              	.LVL3:
 163              		.loc 1 246 13 view .LVU37
 164 0026 1343     		orrs	r3, r3, r2
 165 0028 0B70     		strb	r3, [r1]
 247:Core/Src/main.c ****  
 248:Core/Src/main.c ****   if (key_value==KEY_PRESSED){
 166              		.loc 1 248 3 is_stmt 1 view .LVU38
 167              		.loc 1 248 6 is_stmt 0 view .LVU39
 168 002a 0C2B     		cmp	r3, #12
 169 002c 02D0     		beq	.L13
 249:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 250:Core/Src/main.c ****       
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   }else if(key_value==KEY_RELEASED){
 170              		.loc 1 252 9 is_stmt 1 view .LVU40
 171              		.loc 1 252 11 is_stmt 0 view .LVU41
 172 002e 032B     		cmp	r3, #3
 173 0030 05D0     		beq	.L14
 174              	.L9:
 253:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_RELEASED);
 254:Core/Src/main.c ****   }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** }
 175              		.loc 1 256 1 view .LVU42
 176 0032 08BD     		pop	{r3, pc}
 177              	.L13:
 249:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 178              		.loc 1 249 7 is_stmt 1 view .LVU43
 179 0034 0121     		movs	r1, #1
 180 0036 0748     		ldr	r0, .L15+12
 181 0038 FFF7FEFF 		bl	buffer_push
 182              	.LVL4:
 183 003c F9E7     		b	.L9
 184              	.L14:
 253:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_RELEASED);
 185              		.loc 1 253 7 view .LVU44
 186 003e 0221     		movs	r1, #2
 187 0040 0448     		ldr	r0, .L15+12
 188 0042 FFF7FEFF 		bl	buffer_push
 189              	.LVL5:
 190 0046 F4E7     		b	.L9
 191              	.L16:
 192              		.align	2
 193              	.L15:
 194 0048 00000000 		.word	.LANCHOR2
 195 004c 000C0140 		.word	1073810432
 196 0050 00000000 		.word	.LANCHOR3
 197 0054 00000000 		.word	.LANCHOR4
 198              		.cfi_endproc
 199              	.LFE69:
ARM GAS  /tmp/ccX4ZANx.s 			page 9


 201              		.section	.text.RS485_Read_Message,"ax",%progbits
 202              		.align	1
 203              		.global	RS485_Read_Message
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu softvfp
 209              	RS485_Read_Message:
 210              	.LFB71:
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** void main_task(void)
 259:Core/Src/main.c **** {
 260:Core/Src/main.c ****   	if (event_buffer.head!=event_buffer.tail){
 261:Core/Src/main.c ****       if(!f_busy){
 262:Core/Src/main.c **** 		  event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 263:Core/Src/main.c ****       }
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****     switch(state)
 267:Core/Src/main.c ****     {
 268:Core/Src/main.c ****       case STATE_WAITING_REQUEST:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****             if(event == EVENT_KEY_PRESSED){
 271:Core/Src/main.c ****                 digit++;
 272:Core/Src/main.c **** #ifdef SLAVE_1
 273:Core/Src/main.c ****                 
 274:Core/Src/main.c ****                 if (digit>9){
 275:Core/Src/main.c ****                   digit=0;
 276:Core/Src/main.c ****                 }
 277:Core/Src/main.c **** #endif
 278:Core/Src/main.c **** #ifdef SLAVE_2
 279:Core/Src/main.c ****                 
 280:Core/Src/main.c ****                 if (digit>15){
 281:Core/Src/main.c ****                   digit=10;
 282:Core/Src/main.c ****                 }
 283:Core/Src/main.c **** #endif
 284:Core/Src/main.c ****                
 285:Core/Src/main.c ****                 seven_segment_display(seven_segment_table[digit]);
 286:Core/Src/main.c ****                 event = EVENT_RESET;
 287:Core/Src/main.c ****                 ///state = STATE_SENDING_RESPOND;
 288:Core/Src/main.c ****               }
 289:Core/Src/main.c ****             else if(event == EVENT_RX_COMPLETE){
 290:Core/Src/main.c ****                 
 291:Core/Src/main.c ****                 f_busy=1;
 292:Core/Src/main.c ****                 state = STATE_READ_MESSAGE;
 293:Core/Src/main.c ****                 event = EVENT_RESET;
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****             }
 296:Core/Src/main.c ****       
 297:Core/Src/main.c ****             break;
 298:Core/Src/main.c ****       
 299:Core/Src/main.c ****       case STATE_SENDING_RESPOND:
 300:Core/Src/main.c ****           RS485_Send_Message();
 301:Core/Src/main.c ****           state= STATE_WAITING_REQUEST;
 302:Core/Src/main.c ****           f_busy=0;
 303:Core/Src/main.c ****           break;
 304:Core/Src/main.c **** 
ARM GAS  /tmp/ccX4ZANx.s 			page 10


 305:Core/Src/main.c ****       case STATE_READ_MESSAGE:
 306:Core/Src/main.c ****           read_res= RS485_Read_Message();
 307:Core/Src/main.c ****           if (read_res==MSG_READ_REQ){
 308:Core/Src/main.c ****               
 309:Core/Src/main.c ****               state=STATE_SENDING_RESPOND;
 310:Core/Src/main.c ****           }
 311:Core/Src/main.c ****           else if(read_res==MSG_WRITE_REQ){
 312:Core/Src/main.c ****                f_busy=0;
 313:Core/Src/main.c ****                digit = RX_msg[2]-'0';
 314:Core/Src/main.c ****                seven_segment_display(seven_segment_table[digit]);
 315:Core/Src/main.c ****                state= STATE_WAITING_REQUEST;
 316:Core/Src/main.c ****                
 317:Core/Src/main.c ****           }/*else if(read_res==MSG_ERROR){
 318:Core/Src/main.c ****                 f_busy=0;
 319:Core/Src/main.c ****                 digit=16;
 320:Core/Src/main.c ****                 seven_segment_display(seven_segment_table[digit]);
 321:Core/Src/main.c ****                 state= STATE_WAITING_REQUEST;;
 322:Core/Src/main.c ****               
 323:Core/Src/main.c ****           }
 324:Core/Src/main.c ****           */else{
 325:Core/Src/main.c ****             f_busy=0;
 326:Core/Src/main.c ****             state= STATE_WAITING_REQUEST;
 327:Core/Src/main.c ****           
 328:Core/Src/main.c ****           }
 329:Core/Src/main.c ****           
 330:Core/Src/main.c ****           break;    
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****     }
 333:Core/Src/main.c **** }
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** uint8_t RS485_Read_Message(void){
 211              		.loc 1 335 33 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   if (rx_buffer.tail==rx_buffer.head) return MSG_NO_PROCESS;
 215              		.loc 1 337 3 view .LVU46
 216              		.loc 1 337 16 is_stmt 0 view .LVU47
 217 0000 0F4B     		ldr	r3, .L25
 218 0002 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 219              		.loc 1 337 32 view .LVU48
 220 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 221              		.loc 1 337 6 view .LVU49
 222 0006 9A42     		cmp	r2, r3
 223 0008 15D0     		beq	.L19
 335:Core/Src/main.c **** 
 224              		.loc 1 335 33 view .LVU50
 225 000a 10B5     		push	{r4, lr}
 226              	.LCFI1:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 4, -8
 229              		.cfi_offset 14, -4
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   buffer_to_message(&rx_buffer, RX_msg);
 230              		.loc 1 339 3 is_stmt 1 view .LVU51
 231 000c 0D4C     		ldr	r4, .L25+4
ARM GAS  /tmp/ccX4ZANx.s 			page 11


 232 000e 2146     		mov	r1, r4
 233 0010 0B48     		ldr	r0, .L25
 234 0012 FFF7FEFF 		bl	buffer_to_message
 235              	.LVL6:
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   if (check_checksum(RX_msg)==CHECKSUM_ERROR) return MSG_ERROR;
 236              		.loc 1 341 3 view .LVU52
 237              		.loc 1 341 7 is_stmt 0 view .LVU53
 238 0016 2046     		mov	r0, r4
 239 0018 FFF7FEFF 		bl	check_checksum
 240              	.LVL7:
 241              		.loc 1 341 6 view .LVU54
 242 001c 50B1     		cbz	r0, .L18
 342:Core/Src/main.c ****   
 343:Core/Src/main.c ****   if (RX_msg[0]!= ID) return MSG_NO_PROCESS;
 243              		.loc 1 343 3 is_stmt 1 view .LVU55
 244              		.loc 1 343 13 is_stmt 0 view .LVU56
 245 001e 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 246              		.loc 1 343 16 view .LVU57
 247 0020 094B     		ldr	r3, .L25+8
 248 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 249              		.loc 1 343 6 view .LVU58
 250 0024 9A42     		cmp	r2, r3
 251 0026 08D1     		bne	.L20
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   if (RX_msg[1] == FUNC_WRITE)
 252              		.loc 1 345 3 is_stmt 1 view .LVU59
 253              		.loc 1 345 13 is_stmt 0 view .LVU60
 254 0028 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 255              		.loc 1 345 6 view .LVU61
 256 002a 0128     		cmp	r0, #1
 257 002c 02D0     		beq	.L18
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****        return MSG_WRITE_REQ;
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   }else if (RX_msg[1] == FUNC_READ){
 258              		.loc 1 349 9 is_stmt 1 view .LVU62
 259              		.loc 1 349 12 is_stmt 0 view .LVU63
 260 002e 0228     		cmp	r0, #2
 261 0030 00D0     		beq	.L18
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****       return MSG_READ_REQ;
 352:Core/Src/main.c ****   }
 353:Core/Src/main.c ****     
 354:Core/Src/main.c ****     return MSG_NO_PROCESS;
 262              		.loc 1 354 12 view .LVU64
 263 0032 0320     		movs	r0, #3
 264              	.L18:
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** }
 265              		.loc 1 356 1 view .LVU65
 266 0034 10BD     		pop	{r4, pc}
 267              	.L19:
 268              	.LCFI2:
 269              		.cfi_def_cfa_offset 0
 270              		.cfi_restore 4
 271              		.cfi_restore 14
ARM GAS  /tmp/ccX4ZANx.s 			page 12


 337:Core/Src/main.c **** 
 272              		.loc 1 337 46 view .LVU66
 273 0036 0320     		movs	r0, #3
 274              		.loc 1 356 1 view .LVU67
 275 0038 7047     		bx	lr
 276              	.L20:
 277              	.LCFI3:
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 4, -8
 280              		.cfi_offset 14, -4
 343:Core/Src/main.c **** 
 281              		.loc 1 343 30 view .LVU68
 282 003a 0320     		movs	r0, #3
 283 003c FAE7     		b	.L18
 284              	.L26:
 285 003e 00BF     		.align	2
 286              	.L25:
 287 0040 00000000 		.word	.LANCHOR5
 288 0044 00000000 		.word	.LANCHOR6
 289 0048 00000000 		.word	.LANCHOR7
 290              		.cfi_endproc
 291              	.LFE71:
 293              		.section	.text.RS485_Send_Message,"ax",%progbits
 294              		.align	1
 295              		.global	RS485_Send_Message
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu softvfp
 301              	RS485_Send_Message:
 302              	.LFB72:
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** void RS485_Send_Message(void)
 359:Core/Src/main.c **** {
 303              		.loc 1 359 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 70B5     		push	{r4, r5, r6, lr}
 308              	.LCFI4:
 309              		.cfi_def_cfa_offset 16
 310              		.cfi_offset 4, -16
 311              		.cfi_offset 5, -12
 312              		.cfi_offset 6, -8
 313              		.cfi_offset 14, -4
 360:Core/Src/main.c ****    TX_msg[0]= ID;
 314              		.loc 1 360 4 view .LVU70
 315              		.loc 1 360 13 is_stmt 0 view .LVU71
 316 0002 174C     		ldr	r4, .L29
 317 0004 174B     		ldr	r3, .L29+4
 318 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 319 0008 2370     		strb	r3, [r4]
 361:Core/Src/main.c ****    TX_msg[1]= RX_msg[1];
 320              		.loc 1 361 4 is_stmt 1 view .LVU72
 321              		.loc 1 361 21 is_stmt 0 view .LVU73
 322 000a 174B     		ldr	r3, .L29+8
 323 000c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccX4ZANx.s 			page 13


 324              		.loc 1 361 13 view .LVU74
 325 000e 6370     		strb	r3, [r4, #1]
 362:Core/Src/main.c ****    TX_msg[2]= digit+'0';
 326              		.loc 1 362 4 is_stmt 1 view .LVU75
 327              		.loc 1 362 20 is_stmt 0 view .LVU76
 328 0010 164B     		ldr	r3, .L29+12
 329 0012 1B68     		ldr	r3, [r3]
 330 0014 3033     		adds	r3, r3, #48
 331              		.loc 1 362 13 view .LVU77
 332 0016 A370     		strb	r3, [r4, #2]
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****    cal_checksum(TX_msg);
 333              		.loc 1 364 4 is_stmt 1 view .LVU78
 334 0018 2046     		mov	r0, r4
 335 001a FFF7FEFF 		bl	cal_checksum
 336              	.LVL8:
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****    HAL_GPIO_WritePin(TX_EN_GPIO_Port, TX_EN_Pin, 1); /// Enable Transmitter Mode
 337              		.loc 1 366 4 view .LVU79
 338 001e 144E     		ldr	r6, .L29+16
 339 0020 0122     		movs	r2, #1
 340 0022 4FF48071 		mov	r1, #256
 341 0026 3046     		mov	r0, r6
 342 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 343              	.LVL9:
 367:Core/Src/main.c ****   
 368:Core/Src/main.c ****    HAL_UART_Transmit(&huart1,&start_cmd,1,10);
 344              		.loc 1 368 4 view .LVU80
 345 002c 114D     		ldr	r5, .L29+20
 346 002e 0A23     		movs	r3, #10
 347 0030 0122     		movs	r2, #1
 348 0032 1149     		ldr	r1, .L29+24
 349 0034 2846     		mov	r0, r5
 350 0036 FFF7FEFF 		bl	HAL_UART_Transmit
 351              	.LVL10:
 369:Core/Src/main.c ****   
 370:Core/Src/main.c ****    HAL_UART_Transmit(&huart1,TX_msg,sizeof(TX_msg),10);
 352              		.loc 1 370 4 view .LVU81
 353 003a 0A23     		movs	r3, #10
 354 003c 0422     		movs	r2, #4
 355 003e 2146     		mov	r1, r4
 356 0040 2846     		mov	r0, r5
 357 0042 FFF7FEFF 		bl	HAL_UART_Transmit
 358              	.LVL11:
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****    HAL_UART_Transmit(&huart1,&stop_cmd,1,10);
 359              		.loc 1 372 4 view .LVU82
 360 0046 0A23     		movs	r3, #10
 361 0048 0122     		movs	r2, #1
 362 004a 0C49     		ldr	r1, .L29+28
 363 004c 2846     		mov	r0, r5
 364 004e FFF7FEFF 		bl	HAL_UART_Transmit
 365              	.LVL12:
 373:Core/Src/main.c ****   
 374:Core/Src/main.c ****    HAL_GPIO_WritePin(TX_EN_GPIO_Port, TX_EN_Pin, 0); /// Enable Receiver Mode
 366              		.loc 1 374 4 view .LVU83
 367 0052 0022     		movs	r2, #0
ARM GAS  /tmp/ccX4ZANx.s 			page 14


 368 0054 4FF48071 		mov	r1, #256
 369 0058 3046     		mov	r0, r6
 370 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 371              	.LVL13:
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** } 
 372              		.loc 1 377 1 is_stmt 0 view .LVU84
 373 005e 70BD     		pop	{r4, r5, r6, pc}
 374              	.L30:
 375              		.align	2
 376              	.L29:
 377 0060 00000000 		.word	.LANCHOR8
 378 0064 00000000 		.word	.LANCHOR7
 379 0068 00000000 		.word	.LANCHOR6
 380 006c 00000000 		.word	.LANCHOR9
 381 0070 00080140 		.word	1073809408
 382 0074 00000000 		.word	huart1
 383 0078 00000000 		.word	.LANCHOR10
 384 007c 00000000 		.word	.LANCHOR11
 385              		.cfi_endproc
 386              	.LFE72:
 388              		.section	.text.main_task,"ax",%progbits
 389              		.align	1
 390              		.global	main_task
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu softvfp
 396              	main_task:
 397              	.LFB70:
 259:Core/Src/main.c ****   	if (event_buffer.head!=event_buffer.tail){
 398              		.loc 1 259 1 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402 0000 10B5     		push	{r4, lr}
 403              	.LCFI5:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 4, -8
 406              		.cfi_offset 14, -4
 260:Core/Src/main.c ****       if(!f_busy){
 407              		.loc 1 260 4 view .LVU86
 260:Core/Src/main.c ****       if(!f_busy){
 408              		.loc 1 260 20 is_stmt 0 view .LVU87
 409 0002 314B     		ldr	r3, .L46
 410 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 260:Core/Src/main.c ****       if(!f_busy){
 411              		.loc 1 260 39 view .LVU88
 412 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 260:Core/Src/main.c ****       if(!f_busy){
 413              		.loc 1 260 7 view .LVU89
 414 0008 9A42     		cmp	r2, r3
 415 000a 02D0     		beq	.L32
 261:Core/Src/main.c **** 		  event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 416              		.loc 1 261 7 is_stmt 1 view .LVU90
 261:Core/Src/main.c **** 		  event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
ARM GAS  /tmp/ccX4ZANx.s 			page 15


 417              		.loc 1 261 10 is_stmt 0 view .LVU91
 418 000c 2F4B     		ldr	r3, .L46+4
 419 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 261:Core/Src/main.c **** 		  event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 420              		.loc 1 261 9 view .LVU92
 421 0010 3BB1     		cbz	r3, .L41
 422              	.L32:
 266:Core/Src/main.c ****     {
 423              		.loc 1 266 5 is_stmt 1 view .LVU93
 424 0012 2F4B     		ldr	r3, .L46+8
 425 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 426 0016 012B     		cmp	r3, #1
 427 0018 2CD0     		beq	.L33
 428 001a 022B     		cmp	r3, #2
 429 001c 32D0     		beq	.L34
 430 001e 33B1     		cbz	r3, .L42
 431              	.L31:
 333:Core/Src/main.c **** 
 432              		.loc 1 333 1 is_stmt 0 view .LVU94
 433 0020 10BD     		pop	{r4, pc}
 434              	.L41:
 262:Core/Src/main.c ****       }
 435              		.loc 1 262 5 is_stmt 1 view .LVU95
 262:Core/Src/main.c ****       }
 436              		.loc 1 262 13 is_stmt 0 view .LVU96
 437 0022 2948     		ldr	r0, .L46
 438 0024 FFF7FEFF 		bl	buffer_pop
 439              	.LVL14:
 262:Core/Src/main.c ****       }
 440              		.loc 1 262 11 view .LVU97
 441 0028 2A4B     		ldr	r3, .L46+12
 442 002a 1870     		strb	r0, [r3]
 443 002c F1E7     		b	.L32
 444              	.L42:
 270:Core/Src/main.c ****                 digit++;
 445              		.loc 1 270 13 is_stmt 1 view .LVU98
 270:Core/Src/main.c ****                 digit++;
 446              		.loc 1 270 22 is_stmt 0 view .LVU99
 447 002e 294B     		ldr	r3, .L46+12
 448 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270:Core/Src/main.c ****                 digit++;
 449              		.loc 1 270 15 view .LVU100
 450 0032 012B     		cmp	r3, #1
 451 0034 0BD0     		beq	.L43
 289:Core/Src/main.c ****                 
 452              		.loc 1 289 18 is_stmt 1 view .LVU101
 289:Core/Src/main.c ****                 
 453              		.loc 1 289 20 is_stmt 0 view .LVU102
 454 0036 032B     		cmp	r3, #3
 455 0038 F2D1     		bne	.L31
 291:Core/Src/main.c ****                 state = STATE_READ_MESSAGE;
 456              		.loc 1 291 17 is_stmt 1 view .LVU103
 291:Core/Src/main.c ****                 state = STATE_READ_MESSAGE;
 457              		.loc 1 291 23 is_stmt 0 view .LVU104
 458 003a 244B     		ldr	r3, .L46+4
 459 003c 0122     		movs	r2, #1
 460 003e 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccX4ZANx.s 			page 16


 292:Core/Src/main.c ****                 event = EVENT_RESET;
 461              		.loc 1 292 17 is_stmt 1 view .LVU105
 292:Core/Src/main.c ****                 event = EVENT_RESET;
 462              		.loc 1 292 23 is_stmt 0 view .LVU106
 463 0040 234B     		ldr	r3, .L46+8
 464 0042 0222     		movs	r2, #2
 465 0044 1A70     		strb	r2, [r3]
 293:Core/Src/main.c **** 
 466              		.loc 1 293 17 is_stmt 1 view .LVU107
 293:Core/Src/main.c **** 
 467              		.loc 1 293 23 is_stmt 0 view .LVU108
 468 0046 234B     		ldr	r3, .L46+12
 469 0048 0022     		movs	r2, #0
 470 004a 1A70     		strb	r2, [r3]
 471 004c E8E7     		b	.L31
 472              	.L43:
 271:Core/Src/main.c **** #ifdef SLAVE_1
 473              		.loc 1 271 17 is_stmt 1 view .LVU109
 271:Core/Src/main.c **** #ifdef SLAVE_1
 474              		.loc 1 271 22 is_stmt 0 view .LVU110
 475 004e 224A     		ldr	r2, .L46+16
 476 0050 1368     		ldr	r3, [r2]
 477 0052 0133     		adds	r3, r3, #1
 478 0054 1360     		str	r3, [r2]
 280:Core/Src/main.c ****                   digit=10;
 479              		.loc 1 280 17 is_stmt 1 view .LVU111
 280:Core/Src/main.c ****                   digit=10;
 480              		.loc 1 280 20 is_stmt 0 view .LVU112
 481 0056 0F2B     		cmp	r3, #15
 482 0058 02DD     		ble	.L37
 281:Core/Src/main.c ****                 }
 483              		.loc 1 281 19 is_stmt 1 view .LVU113
 281:Core/Src/main.c ****                 }
 484              		.loc 1 281 24 is_stmt 0 view .LVU114
 485 005a 1346     		mov	r3, r2
 486 005c 0A22     		movs	r2, #10
 487 005e 1A60     		str	r2, [r3]
 488              	.L37:
 285:Core/Src/main.c ****                 event = EVENT_RESET;
 489              		.loc 1 285 17 is_stmt 1 view .LVU115
 490 0060 1D4B     		ldr	r3, .L46+16
 491 0062 1B68     		ldr	r3, [r3]
 492 0064 1D4A     		ldr	r2, .L46+20
 493 0066 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 494 0068 FFF7FEFF 		bl	seven_segment_display
 495              	.LVL15:
 286:Core/Src/main.c ****                 ///state = STATE_SENDING_RESPOND;
 496              		.loc 1 286 17 view .LVU116
 286:Core/Src/main.c ****                 ///state = STATE_SENDING_RESPOND;
 497              		.loc 1 286 23 is_stmt 0 view .LVU117
 498 006c 194B     		ldr	r3, .L46+12
 499 006e 0022     		movs	r2, #0
 500 0070 1A70     		strb	r2, [r3]
 501 0072 D5E7     		b	.L31
 502              	.L33:
 300:Core/Src/main.c ****           state= STATE_WAITING_REQUEST;
 503              		.loc 1 300 11 is_stmt 1 view .LVU118
ARM GAS  /tmp/ccX4ZANx.s 			page 17


 504 0074 FFF7FEFF 		bl	RS485_Send_Message
 505              	.LVL16:
 301:Core/Src/main.c ****           f_busy=0;
 506              		.loc 1 301 11 view .LVU119
 301:Core/Src/main.c ****           f_busy=0;
 507              		.loc 1 301 16 is_stmt 0 view .LVU120
 508 0078 0023     		movs	r3, #0
 509 007a 154A     		ldr	r2, .L46+8
 510 007c 1370     		strb	r3, [r2]
 302:Core/Src/main.c ****           break;
 511              		.loc 1 302 11 is_stmt 1 view .LVU121
 302:Core/Src/main.c ****           break;
 512              		.loc 1 302 17 is_stmt 0 view .LVU122
 513 007e 134A     		ldr	r2, .L46+4
 514 0080 1370     		strb	r3, [r2]
 303:Core/Src/main.c **** 
 515              		.loc 1 303 11 is_stmt 1 view .LVU123
 516 0082 CDE7     		b	.L31
 517              	.L34:
 306:Core/Src/main.c ****           if (read_res==MSG_READ_REQ){
 518              		.loc 1 306 11 view .LVU124
 306:Core/Src/main.c ****           if (read_res==MSG_READ_REQ){
 519              		.loc 1 306 21 is_stmt 0 view .LVU125
 520 0084 FFF7FEFF 		bl	RS485_Read_Message
 521              	.LVL17:
 306:Core/Src/main.c ****           if (read_res==MSG_READ_REQ){
 522              		.loc 1 306 19 view .LVU126
 523 0088 154B     		ldr	r3, .L46+24
 524 008a 1870     		strb	r0, [r3]
 307:Core/Src/main.c ****               
 525              		.loc 1 307 11 is_stmt 1 view .LVU127
 307:Core/Src/main.c ****               
 526              		.loc 1 307 14 is_stmt 0 view .LVU128
 527 008c 0228     		cmp	r0, #2
 528 008e 07D0     		beq	.L44
 311:Core/Src/main.c ****                f_busy=0;
 529              		.loc 1 311 16 is_stmt 1 view .LVU129
 311:Core/Src/main.c ****                f_busy=0;
 530              		.loc 1 311 18 is_stmt 0 view .LVU130
 531 0090 0128     		cmp	r0, #1
 532 0092 09D0     		beq	.L45
 325:Core/Src/main.c ****             state= STATE_WAITING_REQUEST;
 533              		.loc 1 325 13 is_stmt 1 view .LVU131
 325:Core/Src/main.c ****             state= STATE_WAITING_REQUEST;
 534              		.loc 1 325 19 is_stmt 0 view .LVU132
 535 0094 0023     		movs	r3, #0
 536 0096 0D4A     		ldr	r2, .L46+4
 537 0098 1370     		strb	r3, [r2]
 326:Core/Src/main.c ****           
 538              		.loc 1 326 13 is_stmt 1 view .LVU133
 326:Core/Src/main.c ****           
 539              		.loc 1 326 18 is_stmt 0 view .LVU134
 540 009a 0D4A     		ldr	r2, .L46+8
 541 009c 1370     		strb	r3, [r2]
 333:Core/Src/main.c **** 
 542              		.loc 1 333 1 view .LVU135
 543 009e BFE7     		b	.L31
ARM GAS  /tmp/ccX4ZANx.s 			page 18


 544              	.L44:
 309:Core/Src/main.c ****           }
 545              		.loc 1 309 15 is_stmt 1 view .LVU136
 309:Core/Src/main.c ****           }
 546              		.loc 1 309 20 is_stmt 0 view .LVU137
 547 00a0 0B4B     		ldr	r3, .L46+8
 548 00a2 0122     		movs	r2, #1
 549 00a4 1A70     		strb	r2, [r3]
 550 00a6 BBE7     		b	.L31
 551              	.L45:
 312:Core/Src/main.c ****                digit = RX_msg[2]-'0';
 552              		.loc 1 312 16 is_stmt 1 view .LVU138
 312:Core/Src/main.c ****                digit = RX_msg[2]-'0';
 553              		.loc 1 312 22 is_stmt 0 view .LVU139
 554 00a8 0024     		movs	r4, #0
 555 00aa 084B     		ldr	r3, .L46+4
 556 00ac 1C70     		strb	r4, [r3]
 313:Core/Src/main.c ****                seven_segment_display(seven_segment_table[digit]);
 557              		.loc 1 313 16 is_stmt 1 view .LVU140
 313:Core/Src/main.c ****                seven_segment_display(seven_segment_table[digit]);
 558              		.loc 1 313 30 is_stmt 0 view .LVU141
 559 00ae 0D4B     		ldr	r3, .L46+28
 560 00b0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 313:Core/Src/main.c ****                seven_segment_display(seven_segment_table[digit]);
 561              		.loc 1 313 33 view .LVU142
 562 00b2 303B     		subs	r3, r3, #48
 313:Core/Src/main.c ****                seven_segment_display(seven_segment_table[digit]);
 563              		.loc 1 313 22 view .LVU143
 564 00b4 084A     		ldr	r2, .L46+16
 565 00b6 1360     		str	r3, [r2]
 314:Core/Src/main.c ****                state= STATE_WAITING_REQUEST;
 566              		.loc 1 314 16 is_stmt 1 view .LVU144
 567 00b8 084A     		ldr	r2, .L46+20
 568 00ba D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 569 00bc FFF7FEFF 		bl	seven_segment_display
 570              	.LVL18:
 315:Core/Src/main.c ****                
 571              		.loc 1 315 16 view .LVU145
 315:Core/Src/main.c ****                
 572              		.loc 1 315 21 is_stmt 0 view .LVU146
 573 00c0 034B     		ldr	r3, .L46+8
 574 00c2 1C70     		strb	r4, [r3]
 575 00c4 ACE7     		b	.L31
 576              	.L47:
 577 00c6 00BF     		.align	2
 578              	.L46:
 579 00c8 00000000 		.word	.LANCHOR4
 580 00cc 00000000 		.word	.LANCHOR12
 581 00d0 00000000 		.word	.LANCHOR14
 582 00d4 00000000 		.word	.LANCHOR13
 583 00d8 00000000 		.word	.LANCHOR9
 584 00dc 00000000 		.word	.LANCHOR15
 585 00e0 00000000 		.word	.LANCHOR16
 586 00e4 00000000 		.word	.LANCHOR6
 587              		.cfi_endproc
 588              	.LFE70:
 590              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
ARM GAS  /tmp/ccX4ZANx.s 			page 19


 591              		.align	1
 592              		.global	HAL_TIM_PeriodElapsedCallback
 593              		.syntax unified
 594              		.thumb
 595              		.thumb_func
 596              		.fpu softvfp
 598              	HAL_TIM_PeriodElapsedCallback:
 599              	.LVL19:
 600              	.LFB73:
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 380:Core/Src/main.c **** {
 601              		.loc 1 380 1 is_stmt 1 view -0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 381:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
 382:Core/Src/main.c ****   if (htim == &htim1)
 606              		.loc 1 382 3 view .LVU148
 607              		.loc 1 382 6 is_stmt 0 view .LVU149
 608 0000 034B     		ldr	r3, .L51
 609 0002 8342     		cmp	r3, r0
 610 0004 00D0     		beq	.L50
 611              	.L48:
 383:Core/Src/main.c ****   {
 384:Core/Src/main.c **** 	  f_timer_10ms=1;
 385:Core/Src/main.c ****   }
 386:Core/Src/main.c ****   
 387:Core/Src/main.c **** }
 612              		.loc 1 387 1 view .LVU150
 613 0006 7047     		bx	lr
 614              	.L50:
 384:Core/Src/main.c ****   }
 615              		.loc 1 384 4 is_stmt 1 view .LVU151
 384:Core/Src/main.c ****   }
 616              		.loc 1 384 16 is_stmt 0 view .LVU152
 617 0008 024B     		ldr	r3, .L51+4
 618 000a 0122     		movs	r2, #1
 619 000c 1A70     		strb	r2, [r3]
 620              		.loc 1 387 1 view .LVU153
 621 000e FAE7     		b	.L48
 622              	.L52:
 623              		.align	2
 624              	.L51:
 625 0010 00000000 		.word	htim1
 626 0014 00000000 		.word	.LANCHOR0
 627              		.cfi_endproc
 628              	.LFE73:
 630              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 631              		.align	1
 632              		.global	HAL_UART_RxCpltCallback
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 636              		.fpu softvfp
 638              	HAL_UART_RxCpltCallback:
ARM GAS  /tmp/ccX4ZANx.s 			page 20


 639              	.LVL20:
 640              	.LFB74:
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 392:Core/Src/main.c **** {
 641              		.loc 1 392 1 is_stmt 1 view -0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		.loc 1 392 1 is_stmt 0 view .LVU155
 646 0000 08B5     		push	{r3, lr}
 647              	.LCFI6:
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 393:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** 	if (huart == &huart1)
 651              		.loc 1 395 2 is_stmt 1 view .LVU156
 652              		.loc 1 395 5 is_stmt 0 view .LVU157
 653 0002 144B     		ldr	r3, .L61
 654 0004 8342     		cmp	r3, r0
 655 0006 00D0     		beq	.L59
 656              	.LVL21:
 657              	.L53:
 396:Core/Src/main.c **** 	{                      
 397:Core/Src/main.c ****     if(!transmission_f){
 398:Core/Src/main.c **** 			if (rx_temp==0x2){
 399:Core/Src/main.c **** 				transmission_f=1;
 400:Core/Src/main.c **** 			}
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** 		}else{
 403:Core/Src/main.c **** 			if (rx_temp==0x3)
 404:Core/Src/main.c **** 			{		//digit1= 2;
 405:Core/Src/main.c **** 				transmission_f=0;
 406:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 407:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 408:Core/Src/main.c **** 				return;
 409:Core/Src/main.c **** 			}
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****  			buffer_push(&rx_buffer,rx_temp);
 412:Core/Src/main.c **** 		}
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 416:Core/Src/main.c ****     
 417:Core/Src/main.c ****   }
 418:Core/Src/main.c **** }
 658              		.loc 1 418 1 view .LVU158
 659 0008 08BD     		pop	{r3, pc}
 660              	.LVL22:
 661              	.L59:
 397:Core/Src/main.c **** 			if (rx_temp==0x2){
 662              		.loc 1 397 5 is_stmt 1 view .LVU159
 397:Core/Src/main.c **** 			if (rx_temp==0x2){
ARM GAS  /tmp/ccX4ZANx.s 			page 21


 663              		.loc 1 397 8 is_stmt 0 view .LVU160
 664 000a 134B     		ldr	r3, .L61+4
 665 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 397:Core/Src/main.c **** 			if (rx_temp==0x2){
 666              		.loc 1 397 7 view .LVU161
 667 000e 3BB9     		cbnz	r3, .L55
 398:Core/Src/main.c **** 				transmission_f=1;
 668              		.loc 1 398 4 is_stmt 1 view .LVU162
 398:Core/Src/main.c **** 				transmission_f=1;
 669              		.loc 1 398 15 is_stmt 0 view .LVU163
 670 0010 124B     		ldr	r3, .L61+8
 671 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 398:Core/Src/main.c **** 				transmission_f=1;
 672              		.loc 1 398 7 view .LVU164
 673 0014 022B     		cmp	r3, #2
 674 0016 0AD1     		bne	.L56
 399:Core/Src/main.c **** 			}
 675              		.loc 1 399 5 is_stmt 1 view .LVU165
 399:Core/Src/main.c **** 			}
 676              		.loc 1 399 19 is_stmt 0 view .LVU166
 677 0018 0F4B     		ldr	r3, .L61+4
 678 001a 0122     		movs	r2, #1
 679 001c 1A70     		strb	r2, [r3]
 680 001e 06E0     		b	.L56
 681              	.L55:
 403:Core/Src/main.c **** 			{		//digit1= 2;
 682              		.loc 1 403 4 is_stmt 1 view .LVU167
 403:Core/Src/main.c **** 			{		//digit1= 2;
 683              		.loc 1 403 15 is_stmt 0 view .LVU168
 684 0020 0E4B     		ldr	r3, .L61+8
 685 0022 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 403:Core/Src/main.c **** 			{		//digit1= 2;
 686              		.loc 1 403 7 view .LVU169
 687 0024 0329     		cmp	r1, #3
 688 0026 08D0     		beq	.L60
 411:Core/Src/main.c **** 		}
 689              		.loc 1 411 5 is_stmt 1 view .LVU170
 690 0028 0D48     		ldr	r0, .L61+12
 691              	.LVL23:
 411:Core/Src/main.c **** 		}
 692              		.loc 1 411 5 is_stmt 0 view .LVU171
 693 002a FFF7FEFF 		bl	buffer_push
 694              	.LVL24:
 695              	.L56:
 415:Core/Src/main.c ****     
 696              		.loc 1 415 3 is_stmt 1 view .LVU172
 697 002e 0122     		movs	r2, #1
 698 0030 0A49     		ldr	r1, .L61+8
 699 0032 0848     		ldr	r0, .L61
 700 0034 FFF7FEFF 		bl	HAL_UART_Receive_IT
 701              	.LVL25:
 702 0038 E6E7     		b	.L53
 703              	.LVL26:
 704              	.L60:
 405:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 705              		.loc 1 405 5 view .LVU173
 405:Core/Src/main.c **** 				buffer_push(&event_buffer,EVENT_RX_COMPLETE);
ARM GAS  /tmp/ccX4ZANx.s 			page 22


 706              		.loc 1 405 19 is_stmt 0 view .LVU174
 707 003a 074B     		ldr	r3, .L61+4
 708 003c 0022     		movs	r2, #0
 709 003e 1A70     		strb	r2, [r3]
 406:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 710              		.loc 1 406 5 is_stmt 1 view .LVU175
 711 0040 0848     		ldr	r0, .L61+16
 712              	.LVL27:
 406:Core/Src/main.c **** 				HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 713              		.loc 1 406 5 is_stmt 0 view .LVU176
 714 0042 FFF7FEFF 		bl	buffer_push
 715              	.LVL28:
 407:Core/Src/main.c **** 				return;
 716              		.loc 1 407 5 is_stmt 1 view .LVU177
 717 0046 0122     		movs	r2, #1
 718 0048 0449     		ldr	r1, .L61+8
 719 004a 0248     		ldr	r0, .L61
 720 004c FFF7FEFF 		bl	HAL_UART_Receive_IT
 721              	.LVL29:
 408:Core/Src/main.c **** 			}
 722              		.loc 1 408 5 view .LVU178
 723 0050 DAE7     		b	.L53
 724              	.L62:
 725 0052 00BF     		.align	2
 726              	.L61:
 727 0054 00000000 		.word	huart1
 728 0058 00000000 		.word	.LANCHOR17
 729 005c 00000000 		.word	.LANCHOR18
 730 0060 00000000 		.word	.LANCHOR5
 731 0064 00000000 		.word	.LANCHOR4
 732              		.cfi_endproc
 733              	.LFE74:
 735              		.section	.text.Error_Handler,"ax",%progbits
 736              		.align	1
 737              		.global	Error_Handler
 738              		.syntax unified
 739              		.thumb
 740              		.thumb_func
 741              		.fpu softvfp
 743              	Error_Handler:
 744              	.LFB75:
 419:Core/Src/main.c **** /* USER CODE END 4 */
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** /**
 422:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 423:Core/Src/main.c ****   * @retval None
 424:Core/Src/main.c ****   */
 425:Core/Src/main.c **** void Error_Handler(void)
 426:Core/Src/main.c **** {
 745              		.loc 1 426 1 view -0
 746              		.cfi_startproc
 747              		@ Volatile: function does not return.
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 427:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 428:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  /tmp/ccX4ZANx.s 			page 23


 429:Core/Src/main.c ****   __disable_irq();
 751              		.loc 1 429 3 view .LVU180
 752              	.LBB4:
 753              	.LBI4:
 754              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  /tmp/ccX4ZANx.s 			page 24


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccX4ZANx.s 			page 25


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 755              		.loc 2 140 27 view .LVU181
 756              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 757              		.loc 2 142 3 view .LVU182
 758              		.syntax unified
 759              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 760 0000 72B6     		cpsid i
 761              	@ 0 "" 2
 762              		.thumb
 763              		.syntax unified
 764              	.L64:
 765              	.LBE5:
 766              	.LBE4:
 430:Core/Src/main.c ****   while (1)
 767              		.loc 1 430 3 discriminator 1 view .LVU183
 431:Core/Src/main.c ****   {
 432:Core/Src/main.c ****   }
 768              		.loc 1 432 3 discriminator 1 view .LVU184
 430:Core/Src/main.c ****   while (1)
 769              		.loc 1 430 9 discriminator 1 view .LVU185
 770 0002 FEE7     		b	.L64
 771              		.cfi_endproc
 772              	.LFE75:
 774              		.section	.text.SystemClock_Config,"ax",%progbits
 775              		.align	1
ARM GAS  /tmp/ccX4ZANx.s 			page 26


 776              		.global	SystemClock_Config
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 780              		.fpu softvfp
 782              	SystemClock_Config:
 783              	.LFB66:
 176:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 784              		.loc 1 176 1 view -0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 64
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788 0000 00B5     		push	{lr}
 789              	.LCFI7:
 790              		.cfi_def_cfa_offset 4
 791              		.cfi_offset 14, -4
 792 0002 91B0     		sub	sp, sp, #68
 793              	.LCFI8:
 794              		.cfi_def_cfa_offset 72
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 795              		.loc 1 177 3 view .LVU187
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 796              		.loc 1 177 22 is_stmt 0 view .LVU188
 797 0004 2822     		movs	r2, #40
 798 0006 0021     		movs	r1, #0
 799 0008 06A8     		add	r0, sp, #24
 800 000a FFF7FEFF 		bl	memset
 801              	.LVL30:
 178:Core/Src/main.c **** 
 802              		.loc 1 178 3 is_stmt 1 view .LVU189
 178:Core/Src/main.c **** 
 803              		.loc 1 178 22 is_stmt 0 view .LVU190
 804 000e 0023     		movs	r3, #0
 805 0010 0193     		str	r3, [sp, #4]
 806 0012 0293     		str	r3, [sp, #8]
 807 0014 0393     		str	r3, [sp, #12]
 808 0016 0493     		str	r3, [sp, #16]
 809 0018 0593     		str	r3, [sp, #20]
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 810              		.loc 1 183 3 is_stmt 1 view .LVU191
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 811              		.loc 1 183 36 is_stmt 0 view .LVU192
 812 001a 0122     		movs	r2, #1
 813 001c 0692     		str	r2, [sp, #24]
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 814              		.loc 1 184 3 is_stmt 1 view .LVU193
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 815              		.loc 1 184 30 is_stmt 0 view .LVU194
 816 001e 4FF48033 		mov	r3, #65536
 817 0022 0793     		str	r3, [sp, #28]
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 818              		.loc 1 185 3 is_stmt 1 view .LVU195
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 819              		.loc 1 186 3 view .LVU196
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 820              		.loc 1 186 30 is_stmt 0 view .LVU197
 821 0024 0A92     		str	r2, [sp, #40]
ARM GAS  /tmp/ccX4ZANx.s 			page 27


 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 822              		.loc 1 187 3 is_stmt 1 view .LVU198
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 823              		.loc 1 187 34 is_stmt 0 view .LVU199
 824 0026 0222     		movs	r2, #2
 825 0028 0D92     		str	r2, [sp, #52]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 826              		.loc 1 188 3 is_stmt 1 view .LVU200
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 827              		.loc 1 188 35 is_stmt 0 view .LVU201
 828 002a 0E93     		str	r3, [sp, #56]
 189:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 829              		.loc 1 189 3 is_stmt 1 view .LVU202
 190:Core/Src/main.c ****   {
 830              		.loc 1 190 3 view .LVU203
 190:Core/Src/main.c ****   {
 831              		.loc 1 190 7 is_stmt 0 view .LVU204
 832 002c 06A8     		add	r0, sp, #24
 833 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 834              	.LVL31:
 190:Core/Src/main.c ****   {
 835              		.loc 1 190 6 view .LVU205
 836 0032 88B9     		cbnz	r0, .L69
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 837              		.loc 1 197 3 is_stmt 1 view .LVU206
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 838              		.loc 1 197 31 is_stmt 0 view .LVU207
 839 0034 0F23     		movs	r3, #15
 840 0036 0193     		str	r3, [sp, #4]
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 841              		.loc 1 199 3 is_stmt 1 view .LVU208
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 842              		.loc 1 199 34 is_stmt 0 view .LVU209
 843 0038 0223     		movs	r3, #2
 844 003a 0293     		str	r3, [sp, #8]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 845              		.loc 1 200 3 is_stmt 1 view .LVU210
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 846              		.loc 1 200 35 is_stmt 0 view .LVU211
 847 003c 8023     		movs	r3, #128
 848 003e 0393     		str	r3, [sp, #12]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 849              		.loc 1 201 3 is_stmt 1 view .LVU212
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 850              		.loc 1 201 36 is_stmt 0 view .LVU213
 851 0040 4FF48063 		mov	r3, #1024
 852 0044 0493     		str	r3, [sp, #16]
 202:Core/Src/main.c **** 
 853              		.loc 1 202 3 is_stmt 1 view .LVU214
 202:Core/Src/main.c **** 
 854              		.loc 1 202 36 is_stmt 0 view .LVU215
 855 0046 0021     		movs	r1, #0
 856 0048 0591     		str	r1, [sp, #20]
 204:Core/Src/main.c ****   {
 857              		.loc 1 204 3 is_stmt 1 view .LVU216
 204:Core/Src/main.c ****   {
 858              		.loc 1 204 7 is_stmt 0 view .LVU217
ARM GAS  /tmp/ccX4ZANx.s 			page 28


 859 004a 01A8     		add	r0, sp, #4
 860 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 861              	.LVL32:
 204:Core/Src/main.c ****   {
 862              		.loc 1 204 6 view .LVU218
 863 0050 20B9     		cbnz	r0, .L70
 208:Core/Src/main.c **** 
 864              		.loc 1 208 1 view .LVU219
 865 0052 11B0     		add	sp, sp, #68
 866              	.LCFI9:
 867              		.cfi_remember_state
 868              		.cfi_def_cfa_offset 4
 869              		@ sp needed
 870 0054 5DF804FB 		ldr	pc, [sp], #4
 871              	.L69:
 872              	.LCFI10:
 873              		.cfi_restore_state
 192:Core/Src/main.c ****   }
 874              		.loc 1 192 5 is_stmt 1 view .LVU220
 875 0058 FFF7FEFF 		bl	Error_Handler
 876              	.LVL33:
 877              	.L70:
 206:Core/Src/main.c ****   }
 878              		.loc 1 206 5 view .LVU221
 879 005c FFF7FEFF 		bl	Error_Handler
 880              	.LVL34:
 881              		.cfi_endproc
 882              	.LFE66:
 884              		.section	.text.main,"ax",%progbits
 885              		.align	1
 886              		.global	main
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 890              		.fpu softvfp
 892              	main:
 893              	.LFB65:
 110:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 894              		.loc 1 110 1 view -0
 895              		.cfi_startproc
 896              		@ Volatile: function does not return.
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899 0000 08B5     		push	{r3, lr}
 900              	.LCFI11:
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 3, -8
 903              		.cfi_offset 14, -4
 118:Core/Src/main.c **** 
 904              		.loc 1 118 3 view .LVU223
 905 0002 FFF7FEFF 		bl	HAL_Init
 906              	.LVL35:
 125:Core/Src/main.c **** 
 907              		.loc 1 125 3 view .LVU224
 908 0006 FFF7FEFF 		bl	SystemClock_Config
 909              	.LVL36:
 132:Core/Src/main.c ****   MX_TIM1_Init();
ARM GAS  /tmp/ccX4ZANx.s 			page 29


 910              		.loc 1 132 3 view .LVU225
 911 000a FFF7FEFF 		bl	MX_GPIO_Init
 912              	.LVL37:
 133:Core/Src/main.c ****   MX_USART1_UART_Init();
 913              		.loc 1 133 3 view .LVU226
 914 000e FFF7FEFF 		bl	MX_TIM1_Init
 915              	.LVL38:
 134:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 916              		.loc 1 134 3 view .LVU227
 917 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 918              	.LVL39:
 137:Core/Src/main.c **** 
 919              		.loc 1 137 3 view .LVU228
 920 0016 0F48     		ldr	r0, .L74
 921 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 922              	.LVL40:
 139:Core/Src/main.c ****   /* USER CODE END 2 */
 923              		.loc 1 139 3 view .LVU229
 924 001c 0122     		movs	r2, #1
 925 001e 0E49     		ldr	r1, .L74+4
 926 0020 0E48     		ldr	r0, .L74+8
 927 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
 928              	.LVL41:
 150:Core/Src/main.c **** #endif
 929              		.loc 1 150 3 view .LVU230
 150:Core/Src/main.c **** #endif
 930              		.loc 1 150 5 is_stmt 0 view .LVU231
 931 0026 0E4B     		ldr	r3, .L74+12
 932 0028 2022     		movs	r2, #32
 933 002a 1A70     		strb	r2, [r3]
 152:Core/Src/main.c ****   event = EVENT_RESET;
 934              		.loc 1 152 3 is_stmt 1 view .LVU232
 152:Core/Src/main.c ****   event = EVENT_RESET;
 935              		.loc 1 152 9 is_stmt 0 view .LVU233
 936 002c 0023     		movs	r3, #0
 937 002e 0D4A     		ldr	r2, .L74+16
 938 0030 1370     		strb	r3, [r2]
 153:Core/Src/main.c ****   digit=16;
 939              		.loc 1 153 3 is_stmt 1 view .LVU234
 153:Core/Src/main.c ****   digit=16;
 940              		.loc 1 153 9 is_stmt 0 view .LVU235
 941 0032 0D4A     		ldr	r2, .L74+20
 942 0034 1370     		strb	r3, [r2]
 154:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 943              		.loc 1 154 3 is_stmt 1 view .LVU236
 154:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 944              		.loc 1 154 8 is_stmt 0 view .LVU237
 945 0036 0D4B     		ldr	r3, .L74+24
 946 0038 1022     		movs	r2, #16
 947 003a 1A60     		str	r2, [r3]
 155:Core/Src/main.c **** 
 948              		.loc 1 155 3 is_stmt 1 view .LVU238
 949 003c 0C4B     		ldr	r3, .L74+28
 950 003e 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 951 0040 FFF7FEFF 		bl	seven_segment_display
 952              	.LVL42:
 953              	.L72:
ARM GAS  /tmp/ccX4ZANx.s 			page 30


 157:Core/Src/main.c ****   {
 954              		.loc 1 157 3 discriminator 1 view .LVU239
 164:Core/Src/main.c ****       key_read_task();
 955              		.loc 1 164 7 discriminator 1 view .LVU240
 956 0044 FFF7FEFF 		bl	task_timer
 957              	.LVL43:
 165:Core/Src/main.c ****       main_task();
 958              		.loc 1 165 7 discriminator 1 view .LVU241
 959 0048 FFF7FEFF 		bl	key_read_task
 960              	.LVL44:
 166:Core/Src/main.c ****   }
 961              		.loc 1 166 7 discriminator 1 view .LVU242
 962 004c FFF7FEFF 		bl	main_task
 963              	.LVL45:
 157:Core/Src/main.c ****   {
 964              		.loc 1 157 9 discriminator 1 view .LVU243
 965 0050 F8E7     		b	.L72
 966              	.L75:
 967 0052 00BF     		.align	2
 968              	.L74:
 969 0054 00000000 		.word	htim1
 970 0058 00000000 		.word	.LANCHOR18
 971 005c 00000000 		.word	huart1
 972 0060 00000000 		.word	.LANCHOR7
 973 0064 00000000 		.word	.LANCHOR14
 974 0068 00000000 		.word	.LANCHOR13
 975 006c 00000000 		.word	.LANCHOR9
 976 0070 00000000 		.word	.LANCHOR15
 977              		.cfi_endproc
 978              	.LFE65:
 980              		.global	seven_segment_table
 981              		.global	digit
 982              		.global	event
 983              		.global	state
 984              		.global	RX_msg
 985              		.global	TX_msg
 986              		.global	ID
 987              		.global	event_buffer
 988              		.global	rx_buffer
 989              		.global	stop_cmd
 990              		.global	start_cmd
 991              		.global	transmission_f
 992              		.global	rx_temp
 993              		.global	read_res
 994              		.global	curr_event
 995              		.global	key_value
 996              		.global	d_timer_30ms
 997              		.global	f_timer_30ms
 998              		.global	f_timer_10ms
 999              		.global	f_busy
 1000              		.section	.bss.ID,"aw",%nobits
 1001              		.set	.LANCHOR7,. + 0
 1004              	ID:
 1005 0000 00       		.space	1
 1006              		.section	.bss.RX_msg,"aw",%nobits
 1007              		.align	2
 1008              		.set	.LANCHOR6,. + 0
ARM GAS  /tmp/ccX4ZANx.s 			page 31


 1011              	RX_msg:
 1012 0000 00000000 		.space	4
 1013              		.section	.bss.TX_msg,"aw",%nobits
 1014              		.align	2
 1015              		.set	.LANCHOR8,. + 0
 1018              	TX_msg:
 1019 0000 00000000 		.space	4
 1020              		.section	.bss.curr_event,"aw",%nobits
 1023              	curr_event:
 1024 0000 00       		.space	1
 1025              		.section	.bss.d_timer_30ms,"aw",%nobits
 1026              		.set	.LANCHOR1,. + 0
 1029              	d_timer_30ms:
 1030 0000 00       		.space	1
 1031              		.section	.bss.digit,"aw",%nobits
 1032              		.align	2
 1033              		.set	.LANCHOR9,. + 0
 1036              	digit:
 1037 0000 00000000 		.space	4
 1038              		.section	.bss.event,"aw",%nobits
 1039              		.set	.LANCHOR13,. + 0
 1042              	event:
 1043 0000 00       		.space	1
 1044              		.section	.bss.event_buffer,"aw",%nobits
 1045              		.align	2
 1046              		.set	.LANCHOR4,. + 0
 1049              	event_buffer:
 1050 0000 00000000 		.space	66
 1050      00000000 
 1050      00000000 
 1050      00000000 
 1050      00000000 
 1051              		.section	.bss.f_busy,"aw",%nobits
 1052              		.set	.LANCHOR12,. + 0
 1055              	f_busy:
 1056 0000 00       		.space	1
 1057              		.section	.bss.f_timer_10ms,"aw",%nobits
 1058              		.set	.LANCHOR0,. + 0
 1061              	f_timer_10ms:
 1062 0000 00       		.space	1
 1063              		.section	.bss.f_timer_30ms,"aw",%nobits
 1064              		.set	.LANCHOR2,. + 0
 1067              	f_timer_30ms:
 1068 0000 00       		.space	1
 1069              		.section	.bss.key_value,"aw",%nobits
 1070              		.set	.LANCHOR3,. + 0
 1073              	key_value:
 1074 0000 00       		.space	1
 1075              		.section	.bss.read_res,"aw",%nobits
 1076              		.set	.LANCHOR16,. + 0
 1079              	read_res:
 1080 0000 00       		.space	1
 1081              		.section	.bss.rx_buffer,"aw",%nobits
 1082              		.align	2
 1083              		.set	.LANCHOR5,. + 0
 1086              	rx_buffer:
 1087 0000 00000000 		.space	66
ARM GAS  /tmp/ccX4ZANx.s 			page 32


 1087      00000000 
 1087      00000000 
 1087      00000000 
 1087      00000000 
 1088              		.section	.bss.rx_temp,"aw",%nobits
 1089              		.set	.LANCHOR18,. + 0
 1092              	rx_temp:
 1093 0000 00       		.space	1
 1094              		.section	.bss.state,"aw",%nobits
 1095              		.set	.LANCHOR14,. + 0
 1098              	state:
 1099 0000 00       		.space	1
 1100              		.section	.bss.transmission_f,"aw",%nobits
 1101              		.set	.LANCHOR17,. + 0
 1104              	transmission_f:
 1105 0000 00       		.space	1
 1106              		.section	.data.seven_segment_table,"aw"
 1107              		.align	2
 1108              		.set	.LANCHOR15,. + 0
 1111              	seven_segment_table:
 1112 0000 3F065B4F 		.ascii	"?\006[Ofm}\007\177o_|X^{q@"
 1112      666D7D07 
 1112      7F6F5F7C 
 1112      585E7B71 
 1112      40
 1113              		.section	.data.start_cmd,"aw"
 1114              		.set	.LANCHOR10,. + 0
 1117              	start_cmd:
 1118 0000 02       		.byte	2
 1119              		.section	.data.stop_cmd,"aw"
 1120              		.set	.LANCHOR11,. + 0
 1123              	stop_cmd:
 1124 0000 03       		.byte	3
 1125              		.text
 1126              	.Letext0:
 1127              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1128              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1129              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1130              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1131              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1132              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1133              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1134              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1135              		.file 11 "Core/Inc/tim.h"
 1136              		.file 12 "Core/Inc/usart.h"
 1137              		.file 13 "Core/Inc/buffer.h"
 1138              		.file 14 "Core/Inc/message.h"
 1139              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1140              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1141              		.file 17 "Core/Inc/gpio.h"
 1142              		.file 18 "<built-in>"
ARM GAS  /tmp/ccX4ZANx.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccX4ZANx.s:16     .text.task_timer:0000000000000000 $t
     /tmp/ccX4ZANx.s:24     .text.task_timer:0000000000000000 task_timer
     /tmp/ccX4ZANx.s:72     .text.task_timer:000000000000002c $d
     /tmp/ccX4ZANx.s:79     .text.seven_segment_display:0000000000000000 $t
     /tmp/ccX4ZANx.s:86     .text.seven_segment_display:0000000000000000 seven_segment_display
     /tmp/ccX4ZANx.s:108    .text.seven_segment_display:000000000000000c $d
     /tmp/ccX4ZANx.s:113    .text.key_read_task:0000000000000000 $t
     /tmp/ccX4ZANx.s:120    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccX4ZANx.s:194    .text.key_read_task:0000000000000048 $d
     /tmp/ccX4ZANx.s:202    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccX4ZANx.s:209    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccX4ZANx.s:287    .text.RS485_Read_Message:0000000000000040 $d
     /tmp/ccX4ZANx.s:294    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccX4ZANx.s:301    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccX4ZANx.s:377    .text.RS485_Send_Message:0000000000000060 $d
     /tmp/ccX4ZANx.s:389    .text.main_task:0000000000000000 $t
     /tmp/ccX4ZANx.s:396    .text.main_task:0000000000000000 main_task
     /tmp/ccX4ZANx.s:579    .text.main_task:00000000000000c8 $d
     /tmp/ccX4ZANx.s:591    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccX4ZANx.s:598    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccX4ZANx.s:625    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccX4ZANx.s:631    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccX4ZANx.s:638    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccX4ZANx.s:727    .text.HAL_UART_RxCpltCallback:0000000000000054 $d
     /tmp/ccX4ZANx.s:736    .text.Error_Handler:0000000000000000 $t
     /tmp/ccX4ZANx.s:743    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccX4ZANx.s:775    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccX4ZANx.s:782    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccX4ZANx.s:885    .text.main:0000000000000000 $t
     /tmp/ccX4ZANx.s:892    .text.main:0000000000000000 main
     /tmp/ccX4ZANx.s:969    .text.main:0000000000000054 $d
     /tmp/ccX4ZANx.s:1111   .data.seven_segment_table:0000000000000000 seven_segment_table
     /tmp/ccX4ZANx.s:1036   .bss.digit:0000000000000000 digit
     /tmp/ccX4ZANx.s:1042   .bss.event:0000000000000000 event
     /tmp/ccX4ZANx.s:1098   .bss.state:0000000000000000 state
     /tmp/ccX4ZANx.s:1011   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccX4ZANx.s:1018   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccX4ZANx.s:1004   .bss.ID:0000000000000000 ID
     /tmp/ccX4ZANx.s:1049   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccX4ZANx.s:1086   .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/ccX4ZANx.s:1123   .data.stop_cmd:0000000000000000 stop_cmd
     /tmp/ccX4ZANx.s:1117   .data.start_cmd:0000000000000000 start_cmd
     /tmp/ccX4ZANx.s:1104   .bss.transmission_f:0000000000000000 transmission_f
     /tmp/ccX4ZANx.s:1092   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccX4ZANx.s:1079   .bss.read_res:0000000000000000 read_res
     /tmp/ccX4ZANx.s:1023   .bss.curr_event:0000000000000000 curr_event
     /tmp/ccX4ZANx.s:1073   .bss.key_value:0000000000000000 key_value
     /tmp/ccX4ZANx.s:1029   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccX4ZANx.s:1067   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccX4ZANx.s:1061   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccX4ZANx.s:1055   .bss.f_busy:0000000000000000 f_busy
     /tmp/ccX4ZANx.s:1005   .bss.ID:0000000000000000 $d
     /tmp/ccX4ZANx.s:1007   .bss.RX_msg:0000000000000000 $d
     /tmp/ccX4ZANx.s:1014   .bss.TX_msg:0000000000000000 $d
     /tmp/ccX4ZANx.s:1024   .bss.curr_event:0000000000000000 $d
ARM GAS  /tmp/ccX4ZANx.s 			page 34


     /tmp/ccX4ZANx.s:1030   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccX4ZANx.s:1032   .bss.digit:0000000000000000 $d
     /tmp/ccX4ZANx.s:1043   .bss.event:0000000000000000 $d
     /tmp/ccX4ZANx.s:1045   .bss.event_buffer:0000000000000000 $d
     /tmp/ccX4ZANx.s:1056   .bss.f_busy:0000000000000000 $d
     /tmp/ccX4ZANx.s:1062   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccX4ZANx.s:1068   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccX4ZANx.s:1074   .bss.key_value:0000000000000000 $d
     /tmp/ccX4ZANx.s:1080   .bss.read_res:0000000000000000 $d
     /tmp/ccX4ZANx.s:1082   .bss.rx_buffer:0000000000000000 $d
     /tmp/ccX4ZANx.s:1093   .bss.rx_temp:0000000000000000 $d
     /tmp/ccX4ZANx.s:1099   .bss.state:0000000000000000 $d
     /tmp/ccX4ZANx.s:1105   .bss.transmission_f:0000000000000000 $d
     /tmp/ccX4ZANx.s:1107   .data.seven_segment_table:0000000000000000 $d

UNDEFINED SYMBOLS
buffer_push
buffer_to_message
check_checksum
cal_checksum
HAL_GPIO_WritePin
HAL_UART_Transmit
huart1
buffer_pop
htim1
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_USART1_UART_Init
HAL_TIM_Base_Start_IT
