ARM GAS  /tmp/cciPyXYD.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.task_timer,"ax",%progbits
  18              		.align	1
  19              		.global	task_timer
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	task_timer:
  25              	.LFB67:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "buffer.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/cciPyXYD.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** uint16_t* unique_id;
  48:Core/Src/main.c **** uint8_t f_busy;
  49:Core/Src/main.c **** uint8_t f_start_counting;
  50:Core/Src/main.c **** uint8_t f_read_msg;
  51:Core/Src/main.c **** uint8_t f_timer_10ms=0;
  52:Core/Src/main.c **** uint8_t f_timer_30ms=0;
  53:Core/Src/main.c **** uint8_t d_timer_30ms;
  54:Core/Src/main.c **** uint8_t f_timer_digit_update=0;
  55:Core/Src/main.c **** uint8_t d_timer_digit_update;
  56:Core/Src/main.c **** uint8_t key_value;
  57:Core/Src/main.c **** uint8_t curr_event;
  58:Core/Src/main.c **** //uint8_t bufferEvent[64];
  59:Core/Src/main.c **** uint8_t read_res;
  60:Core/Src/main.c **** uint8_t rx_temp;
  61:Core/Src/main.c **** uint8_t transmission_f;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** buffer_tx_msg tx_buffer;
  64:Core/Src/main.c **** circular_buffer rx_buffer;
  65:Core/Src/main.c **** circular_buffer event_buffer;
  66:Core/Src/main.c **** uint8_t ID;
  67:Core/Src/main.c **** uint8_t TX_msg[6];
  68:Core/Src/main.c **** uint8_t RX_msg[4];
  69:Core/Src/main.c **** uint8_t *pRX_msg;
  70:Core/Src/main.c **** uint8_t *pTX_msg;
  71:Core/Src/main.c **** uint8_t state,event;
  72:Core/Src/main.c **** uint8_t min_digit, max_digit;
  73:Core/Src/main.c **** int digit;
  74:Core/Src/main.c **** uint8_t seven_segment_table[17] = {	0b0111111,	// '0'
  75:Core/Src/main.c **** 		                            	 0b0000110,	// '1'
  76:Core/Src/main.c **** 		   	                           0b1011011,	// '2'
  77:Core/Src/main.c **** 			                             0b1001111,	// '3'
  78:Core/Src/main.c **** 			                             0b1100110,	// '4'
  79:Core/Src/main.c ****                                    0b1101101,	// '5'
  80:Core/Src/main.c ****                                    0b1111101,	// '6'
  81:Core/Src/main.c ****                                    0b0000111,	// '7'
  82:Core/Src/main.c **** 			                             0b1111111,	// '8'
  83:Core/Src/main.c ****                                    0b1101111,	// '9'
  84:Core/Src/main.c ****                                    0b1011111,	// 'a'  --10
  85:Core/Src/main.c ****                                    0b1111100,	// 'b'  --11
  86:Core/Src/main.c **** 			                             0b1011000,	// 'c'  --14
  87:Core/Src/main.c ****                                    0b1011110,	// 'd'  --13
  88:Core/Src/main.c ****                                    0b1111011,	// 'e'	--14
  89:Core/Src/main.c ****                                    0b1110001,	// 'f'  --15
ARM GAS  /tmp/cciPyXYD.s 			page 3


  90:Core/Src/main.c ****                                    0b1000000 	// '-'  --16
  91:Core/Src/main.c **** };
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* USER CODE END PV */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  98:Core/Src/main.c **** void SystemClock_Config(void);
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 101:Core/Src/main.c **** void RS485_TX_Task(void);
 102:Core/Src/main.c **** void RS485_RX_Task(void);
 103:Core/Src/main.c **** void task_timer(void);
 104:Core/Src/main.c **** void seven_segment_display(char input);
 105:Core/Src/main.c **** void key_read_task(void);
 106:Core/Src/main.c **** void main_task(void);
 107:Core/Src/main.c **** void RS485_Send_Message(void);
 108:Core/Src/main.c **** void RS485_Read_Message(void);
 109:Core/Src/main.c **** /* USER CODE END PFP */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 112:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /* USER CODE END 0 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /**
 117:Core/Src/main.c ****   * @brief  The application entry point.
 118:Core/Src/main.c ****   * @retval int
 119:Core/Src/main.c ****   */
 120:Core/Src/main.c **** int main(void)
 121:Core/Src/main.c **** {
 122:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE END 1 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 129:Core/Src/main.c ****   HAL_Init();
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE END Init */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Configure the system clock */
 136:Core/Src/main.c ****   SystemClock_Config();
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE END SysInit */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Initialize all configured peripherals */
 143:Core/Src/main.c ****   MX_GPIO_Init();
 144:Core/Src/main.c ****   MX_TIM1_Init();
 145:Core/Src/main.c ****   MX_USART1_UART_Init();
 146:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/cciPyXYD.s 			page 4


 147:Core/Src/main.c ****   
 148:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);  
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****  
 151:Core/Src/main.c ****   /* USER CODE END 2 */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* Infinite loop */
 154:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 155:Core/Src/main.c ****   /*
 156:Core/Src/main.c ****   #ifdef SLAVE_1 
 157:Core/Src/main.c ****   ID=0x10;
 158:Core/Src/main.c ****   #endif
 159:Core/Src/main.c ****   #ifdef SLAVE_2
 160:Core/Src/main.c ****   ID=0x12;
 161:Core/Src/main.c ****   #endif
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   ID = 0xFF;
 165:Core/Src/main.c ****   unique_id =(uint16_t *)(0x1FFFF7E8);
 166:Core/Src/main.c ****   uint32_t rand= COMPUTE_BUILD_SEC*100; 
 167:Core/Src/main.c ****   
 168:Core/Src/main.c ****   state = STATE_WAITING_MASTER;
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   
 171:Core/Src/main.c ****   HAL_Delay(rand);
 172:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 173:Core/Src/main.c ****   
 174:Core/Src/main.c ****   digit=16;
 175:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 176:Core/Src/main.c ****   while (1)
 177:Core/Src/main.c ****   {
 178:Core/Src/main.c ****     /* USER CODE END WHILE */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 181:Core/Src/main.c ****      
 182:Core/Src/main.c ****      //seven_segment_display(seven_segment_table[0]);
 183:Core/Src/main.c ****       task_timer();
 184:Core/Src/main.c ****       key_read_task();
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****       RS485_RX_Task();
 187:Core/Src/main.c ****       
 188:Core/Src/main.c ****       main_task();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c ****   /* USER CODE END 3 */
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** /**
 194:Core/Src/main.c ****   * @brief System Clock Configuration
 195:Core/Src/main.c ****   * @retval None
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c **** void SystemClock_Config(void)
 198:Core/Src/main.c **** {
 199:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 200:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 203:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
ARM GAS  /tmp/cciPyXYD.s 			page 5


 204:Core/Src/main.c ****   */
 205:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 206:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 207:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 208:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 211:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 212:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****     Error_Handler();
 215:Core/Src/main.c ****   }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 218:Core/Src/main.c ****   */
 219:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 220:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 221:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 222:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 223:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 224:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 227:Core/Src/main.c ****   {
 228:Core/Src/main.c ****     Error_Handler();
 229:Core/Src/main.c ****   }
 230:Core/Src/main.c **** }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** void task_timer(void)
 235:Core/Src/main.c **** {
  27              		.loc 1 235 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 236:Core/Src/main.c ****   if (!f_timer_10ms) return;
  32              		.loc 1 236 3 view .LVU1
  33              		.loc 1 236 7 is_stmt 0 view .LVU2
  34 0000 104B     		ldr	r3, .L5
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36              		.loc 1 236 6 view .LVU3
  37 0004 B3B1     		cbz	r3, .L1
 237:Core/Src/main.c ****   f_timer_10ms=0;
  38              		.loc 1 237 3 is_stmt 1 view .LVU4
  39              		.loc 1 237 15 is_stmt 0 view .LVU5
  40 0006 0F4B     		ldr	r3, .L5
  41 0008 0022     		movs	r2, #0
  42 000a 1A70     		strb	r2, [r3]
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   d_timer_30ms++;
  43              		.loc 1 239 3 is_stmt 1 view .LVU6
  44              		.loc 1 239 15 is_stmt 0 view .LVU7
  45 000c 0E4A     		ldr	r2, .L5+4
  46 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  47 0010 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cciPyXYD.s 			page 6


  48 0012 DBB2     		uxtb	r3, r3
  49 0014 1370     		strb	r3, [r2]
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   if(d_timer_30ms==3){
  50              		.loc 1 241 3 is_stmt 1 view .LVU8
  51              		.loc 1 241 5 is_stmt 0 view .LVU9
  52 0016 032B     		cmp	r3, #3
  53 0018 0DD0     		beq	.L4
  54              	.L3:
 242:Core/Src/main.c ****     d_timer_30ms =0;
 243:Core/Src/main.c ****     f_timer_30ms=1;
 244:Core/Src/main.c ****     
 245:Core/Src/main.c ****     
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   d_timer_digit_update++;
  55              		.loc 1 248 3 is_stmt 1 view .LVU10
  56              		.loc 1 248 23 is_stmt 0 view .LVU11
  57 001a 0C4A     		ldr	r2, .L5+8
  58 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  59 001e 0133     		adds	r3, r3, #1
  60 0020 DBB2     		uxtb	r3, r3
  61 0022 1370     		strb	r3, [r2]
 249:Core/Src/main.c ****   if(d_timer_digit_update>75){
  62              		.loc 1 249 3 is_stmt 1 view .LVU12
  63              		.loc 1 249 5 is_stmt 0 view .LVU13
  64 0024 4B2B     		cmp	r3, #75
  65 0026 05D9     		bls	.L1
 250:Core/Src/main.c ****     d_timer_digit_update=0;
  66              		.loc 1 250 5 is_stmt 1 view .LVU14
  67              		.loc 1 250 25 is_stmt 0 view .LVU15
  68 0028 1346     		mov	r3, r2
  69 002a 0022     		movs	r2, #0
  70 002c 1A70     		strb	r2, [r3]
 251:Core/Src/main.c ****     f_timer_digit_update=1;
  71              		.loc 1 251 5 is_stmt 1 view .LVU16
  72              		.loc 1 251 25 is_stmt 0 view .LVU17
  73 002e 084B     		ldr	r3, .L5+12
  74 0030 0122     		movs	r2, #1
  75 0032 1A70     		strb	r2, [r3]
  76              	.L1:
 252:Core/Src/main.c ****     
 253:Core/Src/main.c ****     
 254:Core/Src/main.c ****   }
 255:Core/Src/main.c ****   
 256:Core/Src/main.c ****   
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** }
  77              		.loc 1 258 1 view .LVU18
  78 0034 7047     		bx	lr
  79              	.L4:
 242:Core/Src/main.c ****     f_timer_30ms=1;
  80              		.loc 1 242 5 is_stmt 1 view .LVU19
 242:Core/Src/main.c ****     f_timer_30ms=1;
  81              		.loc 1 242 18 is_stmt 0 view .LVU20
  82 0036 1346     		mov	r3, r2
  83 0038 0022     		movs	r2, #0
ARM GAS  /tmp/cciPyXYD.s 			page 7


  84 003a 1A70     		strb	r2, [r3]
 243:Core/Src/main.c ****     
  85              		.loc 1 243 5 is_stmt 1 view .LVU21
 243:Core/Src/main.c ****     
  86              		.loc 1 243 17 is_stmt 0 view .LVU22
  87 003c 054B     		ldr	r3, .L5+16
  88 003e 0122     		movs	r2, #1
  89 0040 1A70     		strb	r2, [r3]
  90 0042 EAE7     		b	.L3
  91              	.L6:
  92              		.align	2
  93              	.L5:
  94 0044 00000000 		.word	.LANCHOR0
  95 0048 00000000 		.word	.LANCHOR1
  96 004c 00000000 		.word	.LANCHOR3
  97 0050 00000000 		.word	.LANCHOR4
  98 0054 00000000 		.word	.LANCHOR2
  99              		.cfi_endproc
 100              	.LFE67:
 102              		.section	.text.seven_segment_display,"ax",%progbits
 103              		.align	1
 104              		.global	seven_segment_display
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	seven_segment_display:
 110              	.LVL0:
 111              	.LFB68:
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** void seven_segment_display(char input)
 261:Core/Src/main.c **** {
 112              		.loc 1 261 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 262:Core/Src/main.c ****    uint32_t mask =  a_Pin|b_Pin|c_Pin|d_Pin|e_Pin|f_Pin|g_Pin;
 117              		.loc 1 262 4 view .LVU24
 263:Core/Src/main.c ****    uint32_t val = (uint32_t)input & mask;
 118              		.loc 1 263 4 view .LVU25
 119              		.loc 1 263 13 is_stmt 0 view .LVU26
 120 0000 00F07F00 		and	r0, r0, #127
 121              	.LVL1:
 264:Core/Src/main.c ****    SEGMENT_PORT->ODR = val;
 122              		.loc 1 264 4 is_stmt 1 view .LVU27
 123              		.loc 1 264 22 is_stmt 0 view .LVU28
 124 0004 014B     		ldr	r3, .L8
 125 0006 D860     		str	r0, [r3, #12]
 265:Core/Src/main.c **** }
 126              		.loc 1 265 1 view .LVU29
 127 0008 7047     		bx	lr
 128              	.L9:
 129 000a 00BF     		.align	2
 130              	.L8:
 131 000c 00080140 		.word	1073809408
 132              		.cfi_endproc
 133              	.LFE68:
ARM GAS  /tmp/cciPyXYD.s 			page 8


 135              		.section	.text.key_read_task,"ax",%progbits
 136              		.align	1
 137              		.global	key_read_task
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	key_read_task:
 143              	.LFB69:
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** void key_read_task(void)
 268:Core/Src/main.c **** {
 144              		.loc 1 268 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148 0000 08B5     		push	{r3, lr}
 149              	.LCFI0:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 3, -8
 152              		.cfi_offset 14, -4
 269:Core/Src/main.c ****   if(!f_timer_30ms) return;
 153              		.loc 1 269 3 view .LVU31
 154              		.loc 1 269 6 is_stmt 0 view .LVU32
 155 0002 114B     		ldr	r3, .L16
 156 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 157              		.loc 1 269 5 view .LVU33
 158 0006 A3B1     		cbz	r3, .L10
 270:Core/Src/main.c ****   f_timer_30ms =0; 
 159              		.loc 1 270 3 is_stmt 1 view .LVU34
 160              		.loc 1 270 16 is_stmt 0 view .LVU35
 161 0008 0F4B     		ldr	r3, .L16
 162 000a 0022     		movs	r2, #0
 163 000c 1A70     		strb	r2, [r3]
 271:Core/Src/main.c ****    
 272:Core/Src/main.c ****  
 273:Core/Src/main.c ****   unsigned char key_pindata = (uint8_t)(key_GPIO_Port->IDR & key_Pin);
 164              		.loc 1 273 3 is_stmt 1 view .LVU36
 165              		.loc 1 273 54 is_stmt 0 view .LVU37
 166 000e 0F4B     		ldr	r3, .L16+4
 167 0010 9968     		ldr	r1, [r3, #8]
 168              		.loc 1 273 17 view .LVU38
 169 0012 01F00101 		and	r1, r1, #1
 170              	.LVL2:
 274:Core/Src/main.c ****  
 275:Core/Src/main.c ****   key_value = key_value<<1;
 171              		.loc 1 275 3 is_stmt 1 view .LVU39
 172              		.loc 1 275 24 is_stmt 0 view .LVU40
 173 0016 0E4A     		ldr	r2, .L16+8
 174 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 175 001a 5B00     		lsls	r3, r3, #1
 176 001c DBB2     		uxtb	r3, r3
 177              		.loc 1 275 13 view .LVU41
 178 001e 1370     		strb	r3, [r2]
 276:Core/Src/main.c ****   key_value &= 0b00001110;
 179              		.loc 1 276 3 is_stmt 1 view .LVU42
 180              		.loc 1 276 13 is_stmt 0 view .LVU43
 181 0020 03F00E03 		and	r3, r3, #14
ARM GAS  /tmp/cciPyXYD.s 			page 9


 182 0024 1370     		strb	r3, [r2]
 277:Core/Src/main.c ****   key_value |= key_pindata&0X1;
 183              		.loc 1 277 3 is_stmt 1 view .LVU44
 184 0026 0B43     		orrs	r3, r3, r1
 185              		.loc 1 277 13 is_stmt 0 view .LVU45
 186 0028 1370     		strb	r3, [r2]
 278:Core/Src/main.c ****  
 279:Core/Src/main.c ****   if (key_value==KEY_PRESSED){
 187              		.loc 1 279 3 is_stmt 1 view .LVU46
 188              		.loc 1 279 6 is_stmt 0 view .LVU47
 189 002a 0C2B     		cmp	r3, #12
 190 002c 02D0     		beq	.L14
 280:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 281:Core/Src/main.c ****       
 282:Core/Src/main.c ****   }else if(key_value==KEY_RELEASED){
 191              		.loc 1 282 9 is_stmt 1 view .LVU48
 192              		.loc 1 282 11 is_stmt 0 view .LVU49
 193 002e 032B     		cmp	r3, #3
 194 0030 05D0     		beq	.L15
 195              	.LVL3:
 196              	.L10:
 283:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_KEY_RELEASED);
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** }
 197              		.loc 1 286 1 view .LVU50
 198 0032 08BD     		pop	{r3, pc}
 199              	.LVL4:
 200              	.L14:
 280:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 201              		.loc 1 280 7 is_stmt 1 view .LVU51
 202 0034 0121     		movs	r1, #1
 203              	.LVL5:
 280:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 204              		.loc 1 280 7 is_stmt 0 view .LVU52
 205 0036 0748     		ldr	r0, .L16+12
 206 0038 FFF7FEFF 		bl	buffer_push
 207              	.LVL6:
 208 003c F9E7     		b	.L10
 209              	.LVL7:
 210              	.L15:
 283:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_KEY_RELEASED);
 211              		.loc 1 283 5 is_stmt 1 view .LVU53
 212 003e 0221     		movs	r1, #2
 213              	.LVL8:
 283:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_KEY_RELEASED);
 214              		.loc 1 283 5 is_stmt 0 view .LVU54
 215 0040 0448     		ldr	r0, .L16+12
 216 0042 FFF7FEFF 		bl	buffer_push
 217              	.LVL9:
 218 0046 F4E7     		b	.L10
 219              	.L17:
 220              		.align	2
 221              	.L16:
 222 0048 00000000 		.word	.LANCHOR2
 223 004c 000C0140 		.word	1073810432
 224 0050 00000000 		.word	.LANCHOR5
ARM GAS  /tmp/cciPyXYD.s 			page 10


 225 0054 00000000 		.word	.LANCHOR6
 226              		.cfi_endproc
 227              	.LFE69:
 229              		.section	.text.RS485_RX_Task,"ax",%progbits
 230              		.align	1
 231              		.global	RS485_RX_Task
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	RS485_RX_Task:
 237              	.LFB71:
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** void main_task(void)
 289:Core/Src/main.c **** {
 290:Core/Src/main.c ****   	if (event_buffer.head!=event_buffer.tail){
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** 		  event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   }
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   switch (state)
 299:Core/Src/main.c ****   {
 300:Core/Src/main.c ****   case STATE_WAITING_MASTER:
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****     if (event == EVENT_RX_COMPLETE){
 303:Core/Src/main.c ****      // seven_segment_display(seven_segment_table[10]);
 304:Core/Src/main.c ****       RS485_Read_Message();
 305:Core/Src/main.c ****       event=EVENT_RESET;
 306:Core/Src/main.c ****     }
 307:Core/Src/main.c ****     else if(event == EVENT_MASTER_FOUND){
 308:Core/Src/main.c ****        // seven_segment_display(seven_segment_table[11]);
 309:Core/Src/main.c ****         pTX_msg = &TX_msg[1];
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****         *pTX_msg++ = ID;
 312:Core/Src/main.c ****         ID = (uint8_t)(*unique_id&0xFF);
 313:Core/Src/main.c ****         *pTX_msg++ = FUNC_FIND_SLAVE;
 314:Core/Src/main.c ****         *pTX_msg++ = ID;
 315:Core/Src/main.c ****         RS485_Send_Message();
 316:Core/Src/main.c ****         event = EVENT_RESET;
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****         state = STATE_OPERATION;
 319:Core/Src/main.c ****     }
 320:Core/Src/main.c ****     break;
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   case STATE_OPERATION:
 324:Core/Src/main.c ****     switch (event)
 325:Core/Src/main.c ****     {
 326:Core/Src/main.c ****     case EVENT_KEY_PRESSED:
 327:Core/Src/main.c ****       f_timer_digit_update=1;
 328:Core/Src/main.c ****       d_timer_digit_update=0;
 329:Core/Src/main.c ****       f_start_counting=1;
 330:Core/Src/main.c ****       event=EVENT_RESET;
 331:Core/Src/main.c ****       break;
 332:Core/Src/main.c **** 
ARM GAS  /tmp/cciPyXYD.s 			page 11


 333:Core/Src/main.c ****     case EVENT_KEY_RELEASED:
 334:Core/Src/main.c ****       f_start_counting=0;
 335:Core/Src/main.c ****       event=EVENT_RESET;
 336:Core/Src/main.c ****       break;
 337:Core/Src/main.c ****     
 338:Core/Src/main.c ****     case EVENT_RX_COMPLETE:
 339:Core/Src/main.c ****       RS485_Read_Message();
 340:Core/Src/main.c ****       event=EVENT_RESET;
 341:Core/Src/main.c ****       break;
 342:Core/Src/main.c ****     case EVENT_DATA_REQUEST:
 343:Core/Src/main.c ****         
 344:Core/Src/main.c ****         pTX_msg = &TX_msg[1];
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****         *pTX_msg++ = ID;
 347:Core/Src/main.c ****         *pTX_msg++ = FUNC_READ;
 348:Core/Src/main.c ****         *pTX_msg++ = digit+'0';
 349:Core/Src/main.c ****         RS485_Send_Message();
 350:Core/Src/main.c ****         event = EVENT_RESET;
 351:Core/Src/main.c ****       break;
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****     case EVENT_DATA_WRITE:
 354:Core/Src/main.c ****         
 355:Core/Src/main.c ****         pTX_msg = &TX_msg[1];
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****         *pTX_msg++ = ID;
 358:Core/Src/main.c ****         *pTX_msg++ = FUNC_WRITE;
 359:Core/Src/main.c ****         *pTX_msg++ = '0';
 360:Core/Src/main.c ****         RS485_Send_Message();
 361:Core/Src/main.c ****         event = EVENT_RESET;
 362:Core/Src/main.c ****       break;
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****     }
 365:Core/Src/main.c ****     default:
 366:Core/Src/main.c ****         if(!f_start_counting) break;
 367:Core/Src/main.c ****         if(!f_timer_digit_update) break;
 368:Core/Src/main.c ****         f_timer_digit_update=0;
 369:Core/Src/main.c ****         digit=(digit+1)>max_digit? min_digit :digit+1;
 370:Core/Src/main.c ****         seven_segment_display(seven_segment_table[digit]);
 371:Core/Src/main.c ****               
 372:Core/Src/main.c ****       break;
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****     break;
 375:Core/Src/main.c ****  
 376:Core/Src/main.c ****   }
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** }
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** void RS485_RX_Task(void)
 384:Core/Src/main.c **** {
 238              		.loc 1 384 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cciPyXYD.s 			page 12


 243              	.LCFI1:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 3, -8
 246              		.cfi_offset 14, -4
 385:Core/Src/main.c **** 	
 386:Core/Src/main.c **** 	if (rx_buffer.tail==rx_buffer.head) return;
 247              		.loc 1 386 2 view .LVU56
 248              		.loc 1 386 15 is_stmt 0 view .LVU57
 249 0002 174B     		ldr	r3, .L26
 250 0004 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 251              		.loc 1 386 31 view .LVU58
 252 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253              		.loc 1 386 5 view .LVU59
 254 0008 9A42     		cmp	r2, r3
 255 000a 20D0     		beq	.L18
 387:Core/Src/main.c **** 	
 388:Core/Src/main.c **** 	
 389:Core/Src/main.c **** 	if (rx_buffer.data[rx_buffer.tail]==SOF)
 256              		.loc 1 389 2 is_stmt 1 view .LVU60
 257              		.loc 1 389 20 is_stmt 0 view .LVU61
 258 000c 144B     		ldr	r3, .L26
 259 000e 1344     		add	r3, r3, r2
 260 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 261              		.loc 1 389 5 view .LVU62
 262 0012 022B     		cmp	r3, #2
 263 0014 0AD0     		beq	.L24
 390:Core/Src/main.c **** 	{
 391:Core/Src/main.c **** 		f_read_msg =1;
 392:Core/Src/main.c **** 		pRX_msg = RX_msg;
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** 	}else if(rx_buffer.data[rx_buffer.tail]==EOF)
 264              		.loc 1 394 8 is_stmt 1 view .LVU63
 265              		.loc 1 394 10 is_stmt 0 view .LVU64
 266 0016 032B     		cmp	r3, #3
 267 0018 1AD0     		beq	.L25
 395:Core/Src/main.c **** 	{
 396:Core/Src/main.c **** 		f_read_msg =0;
 397:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 398:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 399:Core/Src/main.c **** 	}else{
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** 		if (f_read_msg){
 268              		.loc 1 401 3 is_stmt 1 view .LVU65
 269              		.loc 1 401 7 is_stmt 0 view .LVU66
 270 001a 124A     		ldr	r2, .L26+4
 271 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 272              		.loc 1 401 6 view .LVU67
 273 001e 5AB1     		cbz	r2, .L21
 402:Core/Src/main.c **** 			*pRX_msg++=rx_buffer.data[rx_buffer.tail];
 274              		.loc 1 402 4 is_stmt 1 view .LVU68
 275              		.loc 1 402 12 is_stmt 0 view .LVU69
 276 0020 1149     		ldr	r1, .L26+8
 277 0022 0A68     		ldr	r2, [r1]
 278 0024 501C     		adds	r0, r2, #1
 279 0026 0860     		str	r0, [r1]
 280              		.loc 1 402 14 view .LVU70
 281 0028 1370     		strb	r3, [r2]
ARM GAS  /tmp/cciPyXYD.s 			page 13


 282 002a 05E0     		b	.L21
 283              	.L24:
 391:Core/Src/main.c **** 		pRX_msg = RX_msg;
 284              		.loc 1 391 3 is_stmt 1 view .LVU71
 391:Core/Src/main.c **** 		pRX_msg = RX_msg;
 285              		.loc 1 391 14 is_stmt 0 view .LVU72
 286 002c 0D4B     		ldr	r3, .L26+4
 287 002e 0122     		movs	r2, #1
 288 0030 1A70     		strb	r2, [r3]
 392:Core/Src/main.c **** 
 289              		.loc 1 392 3 is_stmt 1 view .LVU73
 392:Core/Src/main.c **** 
 290              		.loc 1 392 11 is_stmt 0 view .LVU74
 291 0032 0D4B     		ldr	r3, .L26+8
 292 0034 0D4A     		ldr	r2, .L26+12
 293 0036 1A60     		str	r2, [r3]
 294              	.L21:
 403:Core/Src/main.c **** 		}	
 404:Core/Src/main.c **** 	}
 405:Core/Src/main.c **** 	rx_buffer.tail = (rx_buffer.tail+1)%BUFFER_SIZE;
 295              		.loc 1 405 2 is_stmt 1 view .LVU75
 296              		.loc 1 405 29 is_stmt 0 view .LVU76
 297 0038 0949     		ldr	r1, .L26
 298 003a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 299              		.loc 1 405 34 view .LVU77
 300 003c 0133     		adds	r3, r3, #1
 301              		.loc 1 405 37 view .LVU78
 302 003e 5A42     		rsbs	r2, r3, #0
 303 0040 03F03F03 		and	r3, r3, #63
 304 0044 02F03F02 		and	r2, r2, #63
 305 0048 58BF     		it	pl
 306 004a 5342     		rsbpl	r3, r2, #0
 307              		.loc 1 405 17 view .LVU79
 308 004c 4B70     		strb	r3, [r1, #1]
 309              	.L18:
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** }
 310              		.loc 1 407 1 view .LVU80
 311 004e 08BD     		pop	{r3, pc}
 312              	.L25:
 396:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 313              		.loc 1 396 3 is_stmt 1 view .LVU81
 396:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 314              		.loc 1 396 14 is_stmt 0 view .LVU82
 315 0050 044B     		ldr	r3, .L26+4
 316 0052 0022     		movs	r2, #0
 317 0054 1A70     		strb	r2, [r3]
 397:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 318              		.loc 1 397 5 is_stmt 1 view .LVU83
 319 0056 0321     		movs	r1, #3
 320 0058 0548     		ldr	r0, .L26+16
 321 005a FFF7FEFF 		bl	buffer_push
 322              	.LVL10:
 323 005e EBE7     		b	.L21
 324              	.L27:
 325              		.align	2
 326              	.L26:
ARM GAS  /tmp/cciPyXYD.s 			page 14


 327 0060 00000000 		.word	.LANCHOR7
 328 0064 00000000 		.word	.LANCHOR8
 329 0068 00000000 		.word	.LANCHOR9
 330 006c 00000000 		.word	.LANCHOR10
 331 0070 00000000 		.word	.LANCHOR6
 332              		.cfi_endproc
 333              	.LFE71:
 335              		.section	.text.RS485_Read_Message,"ax",%progbits
 336              		.align	1
 337              		.global	RS485_Read_Message
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	RS485_Read_Message:
 343              	.LFB72:
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** 
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** void RS485_Read_Message(void){
 344              		.loc 1 414 30 view -0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 08B5     		push	{r3, lr}
 349              	.LCFI2:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 3, -8
 352              		.cfi_offset 14, -4
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   uint8_t checksum = 0;
 353              		.loc 1 416 3 view .LVU85
 354              	.LVL11:
 417:Core/Src/main.c ****   
 418:Core/Src/main.c **** 	checksum = checksum^RX_msg[0]^RX_msg[1]^RX_msg[2];
 355              		.loc 1 418 2 view .LVU86
 356              		.loc 1 418 28 is_stmt 0 view .LVU87
 357 0002 214B     		ldr	r3, .L40
 358 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 359              		.loc 1 418 38 view .LVU88
 360 0006 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 361              		.loc 1 418 48 view .LVU89
 362 0008 93F802C0 		ldrb	ip, [r3, #2]	@ zero_extendqisi2
 363              		.loc 1 418 11 view .LVU90
 364 000c 80EA0102 		eor	r2, r0, r1
 365 0010 8CEA0202 		eor	r2, ip, r2
 366              	.LVL12:
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   //if (rx_buffer.tail==rx_buffer.head) return;
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   if (!(checksum== RX_msg[3]))
 367              		.loc 1 422 3 is_stmt 1 view .LVU91
 368              		.loc 1 422 26 is_stmt 0 view .LVU92
 369 0014 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 370              		.loc 1 422 6 view .LVU93
ARM GAS  /tmp/cciPyXYD.s 			page 15


 371 0016 9342     		cmp	r3, r2
 372 0018 09D1     		bne	.L28
 423:Core/Src/main.c **** 	{
 424:Core/Src/main.c ****      return;
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** 	}
 427:Core/Src/main.c ****   
 428:Core/Src/main.c ****   if (RX_msg[0]!= ID) return;
 373              		.loc 1 428 3 is_stmt 1 view .LVU94
 374              		.loc 1 428 16 is_stmt 0 view .LVU95
 375 001a 1C4B     		ldr	r3, .L40+4
 376 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 377              		.loc 1 428 6 view .LVU96
 378 001e 9842     		cmp	r0, r3
 379 0020 05D1     		bne	.L28
 429:Core/Src/main.c ****   
 430:Core/Src/main.c ****   if (RX_msg[1] == FUNC_WRITE)
 380              		.loc 1 430 3 is_stmt 1 view .LVU97
 381              		.loc 1 430 6 is_stmt 0 view .LVU98
 382 0022 F129     		cmp	r1, #241
 383 0024 04D0     		beq	.L35
 431:Core/Src/main.c ****   {    
 432:Core/Src/main.c ****          digit = RX_msg[2]-'0';
 433:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 434:Core/Src/main.c ****          buffer_push(&event_buffer, EVENT_DATA_WRITE);
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   }else if (RX_msg[1] == FUNC_READ){
 384              		.loc 1 436 9 is_stmt 1 view .LVU99
 385              		.loc 1 436 12 is_stmt 0 view .LVU100
 386 0026 F229     		cmp	r1, #242
 387 0028 0FD0     		beq	.L36
 437:Core/Src/main.c ****          
 438:Core/Src/main.c ****         buffer_push(&event_buffer, EVENT_DATA_REQUEST);
 439:Core/Src/main.c ****         //RS485_Send_Message();
 440:Core/Src/main.c ****   
 441:Core/Src/main.c ****   }else if(RX_msg[1]== FUNC_FIND_SLAVE){
 388              		.loc 1 441 9 is_stmt 1 view .LVU101
 389              		.loc 1 441 11 is_stmt 0 view .LVU102
 390 002a F429     		cmp	r1, #244
 391 002c 12D0     		beq	.L37
 392              	.LVL13:
 393              	.L28:
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****       if (RX_msg[2]=='1'){
 444:Core/Src/main.c ****           min_digit = 0;
 445:Core/Src/main.c ****           max_digit = 9;
 446:Core/Src/main.c ****       }
 447:Core/Src/main.c ****       else if (RX_msg[2]=='2'){
 448:Core/Src/main.c ****           min_digit = 10;
 449:Core/Src/main.c ****           max_digit = 15;
 450:Core/Src/main.c ****       }
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****        buffer_push(&event_buffer, EVENT_MASTER_FOUND);
 453:Core/Src/main.c ****   }
 454:Core/Src/main.c **** }
 394              		.loc 1 454 1 view .LVU103
 395 002e 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cciPyXYD.s 			page 16


 396              	.LVL14:
 397              	.L35:
 432:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 398              		.loc 1 432 10 is_stmt 1 view .LVU104
 432:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 399              		.loc 1 432 27 is_stmt 0 view .LVU105
 400 0030 ACF13003 		sub	r3, ip, #48
 432:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 401              		.loc 1 432 16 view .LVU106
 402 0034 164A     		ldr	r2, .L40+8
 403              	.LVL15:
 432:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 404              		.loc 1 432 16 view .LVU107
 405 0036 1360     		str	r3, [r2]
 433:Core/Src/main.c ****          buffer_push(&event_buffer, EVENT_DATA_WRITE);
 406              		.loc 1 433 10 is_stmt 1 view .LVU108
 407 0038 164A     		ldr	r2, .L40+12
 408 003a D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 409              	.LVL16:
 433:Core/Src/main.c ****          buffer_push(&event_buffer, EVENT_DATA_WRITE);
 410              		.loc 1 433 10 is_stmt 0 view .LVU109
 411 003c FFF7FEFF 		bl	seven_segment_display
 412              	.LVL17:
 434:Core/Src/main.c **** 
 413              		.loc 1 434 10 is_stmt 1 view .LVU110
 414 0040 0521     		movs	r1, #5
 415 0042 1548     		ldr	r0, .L40+16
 416 0044 FFF7FEFF 		bl	buffer_push
 417              	.LVL18:
 418 0048 F1E7     		b	.L28
 419              	.LVL19:
 420              	.L36:
 438:Core/Src/main.c ****         //RS485_Send_Message();
 421              		.loc 1 438 9 view .LVU111
 422 004a 0421     		movs	r1, #4
 423 004c 1248     		ldr	r0, .L40+16
 424 004e FFF7FEFF 		bl	buffer_push
 425              	.LVL20:
 438:Core/Src/main.c ****         //RS485_Send_Message();
 426              		.loc 1 438 9 is_stmt 0 view .LVU112
 427 0052 ECE7     		b	.L28
 428              	.LVL21:
 429              	.L37:
 443:Core/Src/main.c ****           min_digit = 0;
 430              		.loc 1 443 7 is_stmt 1 view .LVU113
 443:Core/Src/main.c ****           min_digit = 0;
 431              		.loc 1 443 10 is_stmt 0 view .LVU114
 432 0054 BCF1310F 		cmp	ip, #49
 433 0058 07D0     		beq	.L38
 447:Core/Src/main.c ****           min_digit = 10;
 434              		.loc 1 447 12 is_stmt 1 view .LVU115
 447:Core/Src/main.c ****           min_digit = 10;
 435              		.loc 1 447 15 is_stmt 0 view .LVU116
 436 005a BCF1320F 		cmp	ip, #50
 437 005e 0BD0     		beq	.L39
 438              	.LVL22:
 439              	.L33:
ARM GAS  /tmp/cciPyXYD.s 			page 17


 452:Core/Src/main.c ****   }
 440              		.loc 1 452 8 is_stmt 1 view .LVU117
 441 0060 0621     		movs	r1, #6
 442              	.LVL23:
 452:Core/Src/main.c ****   }
 443              		.loc 1 452 8 is_stmt 0 view .LVU118
 444 0062 0D48     		ldr	r0, .L40+16
 445              	.LVL24:
 452:Core/Src/main.c ****   }
 446              		.loc 1 452 8 view .LVU119
 447 0064 FFF7FEFF 		bl	buffer_push
 448              	.LVL25:
 452:Core/Src/main.c ****   }
 449              		.loc 1 452 8 view .LVU120
 450 0068 E1E7     		b	.L28
 451              	.LVL26:
 452              	.L38:
 444:Core/Src/main.c ****           max_digit = 9;
 453              		.loc 1 444 11 is_stmt 1 view .LVU121
 444:Core/Src/main.c ****           max_digit = 9;
 454              		.loc 1 444 21 is_stmt 0 view .LVU122
 455 006a 0C4B     		ldr	r3, .L40+20
 456 006c 0022     		movs	r2, #0
 457              	.LVL27:
 444:Core/Src/main.c ****           max_digit = 9;
 458              		.loc 1 444 21 view .LVU123
 459 006e 1A70     		strb	r2, [r3]
 445:Core/Src/main.c ****       }
 460              		.loc 1 445 11 is_stmt 1 view .LVU124
 445:Core/Src/main.c ****       }
 461              		.loc 1 445 21 is_stmt 0 view .LVU125
 462 0070 0B4B     		ldr	r3, .L40+24
 463 0072 0922     		movs	r2, #9
 464 0074 1A70     		strb	r2, [r3]
 465 0076 F3E7     		b	.L33
 466              	.LVL28:
 467              	.L39:
 448:Core/Src/main.c ****           max_digit = 15;
 468              		.loc 1 448 11 is_stmt 1 view .LVU126
 448:Core/Src/main.c ****           max_digit = 15;
 469              		.loc 1 448 21 is_stmt 0 view .LVU127
 470 0078 084B     		ldr	r3, .L40+20
 471 007a 0A22     		movs	r2, #10
 472              	.LVL29:
 448:Core/Src/main.c ****           max_digit = 15;
 473              		.loc 1 448 21 view .LVU128
 474 007c 1A70     		strb	r2, [r3]
 449:Core/Src/main.c ****       }
 475              		.loc 1 449 11 is_stmt 1 view .LVU129
 449:Core/Src/main.c ****       }
 476              		.loc 1 449 21 is_stmt 0 view .LVU130
 477 007e 084B     		ldr	r3, .L40+24
 478 0080 0F22     		movs	r2, #15
 479 0082 1A70     		strb	r2, [r3]
 480 0084 ECE7     		b	.L33
 481              	.L41:
 482 0086 00BF     		.align	2
ARM GAS  /tmp/cciPyXYD.s 			page 18


 483              	.L40:
 484 0088 00000000 		.word	.LANCHOR10
 485 008c 00000000 		.word	.LANCHOR11
 486 0090 00000000 		.word	.LANCHOR12
 487 0094 00000000 		.word	.LANCHOR13
 488 0098 00000000 		.word	.LANCHOR6
 489 009c 00000000 		.word	.LANCHOR14
 490 00a0 00000000 		.word	.LANCHOR15
 491              		.cfi_endproc
 492              	.LFE72:
 494              		.section	.text.RS485_Send_Message,"ax",%progbits
 495              		.align	1
 496              		.global	RS485_Send_Message
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 501              	RS485_Send_Message:
 502              	.LFB73:
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** void RS485_Send_Message(void)
 457:Core/Src/main.c **** {
 503              		.loc 1 457 1 is_stmt 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507 0000 38B5     		push	{r3, r4, r5, lr}
 508              	.LCFI3:
 509              		.cfi_def_cfa_offset 16
 510              		.cfi_offset 3, -16
 511              		.cfi_offset 4, -12
 512              		.cfi_offset 5, -8
 513              		.cfi_offset 14, -4
 458:Core/Src/main.c **** 	
 459:Core/Src/main.c **** 	TX_msg[0] = SOF;
 514              		.loc 1 459 2 view .LVU132
 515              		.loc 1 459 12 is_stmt 0 view .LVU133
 516 0002 0F4C     		ldr	r4, .L44
 517 0004 0223     		movs	r3, #2
 518 0006 2370     		strb	r3, [r4]
 460:Core/Src/main.c ****   TX_msg[4] = (((0x00^TX_msg[1])^TX_msg[2])^TX_msg[3]);    // checksum  // checksum
 519              		.loc 1 460 3 is_stmt 1 view .LVU134
 520              		.loc 1 460 29 is_stmt 0 view .LVU135
 521 0008 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 522              		.loc 1 460 40 view .LVU136
 523 000a A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 524              		.loc 1 460 51 view .LVU137
 525 000c E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 526              		.loc 1 460 13 view .LVU138
 527 000e 4A40     		eors	r2, r2, r1
 528 0010 5340     		eors	r3, r3, r2
 529 0012 2371     		strb	r3, [r4, #4]
 461:Core/Src/main.c **** 	TX_msg[5] = EOF;
 530              		.loc 1 461 2 is_stmt 1 view .LVU139
 531              		.loc 1 461 12 is_stmt 0 view .LVU140
 532 0014 0323     		movs	r3, #3
 533 0016 6371     		strb	r3, [r4, #5]
 462:Core/Src/main.c **** 
ARM GAS  /tmp/cciPyXYD.s 			page 19


 463:Core/Src/main.c **** 	// uint8_t *pbuf_tx = (uint8_t *)&msg;
 464:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX_EN_GPIO_Port, TX_EN_Pin, 1); /// Enable Transmitter Mode
 534              		.loc 1 464 2 is_stmt 1 view .LVU141
 535 0018 0A4D     		ldr	r5, .L44+4
 536 001a 0122     		movs	r2, #1
 537 001c 4FF48071 		mov	r1, #256
 538 0020 2846     		mov	r0, r5
 539 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 540              	.LVL30:
 465:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, TX_msg, sizeof(TX_msg), 10);
 541              		.loc 1 465 2 view .LVU142
 542 0026 0A23     		movs	r3, #10
 543 0028 0622     		movs	r2, #6
 544 002a 2146     		mov	r1, r4
 545 002c 0648     		ldr	r0, .L44+8
 546 002e FFF7FEFF 		bl	HAL_UART_Transmit
 547              	.LVL31:
 466:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX_EN_GPIO_Port, TX_EN_Pin, 0); /// Enable Receiver Mode
 548              		.loc 1 466 2 view .LVU143
 549 0032 0022     		movs	r2, #0
 550 0034 4FF48071 		mov	r1, #256
 551 0038 2846     		mov	r0, r5
 552 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 553              	.LVL32:
 467:Core/Src/main.c **** }
 554              		.loc 1 467 1 is_stmt 0 view .LVU144
 555 003e 38BD     		pop	{r3, r4, r5, pc}
 556              	.L45:
 557              		.align	2
 558              	.L44:
 559 0040 00000000 		.word	.LANCHOR16
 560 0044 00080140 		.word	1073809408
 561 0048 00000000 		.word	huart1
 562              		.cfi_endproc
 563              	.LFE73:
 565              		.section	.text.main_task,"ax",%progbits
 566              		.align	1
 567              		.global	main_task
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	main_task:
 573              	.LFB70:
 289:Core/Src/main.c ****   	if (event_buffer.head!=event_buffer.tail){
 574              		.loc 1 289 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578 0000 08B5     		push	{r3, lr}
 579              	.LCFI4:
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 3, -8
 582              		.cfi_offset 14, -4
 290:Core/Src/main.c **** 
 583              		.loc 1 290 4 view .LVU146
 290:Core/Src/main.c **** 
 584              		.loc 1 290 20 is_stmt 0 view .LVU147
ARM GAS  /tmp/cciPyXYD.s 			page 20


 585 0002 534B     		ldr	r3, .L66
 586 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 290:Core/Src/main.c **** 
 587              		.loc 1 290 39 view .LVU148
 588 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 290:Core/Src/main.c **** 
 589              		.loc 1 290 7 view .LVU149
 590 0008 9A42     		cmp	r2, r3
 591 000a 1DD1     		bne	.L63
 592              	.L47:
 298:Core/Src/main.c ****   {
 593              		.loc 1 298 3 is_stmt 1 view .LVU150
 594 000c 514B     		ldr	r3, .L66+4
 595 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 596 0010 03B3     		cbz	r3, .L48
 597 0012 012B     		cmp	r3, #1
 598 0014 48D0     		beq	.L49
 599              	.L50:
 366:Core/Src/main.c ****         if(!f_timer_digit_update) break;
 600              		.loc 1 366 9 view .LVU151
 366:Core/Src/main.c ****         if(!f_timer_digit_update) break;
 601              		.loc 1 366 12 is_stmt 0 view .LVU152
 602 0016 504B     		ldr	r3, .L66+8
 603 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 366:Core/Src/main.c ****         if(!f_timer_digit_update) break;
 604              		.loc 1 366 11 view .LVU153
 605 001a 0BB3     		cbz	r3, .L46
 367:Core/Src/main.c ****         f_timer_digit_update=0;
 606              		.loc 1 367 9 is_stmt 1 view .LVU154
 367:Core/Src/main.c ****         f_timer_digit_update=0;
 607              		.loc 1 367 12 is_stmt 0 view .LVU155
 608 001c 4F4B     		ldr	r3, .L66+12
 609 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 367:Core/Src/main.c ****         f_timer_digit_update=0;
 610              		.loc 1 367 11 view .LVU156
 611 0020 F3B1     		cbz	r3, .L46
 368:Core/Src/main.c ****         digit=(digit+1)>max_digit? min_digit :digit+1;
 612              		.loc 1 368 9 is_stmt 1 view .LVU157
 368:Core/Src/main.c ****         digit=(digit+1)>max_digit? min_digit :digit+1;
 613              		.loc 1 368 29 is_stmt 0 view .LVU158
 614 0022 4E4B     		ldr	r3, .L66+12
 615 0024 0022     		movs	r2, #0
 616 0026 1A70     		strb	r2, [r3]
 369:Core/Src/main.c ****         seven_segment_display(seven_segment_table[digit]);
 617              		.loc 1 369 9 is_stmt 1 view .LVU159
 369:Core/Src/main.c ****         seven_segment_display(seven_segment_table[digit]);
 618              		.loc 1 369 24 is_stmt 0 view .LVU160
 619 0028 4D4B     		ldr	r3, .L66+16
 620 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 621 002c 4D4B     		ldr	r3, .L66+20
 622 002e 1B68     		ldr	r3, [r3]
 369:Core/Src/main.c ****         seven_segment_display(seven_segment_table[digit]);
 623              		.loc 1 369 46 view .LVU161
 624 0030 9A42     		cmp	r2, r3
 625 0032 00F38B80 		bgt	.L59
 369:Core/Src/main.c ****         seven_segment_display(seven_segment_table[digit]);
 626              		.loc 1 369 46 discriminator 1 view .LVU162
ARM GAS  /tmp/cciPyXYD.s 			page 21


 627 0036 4C4B     		ldr	r3, .L66+24
 628 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 629              	.L60:
 369:Core/Src/main.c ****         seven_segment_display(seven_segment_table[digit]);
 630              		.loc 1 369 14 discriminator 4 view .LVU163
 631 003a 4A4A     		ldr	r2, .L66+20
 632 003c 1360     		str	r3, [r2]
 370:Core/Src/main.c ****               
 633              		.loc 1 370 9 is_stmt 1 discriminator 4 view .LVU164
 634 003e 4B4A     		ldr	r2, .L66+28
 635 0040 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 636 0042 FFF7FEFF 		bl	seven_segment_display
 637              	.LVL33:
 372:Core/Src/main.c **** 
 638              		.loc 1 372 7 discriminator 4 view .LVU165
 380:Core/Src/main.c **** 
 639              		.loc 1 380 1 is_stmt 0 discriminator 4 view .LVU166
 640 0046 0BE0     		b	.L46
 641              	.L63:
 292:Core/Src/main.c **** 
 642              		.loc 1 292 5 is_stmt 1 view .LVU167
 292:Core/Src/main.c **** 
 643              		.loc 1 292 13 is_stmt 0 view .LVU168
 644 0048 4148     		ldr	r0, .L66
 645 004a FFF7FEFF 		bl	buffer_pop
 646              	.LVL34:
 292:Core/Src/main.c **** 
 647              		.loc 1 292 11 view .LVU169
 648 004e 484B     		ldr	r3, .L66+32
 649 0050 1870     		strb	r0, [r3]
 650 0052 DBE7     		b	.L47
 651              	.L48:
 302:Core/Src/main.c ****      // seven_segment_display(seven_segment_table[10]);
 652              		.loc 1 302 5 is_stmt 1 view .LVU170
 302:Core/Src/main.c ****      // seven_segment_display(seven_segment_table[10]);
 653              		.loc 1 302 15 is_stmt 0 view .LVU171
 654 0054 464B     		ldr	r3, .L66+32
 655 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302:Core/Src/main.c ****      // seven_segment_display(seven_segment_table[10]);
 656              		.loc 1 302 8 view .LVU172
 657 0058 032B     		cmp	r3, #3
 658 005a 02D0     		beq	.L64
 307:Core/Src/main.c ****        // seven_segment_display(seven_segment_table[11]);
 659              		.loc 1 307 10 is_stmt 1 view .LVU173
 307:Core/Src/main.c ****        // seven_segment_display(seven_segment_table[11]);
 660              		.loc 1 307 12 is_stmt 0 view .LVU174
 661 005c 062B     		cmp	r3, #6
 662 005e 06D0     		beq	.L65
 663              	.L46:
 380:Core/Src/main.c **** 
 664              		.loc 1 380 1 view .LVU175
 665 0060 08BD     		pop	{r3, pc}
 666              	.L64:
 304:Core/Src/main.c ****       event=EVENT_RESET;
 667              		.loc 1 304 7 is_stmt 1 view .LVU176
 668 0062 FFF7FEFF 		bl	RS485_Read_Message
 669              	.LVL35:
ARM GAS  /tmp/cciPyXYD.s 			page 22


 305:Core/Src/main.c ****     }
 670              		.loc 1 305 7 view .LVU177
 305:Core/Src/main.c ****     }
 671              		.loc 1 305 12 is_stmt 0 view .LVU178
 672 0066 424B     		ldr	r3, .L66+32
 673 0068 0022     		movs	r2, #0
 674 006a 1A70     		strb	r2, [r3]
 675 006c F8E7     		b	.L46
 676              	.L65:
 309:Core/Src/main.c **** 
 677              		.loc 1 309 9 is_stmt 1 view .LVU179
 309:Core/Src/main.c **** 
 678              		.loc 1 309 17 is_stmt 0 view .LVU180
 679 006e 414A     		ldr	r2, .L66+36
 680 0070 414B     		ldr	r3, .L66+40
 681 0072 591C     		adds	r1, r3, #1
 682 0074 1160     		str	r1, [r2]
 311:Core/Src/main.c ****         ID = (uint8_t)(*unique_id&0xFF);
 683              		.loc 1 311 9 is_stmt 1 view .LVU181
 311:Core/Src/main.c ****         ID = (uint8_t)(*unique_id&0xFF);
 684              		.loc 1 311 17 is_stmt 0 view .LVU182
 685 0076 991C     		adds	r1, r3, #2
 686 0078 1160     		str	r1, [r2]
 311:Core/Src/main.c ****         ID = (uint8_t)(*unique_id&0xFF);
 687              		.loc 1 311 20 view .LVU183
 688 007a 4048     		ldr	r0, .L66+44
 689 007c 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 690 007e 5970     		strb	r1, [r3, #1]
 312:Core/Src/main.c ****         *pTX_msg++ = FUNC_FIND_SLAVE;
 691              		.loc 1 312 9 is_stmt 1 view .LVU184
 312:Core/Src/main.c ****         *pTX_msg++ = FUNC_FIND_SLAVE;
 692              		.loc 1 312 24 is_stmt 0 view .LVU185
 693 0080 3F49     		ldr	r1, .L66+48
 694 0082 0968     		ldr	r1, [r1]
 312:Core/Src/main.c ****         *pTX_msg++ = FUNC_FIND_SLAVE;
 695              		.loc 1 312 14 view .LVU186
 696 0084 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 312:Core/Src/main.c ****         *pTX_msg++ = FUNC_FIND_SLAVE;
 697              		.loc 1 312 12 view .LVU187
 698 0086 0170     		strb	r1, [r0]
 313:Core/Src/main.c ****         *pTX_msg++ = ID;
 699              		.loc 1 313 9 is_stmt 1 view .LVU188
 313:Core/Src/main.c ****         *pTX_msg++ = ID;
 700              		.loc 1 313 17 is_stmt 0 view .LVU189
 701 0088 D81C     		adds	r0, r3, #3
 702 008a 1060     		str	r0, [r2]
 313:Core/Src/main.c ****         *pTX_msg++ = ID;
 703              		.loc 1 313 20 view .LVU190
 704 008c F420     		movs	r0, #244
 705 008e 9870     		strb	r0, [r3, #2]
 314:Core/Src/main.c ****         RS485_Send_Message();
 706              		.loc 1 314 9 is_stmt 1 view .LVU191
 314:Core/Src/main.c ****         RS485_Send_Message();
 707              		.loc 1 314 17 is_stmt 0 view .LVU192
 708 0090 181D     		adds	r0, r3, #4
 709 0092 1060     		str	r0, [r2]
 314:Core/Src/main.c ****         RS485_Send_Message();
ARM GAS  /tmp/cciPyXYD.s 			page 23


 710              		.loc 1 314 20 view .LVU193
 711 0094 D970     		strb	r1, [r3, #3]
 315:Core/Src/main.c ****         event = EVENT_RESET;
 712              		.loc 1 315 9 is_stmt 1 view .LVU194
 713 0096 FFF7FEFF 		bl	RS485_Send_Message
 714              	.LVL36:
 316:Core/Src/main.c **** 
 715              		.loc 1 316 9 view .LVU195
 316:Core/Src/main.c **** 
 716              		.loc 1 316 15 is_stmt 0 view .LVU196
 717 009a 354B     		ldr	r3, .L66+32
 718 009c 0022     		movs	r2, #0
 719 009e 1A70     		strb	r2, [r3]
 318:Core/Src/main.c ****     }
 720              		.loc 1 318 9 is_stmt 1 view .LVU197
 318:Core/Src/main.c ****     }
 721              		.loc 1 318 15 is_stmt 0 view .LVU198
 722 00a0 2C4B     		ldr	r3, .L66+4
 723 00a2 0122     		movs	r2, #1
 724 00a4 1A70     		strb	r2, [r3]
 725 00a6 DBE7     		b	.L46
 726              	.L49:
 324:Core/Src/main.c ****     {
 727              		.loc 1 324 5 is_stmt 1 view .LVU199
 728 00a8 314B     		ldr	r3, .L66+32
 729 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 730 00ac 013B     		subs	r3, r3, #1
 731 00ae 042B     		cmp	r3, #4
 732 00b0 B1D8     		bhi	.L50
 733 00b2 DFE803F0 		tbb	[pc, r3]
 734              	.L54:
 735 00b6 03       		.byte	(.L58-.L54)/2
 736 00b7 0E       		.byte	(.L57-.L54)/2
 737 00b8 14       		.byte	(.L56-.L54)/2
 738 00b9 1A       		.byte	(.L55-.L54)/2
 739 00ba 34       		.byte	(.L53-.L54)/2
 740 00bb 00       		.p2align 1
 741              	.L58:
 327:Core/Src/main.c ****       d_timer_digit_update=0;
 742              		.loc 1 327 7 view .LVU200
 327:Core/Src/main.c ****       d_timer_digit_update=0;
 743              		.loc 1 327 27 is_stmt 0 view .LVU201
 744 00bc 0122     		movs	r2, #1
 745 00be 274B     		ldr	r3, .L66+12
 746 00c0 1A70     		strb	r2, [r3]
 328:Core/Src/main.c ****       f_start_counting=1;
 747              		.loc 1 328 7 is_stmt 1 view .LVU202
 328:Core/Src/main.c ****       f_start_counting=1;
 748              		.loc 1 328 27 is_stmt 0 view .LVU203
 749 00c2 0023     		movs	r3, #0
 750 00c4 2F49     		ldr	r1, .L66+52
 751 00c6 0B70     		strb	r3, [r1]
 329:Core/Src/main.c ****       event=EVENT_RESET;
 752              		.loc 1 329 7 is_stmt 1 view .LVU204
 329:Core/Src/main.c ****       event=EVENT_RESET;
 753              		.loc 1 329 23 is_stmt 0 view .LVU205
 754 00c8 2349     		ldr	r1, .L66+8
ARM GAS  /tmp/cciPyXYD.s 			page 24


 755 00ca 0A70     		strb	r2, [r1]
 330:Core/Src/main.c ****       break;
 756              		.loc 1 330 7 is_stmt 1 view .LVU206
 330:Core/Src/main.c ****       break;
 757              		.loc 1 330 12 is_stmt 0 view .LVU207
 758 00cc 284A     		ldr	r2, .L66+32
 759 00ce 1370     		strb	r3, [r2]
 331:Core/Src/main.c **** 
 760              		.loc 1 331 7 is_stmt 1 view .LVU208
 761 00d0 A1E7     		b	.L50
 762              	.L57:
 334:Core/Src/main.c ****       event=EVENT_RESET;
 763              		.loc 1 334 7 view .LVU209
 334:Core/Src/main.c ****       event=EVENT_RESET;
 764              		.loc 1 334 23 is_stmt 0 view .LVU210
 765 00d2 0023     		movs	r3, #0
 766 00d4 204A     		ldr	r2, .L66+8
 767 00d6 1370     		strb	r3, [r2]
 335:Core/Src/main.c ****       break;
 768              		.loc 1 335 7 is_stmt 1 view .LVU211
 335:Core/Src/main.c ****       break;
 769              		.loc 1 335 12 is_stmt 0 view .LVU212
 770 00d8 254A     		ldr	r2, .L66+32
 771 00da 1370     		strb	r3, [r2]
 336:Core/Src/main.c ****     
 772              		.loc 1 336 7 is_stmt 1 view .LVU213
 773 00dc 9BE7     		b	.L50
 774              	.L56:
 339:Core/Src/main.c ****       event=EVENT_RESET;
 775              		.loc 1 339 7 view .LVU214
 776 00de FFF7FEFF 		bl	RS485_Read_Message
 777              	.LVL37:
 340:Core/Src/main.c ****       break;
 778              		.loc 1 340 7 view .LVU215
 340:Core/Src/main.c ****       break;
 779              		.loc 1 340 12 is_stmt 0 view .LVU216
 780 00e2 234B     		ldr	r3, .L66+32
 781 00e4 0022     		movs	r2, #0
 782 00e6 1A70     		strb	r2, [r3]
 341:Core/Src/main.c ****     case EVENT_DATA_REQUEST:
 783              		.loc 1 341 7 is_stmt 1 view .LVU217
 784 00e8 95E7     		b	.L50
 785              	.L55:
 344:Core/Src/main.c **** 
 786              		.loc 1 344 9 view .LVU218
 344:Core/Src/main.c **** 
 787              		.loc 1 344 17 is_stmt 0 view .LVU219
 788 00ea 224A     		ldr	r2, .L66+36
 789 00ec 224B     		ldr	r3, .L66+40
 790 00ee 591C     		adds	r1, r3, #1
 791 00f0 1160     		str	r1, [r2]
 346:Core/Src/main.c ****         *pTX_msg++ = FUNC_READ;
 792              		.loc 1 346 9 is_stmt 1 view .LVU220
 346:Core/Src/main.c ****         *pTX_msg++ = FUNC_READ;
 793              		.loc 1 346 17 is_stmt 0 view .LVU221
 794 00f2 991C     		adds	r1, r3, #2
 795 00f4 1160     		str	r1, [r2]
ARM GAS  /tmp/cciPyXYD.s 			page 25


 346:Core/Src/main.c ****         *pTX_msg++ = FUNC_READ;
 796              		.loc 1 346 20 view .LVU222
 797 00f6 2149     		ldr	r1, .L66+44
 798 00f8 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 799 00fa 5970     		strb	r1, [r3, #1]
 347:Core/Src/main.c ****         *pTX_msg++ = digit+'0';
 800              		.loc 1 347 9 is_stmt 1 view .LVU223
 347:Core/Src/main.c ****         *pTX_msg++ = digit+'0';
 801              		.loc 1 347 17 is_stmt 0 view .LVU224
 802 00fc D91C     		adds	r1, r3, #3
 803 00fe 1160     		str	r1, [r2]
 347:Core/Src/main.c ****         *pTX_msg++ = digit+'0';
 804              		.loc 1 347 20 view .LVU225
 805 0100 F221     		movs	r1, #242
 806 0102 9970     		strb	r1, [r3, #2]
 348:Core/Src/main.c ****         RS485_Send_Message();
 807              		.loc 1 348 9 is_stmt 1 view .LVU226
 348:Core/Src/main.c ****         RS485_Send_Message();
 808              		.loc 1 348 27 is_stmt 0 view .LVU227
 809 0104 1749     		ldr	r1, .L66+20
 810 0106 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 348:Core/Src/main.c ****         RS485_Send_Message();
 811              		.loc 1 348 17 view .LVU228
 812 0108 181D     		adds	r0, r3, #4
 813 010a 1060     		str	r0, [r2]
 348:Core/Src/main.c ****         RS485_Send_Message();
 814              		.loc 1 348 27 view .LVU229
 815 010c 01F13002 		add	r2, r1, #48
 348:Core/Src/main.c ****         RS485_Send_Message();
 816              		.loc 1 348 20 view .LVU230
 817 0110 DA70     		strb	r2, [r3, #3]
 349:Core/Src/main.c ****         event = EVENT_RESET;
 818              		.loc 1 349 9 is_stmt 1 view .LVU231
 819 0112 FFF7FEFF 		bl	RS485_Send_Message
 820              	.LVL38:
 350:Core/Src/main.c ****       break;
 821              		.loc 1 350 9 view .LVU232
 350:Core/Src/main.c ****       break;
 822              		.loc 1 350 15 is_stmt 0 view .LVU233
 823 0116 164B     		ldr	r3, .L66+32
 824 0118 0022     		movs	r2, #0
 825 011a 1A70     		strb	r2, [r3]
 351:Core/Src/main.c **** 
 826              		.loc 1 351 7 is_stmt 1 view .LVU234
 827 011c 7BE7     		b	.L50
 828              	.L53:
 355:Core/Src/main.c **** 
 829              		.loc 1 355 9 view .LVU235
 355:Core/Src/main.c **** 
 830              		.loc 1 355 17 is_stmt 0 view .LVU236
 831 011e 154A     		ldr	r2, .L66+36
 832 0120 154B     		ldr	r3, .L66+40
 833 0122 591C     		adds	r1, r3, #1
 834 0124 1160     		str	r1, [r2]
 357:Core/Src/main.c ****         *pTX_msg++ = FUNC_WRITE;
 835              		.loc 1 357 9 is_stmt 1 view .LVU237
 357:Core/Src/main.c ****         *pTX_msg++ = FUNC_WRITE;
ARM GAS  /tmp/cciPyXYD.s 			page 26


 836              		.loc 1 357 17 is_stmt 0 view .LVU238
 837 0126 991C     		adds	r1, r3, #2
 838 0128 1160     		str	r1, [r2]
 357:Core/Src/main.c ****         *pTX_msg++ = FUNC_WRITE;
 839              		.loc 1 357 20 view .LVU239
 840 012a 1449     		ldr	r1, .L66+44
 841 012c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 842 012e 5970     		strb	r1, [r3, #1]
 358:Core/Src/main.c ****         *pTX_msg++ = '0';
 843              		.loc 1 358 9 is_stmt 1 view .LVU240
 358:Core/Src/main.c ****         *pTX_msg++ = '0';
 844              		.loc 1 358 17 is_stmt 0 view .LVU241
 845 0130 D91C     		adds	r1, r3, #3
 846 0132 1160     		str	r1, [r2]
 358:Core/Src/main.c ****         *pTX_msg++ = '0';
 847              		.loc 1 358 20 view .LVU242
 848 0134 F121     		movs	r1, #241
 849 0136 9970     		strb	r1, [r3, #2]
 359:Core/Src/main.c ****         RS485_Send_Message();
 850              		.loc 1 359 9 is_stmt 1 view .LVU243
 359:Core/Src/main.c ****         RS485_Send_Message();
 851              		.loc 1 359 17 is_stmt 0 view .LVU244
 852 0138 191D     		adds	r1, r3, #4
 853 013a 1160     		str	r1, [r2]
 359:Core/Src/main.c ****         RS485_Send_Message();
 854              		.loc 1 359 20 view .LVU245
 855 013c 3022     		movs	r2, #48
 856 013e DA70     		strb	r2, [r3, #3]
 360:Core/Src/main.c ****         event = EVENT_RESET;
 857              		.loc 1 360 9 is_stmt 1 view .LVU246
 858 0140 FFF7FEFF 		bl	RS485_Send_Message
 859              	.LVL39:
 361:Core/Src/main.c ****       break;
 860              		.loc 1 361 9 view .LVU247
 361:Core/Src/main.c ****       break;
 861              		.loc 1 361 15 is_stmt 0 view .LVU248
 862 0144 0A4B     		ldr	r3, .L66+32
 863 0146 0022     		movs	r2, #0
 864 0148 1A70     		strb	r2, [r3]
 362:Core/Src/main.c **** 
 865              		.loc 1 362 7 is_stmt 1 view .LVU249
 866 014a 64E7     		b	.L50
 867              	.L59:
 369:Core/Src/main.c ****         seven_segment_display(seven_segment_table[digit]);
 868              		.loc 1 369 46 is_stmt 0 discriminator 2 view .LVU250
 869 014c 0133     		adds	r3, r3, #1
 870 014e 74E7     		b	.L60
 871              	.L67:
 872              		.align	2
 873              	.L66:
 874 0150 00000000 		.word	.LANCHOR6
 875 0154 00000000 		.word	.LANCHOR18
 876 0158 00000000 		.word	.LANCHOR21
 877 015c 00000000 		.word	.LANCHOR4
 878 0160 00000000 		.word	.LANCHOR15
 879 0164 00000000 		.word	.LANCHOR12
 880 0168 00000000 		.word	.LANCHOR14
ARM GAS  /tmp/cciPyXYD.s 			page 27


 881 016c 00000000 		.word	.LANCHOR13
 882 0170 00000000 		.word	.LANCHOR17
 883 0174 00000000 		.word	.LANCHOR19
 884 0178 00000000 		.word	.LANCHOR16
 885 017c 00000000 		.word	.LANCHOR11
 886 0180 00000000 		.word	.LANCHOR20
 887 0184 00000000 		.word	.LANCHOR3
 888              		.cfi_endproc
 889              	.LFE70:
 891              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 892              		.align	1
 893              		.global	HAL_TIM_PeriodElapsedCallback
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 898              	HAL_TIM_PeriodElapsedCallback:
 899              	.LVL40:
 900              	.LFB74:
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 470:Core/Src/main.c **** {
 901              		.loc 1 470 1 is_stmt 1 view -0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 471:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
 472:Core/Src/main.c ****   if (htim == &htim1)
 906              		.loc 1 472 3 view .LVU252
 907              		.loc 1 472 6 is_stmt 0 view .LVU253
 908 0000 034B     		ldr	r3, .L71
 909 0002 8342     		cmp	r3, r0
 910 0004 00D0     		beq	.L70
 911              	.L68:
 473:Core/Src/main.c ****   {
 474:Core/Src/main.c **** 	  f_timer_10ms=1;
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c ****   
 477:Core/Src/main.c **** }
 912              		.loc 1 477 1 view .LVU254
 913 0006 7047     		bx	lr
 914              	.L70:
 474:Core/Src/main.c ****   }
 915              		.loc 1 474 4 is_stmt 1 view .LVU255
 474:Core/Src/main.c ****   }
 916              		.loc 1 474 16 is_stmt 0 view .LVU256
 917 0008 024B     		ldr	r3, .L71+4
 918 000a 0122     		movs	r2, #1
 919 000c 1A70     		strb	r2, [r3]
 920              		.loc 1 477 1 view .LVU257
 921 000e FAE7     		b	.L68
 922              	.L72:
 923              		.align	2
 924              	.L71:
 925 0010 00000000 		.word	htim1
 926 0014 00000000 		.word	.LANCHOR0
 927              		.cfi_endproc
ARM GAS  /tmp/cciPyXYD.s 			page 28


 928              	.LFE74:
 930              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 931              		.align	1
 932              		.global	HAL_UART_RxCpltCallback
 933              		.syntax unified
 934              		.thumb
 935              		.thumb_func
 937              	HAL_UART_RxCpltCallback:
 938              	.LVL41:
 939              	.LFB75:
 478:Core/Src/main.c **** 
 479:Core/Src/main.c **** 
 480:Core/Src/main.c **** 
 481:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 482:Core/Src/main.c **** {
 940              		.loc 1 482 1 is_stmt 1 view -0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 483:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 484:Core/Src/main.c **** 
 485:Core/Src/main.c **** 	if (huart == &huart1)
 944              		.loc 1 485 2 view .LVU259
 945              		.loc 1 485 5 is_stmt 0 view .LVU260
 946 0000 074B     		ldr	r3, .L80
 947 0002 8342     		cmp	r3, r0
 948 0004 00D0     		beq	.L79
 949 0006 7047     		bx	lr
 950              	.L79:
 482:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 951              		.loc 1 482 1 view .LVU261
 952 0008 10B5     		push	{r4, lr}
 953              	.LCFI5:
 954              		.cfi_def_cfa_offset 8
 955              		.cfi_offset 4, -8
 956              		.cfi_offset 14, -4
 486:Core/Src/main.c **** 	{                      
 487:Core/Src/main.c ****     //seven_segment_display(seven_segment_table[12]);
 488:Core/Src/main.c ****     buffer_push(&rx_buffer,rx_temp);
 957              		.loc 1 488 5 is_stmt 1 view .LVU262
 958 000a 064C     		ldr	r4, .L80+4
 959 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 960 000e 0648     		ldr	r0, .L80+8
 961              	.LVL42:
 962              		.loc 1 488 5 is_stmt 0 view .LVU263
 963 0010 FFF7FEFF 		bl	buffer_push
 964              	.LVL43:
 489:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 965              		.loc 1 489 3 is_stmt 1 view .LVU264
 966 0014 0122     		movs	r2, #1
 967 0016 2146     		mov	r1, r4
 968 0018 0148     		ldr	r0, .L80
 969 001a FFF7FEFF 		bl	HAL_UART_Receive_IT
 970              	.LVL44:
 490:Core/Src/main.c ****     
 491:Core/Src/main.c ****   }
 492:Core/Src/main.c **** }
ARM GAS  /tmp/cciPyXYD.s 			page 29


 971              		.loc 1 492 1 is_stmt 0 view .LVU265
 972 001e 10BD     		pop	{r4, pc}
 973              	.L81:
 974              		.align	2
 975              	.L80:
 976 0020 00000000 		.word	huart1
 977 0024 00000000 		.word	.LANCHOR22
 978 0028 00000000 		.word	.LANCHOR7
 979              		.cfi_endproc
 980              	.LFE75:
 982              		.section	.text.Error_Handler,"ax",%progbits
 983              		.align	1
 984              		.global	Error_Handler
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 989              	Error_Handler:
 990              	.LFB76:
 493:Core/Src/main.c **** /* USER CODE END 4 */
 494:Core/Src/main.c **** 
 495:Core/Src/main.c **** /**
 496:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 497:Core/Src/main.c ****   * @retval None
 498:Core/Src/main.c ****   */
 499:Core/Src/main.c **** void Error_Handler(void)
 500:Core/Src/main.c **** {
 991              		.loc 1 500 1 is_stmt 1 view -0
 992              		.cfi_startproc
 993              		@ Volatile: function does not return.
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
 996              		@ link register save eliminated.
 501:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 502:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 503:Core/Src/main.c ****   __disable_irq();
 997              		.loc 1 503 3 view .LVU267
 998              	.LBB4:
 999              	.LBI4:
 1000              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  /tmp/cciPyXYD.s 			page 30


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/cciPyXYD.s 			page 31


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cciPyXYD.s 			page 32


 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1001              		.loc 2 140 27 view .LVU268
 1002              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1003              		.loc 2 142 3 view .LVU269
 1004              		.syntax unified
 1005              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1006 0000 72B6     		cpsid i
 1007              	@ 0 "" 2
 1008              		.thumb
 1009              		.syntax unified
 1010              	.L83:
 1011              	.LBE5:
 1012              	.LBE4:
 504:Core/Src/main.c ****   while (1)
 1013              		.loc 1 504 3 discriminator 1 view .LVU270
 505:Core/Src/main.c ****   {
 506:Core/Src/main.c ****   }
 1014              		.loc 1 506 3 discriminator 1 view .LVU271
 504:Core/Src/main.c ****   while (1)
 1015              		.loc 1 504 9 discriminator 1 view .LVU272
 1016 0002 FEE7     		b	.L83
 1017              		.cfi_endproc
 1018              	.LFE76:
 1020              		.section	.text.SystemClock_Config,"ax",%progbits
 1021              		.align	1
 1022              		.global	SystemClock_Config
 1023              		.syntax unified
 1024              		.thumb
 1025              		.thumb_func
 1027              	SystemClock_Config:
 1028              	.LFB66:
 198:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1029              		.loc 1 198 1 view -0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 64
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033 0000 00B5     		push	{lr}
 1034              	.LCFI6:
 1035              		.cfi_def_cfa_offset 4
 1036              		.cfi_offset 14, -4
 1037 0002 91B0     		sub	sp, sp, #68
 1038              	.LCFI7:
 1039              		.cfi_def_cfa_offset 72
 199:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1040              		.loc 1 199 3 view .LVU274
 199:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1041              		.loc 1 199 22 is_stmt 0 view .LVU275
 1042 0004 2822     		movs	r2, #40
ARM GAS  /tmp/cciPyXYD.s 			page 33


 1043 0006 0021     		movs	r1, #0
 1044 0008 06A8     		add	r0, sp, #24
 1045 000a FFF7FEFF 		bl	memset
 1046              	.LVL45:
 200:Core/Src/main.c **** 
 1047              		.loc 1 200 3 is_stmt 1 view .LVU276
 200:Core/Src/main.c **** 
 1048              		.loc 1 200 22 is_stmt 0 view .LVU277
 1049 000e 0023     		movs	r3, #0
 1050 0010 0193     		str	r3, [sp, #4]
 1051 0012 0293     		str	r3, [sp, #8]
 1052 0014 0393     		str	r3, [sp, #12]
 1053 0016 0493     		str	r3, [sp, #16]
 1054 0018 0593     		str	r3, [sp, #20]
 205:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1055              		.loc 1 205 3 is_stmt 1 view .LVU278
 205:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1056              		.loc 1 205 36 is_stmt 0 view .LVU279
 1057 001a 0122     		movs	r2, #1
 1058 001c 0692     		str	r2, [sp, #24]
 206:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1059              		.loc 1 206 3 is_stmt 1 view .LVU280
 206:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1060              		.loc 1 206 30 is_stmt 0 view .LVU281
 1061 001e 4FF48033 		mov	r3, #65536
 1062 0022 0793     		str	r3, [sp, #28]
 207:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1063              		.loc 1 207 3 is_stmt 1 view .LVU282
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1064              		.loc 1 208 3 view .LVU283
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1065              		.loc 1 208 30 is_stmt 0 view .LVU284
 1066 0024 0A92     		str	r2, [sp, #40]
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1067              		.loc 1 209 3 is_stmt 1 view .LVU285
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1068              		.loc 1 209 34 is_stmt 0 view .LVU286
 1069 0026 0222     		movs	r2, #2
 1070 0028 0D92     		str	r2, [sp, #52]
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 1071              		.loc 1 210 3 is_stmt 1 view .LVU287
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 1072              		.loc 1 210 35 is_stmt 0 view .LVU288
 1073 002a 0E93     		str	r3, [sp, #56]
 211:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1074              		.loc 1 211 3 is_stmt 1 view .LVU289
 212:Core/Src/main.c ****   {
 1075              		.loc 1 212 3 view .LVU290
 212:Core/Src/main.c ****   {
 1076              		.loc 1 212 7 is_stmt 0 view .LVU291
 1077 002c 06A8     		add	r0, sp, #24
 1078 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1079              	.LVL46:
 212:Core/Src/main.c ****   {
 1080              		.loc 1 212 6 view .LVU292
 1081 0032 88B9     		cbnz	r0, .L88
 219:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/cciPyXYD.s 			page 34


 1082              		.loc 1 219 3 is_stmt 1 view .LVU293
 219:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1083              		.loc 1 219 31 is_stmt 0 view .LVU294
 1084 0034 0F23     		movs	r3, #15
 1085 0036 0193     		str	r3, [sp, #4]
 221:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1086              		.loc 1 221 3 is_stmt 1 view .LVU295
 221:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1087              		.loc 1 221 34 is_stmt 0 view .LVU296
 1088 0038 0223     		movs	r3, #2
 1089 003a 0293     		str	r3, [sp, #8]
 222:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1090              		.loc 1 222 3 is_stmt 1 view .LVU297
 222:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1091              		.loc 1 222 35 is_stmt 0 view .LVU298
 1092 003c 8023     		movs	r3, #128
 1093 003e 0393     		str	r3, [sp, #12]
 223:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1094              		.loc 1 223 3 is_stmt 1 view .LVU299
 223:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1095              		.loc 1 223 36 is_stmt 0 view .LVU300
 1096 0040 4FF48063 		mov	r3, #1024
 1097 0044 0493     		str	r3, [sp, #16]
 224:Core/Src/main.c **** 
 1098              		.loc 1 224 3 is_stmt 1 view .LVU301
 224:Core/Src/main.c **** 
 1099              		.loc 1 224 36 is_stmt 0 view .LVU302
 1100 0046 0021     		movs	r1, #0
 1101 0048 0591     		str	r1, [sp, #20]
 226:Core/Src/main.c ****   {
 1102              		.loc 1 226 3 is_stmt 1 view .LVU303
 226:Core/Src/main.c ****   {
 1103              		.loc 1 226 7 is_stmt 0 view .LVU304
 1104 004a 01A8     		add	r0, sp, #4
 1105 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1106              	.LVL47:
 226:Core/Src/main.c ****   {
 1107              		.loc 1 226 6 view .LVU305
 1108 0050 20B9     		cbnz	r0, .L89
 230:Core/Src/main.c **** 
 1109              		.loc 1 230 1 view .LVU306
 1110 0052 11B0     		add	sp, sp, #68
 1111              	.LCFI8:
 1112              		.cfi_remember_state
 1113              		.cfi_def_cfa_offset 4
 1114              		@ sp needed
 1115 0054 5DF804FB 		ldr	pc, [sp], #4
 1116              	.L88:
 1117              	.LCFI9:
 1118              		.cfi_restore_state
 214:Core/Src/main.c ****   }
 1119              		.loc 1 214 5 is_stmt 1 view .LVU307
 1120 0058 FFF7FEFF 		bl	Error_Handler
 1121              	.LVL48:
 1122              	.L89:
 228:Core/Src/main.c ****   }
 1123              		.loc 1 228 5 view .LVU308
ARM GAS  /tmp/cciPyXYD.s 			page 35


 1124 005c FFF7FEFF 		bl	Error_Handler
 1125              	.LVL49:
 1126              		.cfi_endproc
 1127              	.LFE66:
 1129              		.section	.text.main,"ax",%progbits
 1130              		.align	1
 1131              		.global	main
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1136              	main:
 1137              	.LFB65:
 121:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1138              		.loc 1 121 1 view -0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142 0000 08B5     		push	{r3, lr}
 1143              	.LCFI10:
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 3, -8
 1146              		.cfi_offset 14, -4
 129:Core/Src/main.c **** 
 1147              		.loc 1 129 3 view .LVU310
 1148 0002 FFF7FEFF 		bl	HAL_Init
 1149              	.LVL50:
 136:Core/Src/main.c **** 
 1150              		.loc 1 136 3 view .LVU311
 1151 0006 FFF7FEFF 		bl	SystemClock_Config
 1152              	.LVL51:
 143:Core/Src/main.c ****   MX_TIM1_Init();
 1153              		.loc 1 143 3 view .LVU312
 1154 000a FFF7FEFF 		bl	MX_GPIO_Init
 1155              	.LVL52:
 144:Core/Src/main.c ****   MX_USART1_UART_Init();
 1156              		.loc 1 144 3 view .LVU313
 1157 000e FFF7FEFF 		bl	MX_TIM1_Init
 1158              	.LVL53:
 145:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1159              		.loc 1 145 3 view .LVU314
 1160 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1161              	.LVL54:
 148:Core/Src/main.c **** 
 1162              		.loc 1 148 3 view .LVU315
 1163 0016 1248     		ldr	r0, .L93
 1164 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1165              	.LVL55:
 164:Core/Src/main.c ****   unique_id =(uint16_t *)(0x1FFFF7E8);
 1166              		.loc 1 164 3 view .LVU316
 164:Core/Src/main.c ****   unique_id =(uint16_t *)(0x1FFFF7E8);
 1167              		.loc 1 164 6 is_stmt 0 view .LVU317
 1168 001c 114B     		ldr	r3, .L93+4
 1169 001e FF22     		movs	r2, #255
 1170 0020 1A70     		strb	r2, [r3]
 165:Core/Src/main.c ****   uint32_t rand= COMPUTE_BUILD_SEC*100; 
 1171              		.loc 1 165 3 is_stmt 1 view .LVU318
 165:Core/Src/main.c ****   uint32_t rand= COMPUTE_BUILD_SEC*100; 
ARM GAS  /tmp/cciPyXYD.s 			page 36


 1172              		.loc 1 165 13 is_stmt 0 view .LVU319
 1173 0022 114B     		ldr	r3, .L93+8
 1174 0024 114A     		ldr	r2, .L93+12
 1175 0026 1A60     		str	r2, [r3]
 166:Core/Src/main.c ****   
 1176              		.loc 1 166 3 is_stmt 1 view .LVU320
 1177              	.LVL56:
 168:Core/Src/main.c **** 
 1178              		.loc 1 168 3 view .LVU321
 168:Core/Src/main.c **** 
 1179              		.loc 1 168 9 is_stmt 0 view .LVU322
 1180 0028 114B     		ldr	r3, .L93+16
 1181 002a 0022     		movs	r2, #0
 1182 002c 1A70     		strb	r2, [r3]
 171:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 1183              		.loc 1 171 3 is_stmt 1 view .LVU323
 1184 002e 41F28830 		movw	r0, #5000
 1185 0032 FFF7FEFF 		bl	HAL_Delay
 1186              	.LVL57:
 172:Core/Src/main.c ****   
 1187              		.loc 1 172 3 view .LVU324
 1188 0036 0122     		movs	r2, #1
 1189 0038 0E49     		ldr	r1, .L93+20
 1190 003a 0F48     		ldr	r0, .L93+24
 1191 003c FFF7FEFF 		bl	HAL_UART_Receive_IT
 1192              	.LVL58:
 174:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 1193              		.loc 1 174 3 view .LVU325
 174:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 1194              		.loc 1 174 8 is_stmt 0 view .LVU326
 1195 0040 0E4B     		ldr	r3, .L93+28
 1196 0042 1022     		movs	r2, #16
 1197 0044 1A60     		str	r2, [r3]
 175:Core/Src/main.c ****   while (1)
 1198              		.loc 1 175 3 is_stmt 1 view .LVU327
 1199 0046 0E4B     		ldr	r3, .L93+32
 1200 0048 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 1201 004a FFF7FEFF 		bl	seven_segment_display
 1202              	.LVL59:
 1203              	.L91:
 176:Core/Src/main.c ****   {
 1204              		.loc 1 176 3 discriminator 1 view .LVU328
 183:Core/Src/main.c ****       key_read_task();
 1205              		.loc 1 183 7 discriminator 1 view .LVU329
 1206 004e FFF7FEFF 		bl	task_timer
 1207              	.LVL60:
 184:Core/Src/main.c **** 
 1208              		.loc 1 184 7 discriminator 1 view .LVU330
 1209 0052 FFF7FEFF 		bl	key_read_task
 1210              	.LVL61:
 186:Core/Src/main.c ****       
 1211              		.loc 1 186 7 discriminator 1 view .LVU331
 1212 0056 FFF7FEFF 		bl	RS485_RX_Task
 1213              	.LVL62:
 188:Core/Src/main.c ****   }
 1214              		.loc 1 188 7 discriminator 1 view .LVU332
 1215 005a FFF7FEFF 		bl	main_task
ARM GAS  /tmp/cciPyXYD.s 			page 37


 1216              	.LVL63:
 176:Core/Src/main.c ****   {
 1217              		.loc 1 176 9 discriminator 1 view .LVU333
 1218 005e F6E7     		b	.L91
 1219              	.L94:
 1220              		.align	2
 1221              	.L93:
 1222 0060 00000000 		.word	htim1
 1223 0064 00000000 		.word	.LANCHOR11
 1224 0068 00000000 		.word	.LANCHOR20
 1225 006c E8F7FF1F 		.word	536868840
 1226 0070 00000000 		.word	.LANCHOR18
 1227 0074 00000000 		.word	.LANCHOR22
 1228 0078 00000000 		.word	huart1
 1229 007c 00000000 		.word	.LANCHOR12
 1230 0080 00000000 		.word	.LANCHOR13
 1231              		.cfi_endproc
 1232              	.LFE65:
 1234              		.global	seven_segment_table
 1235              		.global	digit
 1236              		.global	max_digit
 1237              		.global	min_digit
 1238              		.global	event
 1239              		.global	state
 1240              		.global	pTX_msg
 1241              		.global	pRX_msg
 1242              		.global	RX_msg
 1243              		.global	TX_msg
 1244              		.global	ID
 1245              		.global	event_buffer
 1246              		.global	rx_buffer
 1247              		.global	tx_buffer
 1248              		.global	transmission_f
 1249              		.global	rx_temp
 1250              		.global	read_res
 1251              		.global	curr_event
 1252              		.global	key_value
 1253              		.global	d_timer_digit_update
 1254              		.global	f_timer_digit_update
 1255              		.global	d_timer_30ms
 1256              		.global	f_timer_30ms
 1257              		.global	f_timer_10ms
 1258              		.global	f_read_msg
 1259              		.global	f_start_counting
 1260              		.global	f_busy
 1261              		.global	unique_id
 1262              		.section	.bss.ID,"aw",%nobits
 1263              		.set	.LANCHOR11,. + 0
 1266              	ID:
 1267 0000 00       		.space	1
 1268              		.section	.bss.RX_msg,"aw",%nobits
 1269              		.align	2
 1270              		.set	.LANCHOR10,. + 0
 1273              	RX_msg:
 1274 0000 00000000 		.space	4
 1275              		.section	.bss.TX_msg,"aw",%nobits
 1276              		.align	2
ARM GAS  /tmp/cciPyXYD.s 			page 38


 1277              		.set	.LANCHOR16,. + 0
 1280              	TX_msg:
 1281 0000 00000000 		.space	6
 1281      0000
 1282              		.section	.bss.curr_event,"aw",%nobits
 1285              	curr_event:
 1286 0000 00       		.space	1
 1287              		.section	.bss.d_timer_30ms,"aw",%nobits
 1288              		.set	.LANCHOR1,. + 0
 1291              	d_timer_30ms:
 1292 0000 00       		.space	1
 1293              		.section	.bss.d_timer_digit_update,"aw",%nobits
 1294              		.set	.LANCHOR3,. + 0
 1297              	d_timer_digit_update:
 1298 0000 00       		.space	1
 1299              		.section	.bss.digit,"aw",%nobits
 1300              		.align	2
 1301              		.set	.LANCHOR12,. + 0
 1304              	digit:
 1305 0000 00000000 		.space	4
 1306              		.section	.bss.event,"aw",%nobits
 1307              		.set	.LANCHOR17,. + 0
 1310              	event:
 1311 0000 00       		.space	1
 1312              		.section	.bss.event_buffer,"aw",%nobits
 1313              		.align	2
 1314              		.set	.LANCHOR6,. + 0
 1317              	event_buffer:
 1318 0000 00000000 		.space	66
 1318      00000000 
 1318      00000000 
 1318      00000000 
 1318      00000000 
 1319              		.section	.bss.f_busy,"aw",%nobits
 1322              	f_busy:
 1323 0000 00       		.space	1
 1324              		.section	.bss.f_read_msg,"aw",%nobits
 1325              		.set	.LANCHOR8,. + 0
 1328              	f_read_msg:
 1329 0000 00       		.space	1
 1330              		.section	.bss.f_start_counting,"aw",%nobits
 1331              		.set	.LANCHOR21,. + 0
 1334              	f_start_counting:
 1335 0000 00       		.space	1
 1336              		.section	.bss.f_timer_10ms,"aw",%nobits
 1337              		.set	.LANCHOR0,. + 0
 1340              	f_timer_10ms:
 1341 0000 00       		.space	1
 1342              		.section	.bss.f_timer_30ms,"aw",%nobits
 1343              		.set	.LANCHOR2,. + 0
 1346              	f_timer_30ms:
 1347 0000 00       		.space	1
 1348              		.section	.bss.f_timer_digit_update,"aw",%nobits
 1349              		.set	.LANCHOR4,. + 0
 1352              	f_timer_digit_update:
 1353 0000 00       		.space	1
 1354              		.section	.bss.key_value,"aw",%nobits
ARM GAS  /tmp/cciPyXYD.s 			page 39


 1355              		.set	.LANCHOR5,. + 0
 1358              	key_value:
 1359 0000 00       		.space	1
 1360              		.section	.bss.max_digit,"aw",%nobits
 1361              		.set	.LANCHOR15,. + 0
 1364              	max_digit:
 1365 0000 00       		.space	1
 1366              		.section	.bss.min_digit,"aw",%nobits
 1367              		.set	.LANCHOR14,. + 0
 1370              	min_digit:
 1371 0000 00       		.space	1
 1372              		.section	.bss.pRX_msg,"aw",%nobits
 1373              		.align	2
 1374              		.set	.LANCHOR9,. + 0
 1377              	pRX_msg:
 1378 0000 00000000 		.space	4
 1379              		.section	.bss.pTX_msg,"aw",%nobits
 1380              		.align	2
 1381              		.set	.LANCHOR19,. + 0
 1384              	pTX_msg:
 1385 0000 00000000 		.space	4
 1386              		.section	.bss.read_res,"aw",%nobits
 1389              	read_res:
 1390 0000 00       		.space	1
 1391              		.section	.bss.rx_buffer,"aw",%nobits
 1392              		.align	2
 1393              		.set	.LANCHOR7,. + 0
 1396              	rx_buffer:
 1397 0000 00000000 		.space	66
 1397      00000000 
 1397      00000000 
 1397      00000000 
 1397      00000000 
 1398              		.section	.bss.rx_temp,"aw",%nobits
 1399              		.set	.LANCHOR22,. + 0
 1402              	rx_temp:
 1403 0000 00       		.space	1
 1404              		.section	.bss.state,"aw",%nobits
 1405              		.set	.LANCHOR18,. + 0
 1408              	state:
 1409 0000 00       		.space	1
 1410              		.section	.bss.transmission_f,"aw",%nobits
 1413              	transmission_f:
 1414 0000 00       		.space	1
 1415              		.section	.bss.tx_buffer,"aw",%nobits
 1416              		.align	2
 1419              	tx_buffer:
 1420 0000 00000000 		.space	194
 1420      00000000 
 1420      00000000 
 1420      00000000 
 1420      00000000 
 1421              		.section	.bss.unique_id,"aw",%nobits
 1422              		.align	2
 1423              		.set	.LANCHOR20,. + 0
 1426              	unique_id:
 1427 0000 00000000 		.space	4
ARM GAS  /tmp/cciPyXYD.s 			page 40


 1428              		.section	.data.seven_segment_table,"aw"
 1429              		.align	2
 1430              		.set	.LANCHOR13,. + 0
 1433              	seven_segment_table:
 1434 0000 3F065B4F 		.ascii	"?\006[Ofm}\007\177o_|X^{q@"
 1434      666D7D07 
 1434      7F6F5F7C 
 1434      585E7B71 
 1434      40
 1435              		.text
 1436              	.Letext0:
 1437              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1438              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1439              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1440              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1441              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1442              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1443              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1444              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1445              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1446              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1447              		.file 13 "Core/Inc/tim.h"
 1448              		.file 14 "Core/Inc/usart.h"
 1449              		.file 15 "Core/Inc/buffer.h"
 1450              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1451              		.file 17 "Core/Inc/gpio.h"
 1452              		.file 18 "<built-in>"
ARM GAS  /tmp/cciPyXYD.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cciPyXYD.s:18     .text.task_timer:0000000000000000 $t
     /tmp/cciPyXYD.s:24     .text.task_timer:0000000000000000 task_timer
     /tmp/cciPyXYD.s:94     .text.task_timer:0000000000000044 $d
     /tmp/cciPyXYD.s:103    .text.seven_segment_display:0000000000000000 $t
     /tmp/cciPyXYD.s:109    .text.seven_segment_display:0000000000000000 seven_segment_display
     /tmp/cciPyXYD.s:131    .text.seven_segment_display:000000000000000c $d
     /tmp/cciPyXYD.s:136    .text.key_read_task:0000000000000000 $t
     /tmp/cciPyXYD.s:142    .text.key_read_task:0000000000000000 key_read_task
     /tmp/cciPyXYD.s:222    .text.key_read_task:0000000000000048 $d
     /tmp/cciPyXYD.s:230    .text.RS485_RX_Task:0000000000000000 $t
     /tmp/cciPyXYD.s:236    .text.RS485_RX_Task:0000000000000000 RS485_RX_Task
     /tmp/cciPyXYD.s:327    .text.RS485_RX_Task:0000000000000060 $d
     /tmp/cciPyXYD.s:336    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/cciPyXYD.s:342    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/cciPyXYD.s:484    .text.RS485_Read_Message:0000000000000088 $d
     /tmp/cciPyXYD.s:495    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/cciPyXYD.s:501    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/cciPyXYD.s:559    .text.RS485_Send_Message:0000000000000040 $d
     /tmp/cciPyXYD.s:566    .text.main_task:0000000000000000 $t
     /tmp/cciPyXYD.s:572    .text.main_task:0000000000000000 main_task
     /tmp/cciPyXYD.s:735    .text.main_task:00000000000000b6 $d
     /tmp/cciPyXYD.s:874    .text.main_task:0000000000000150 $d
     /tmp/cciPyXYD.s:892    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cciPyXYD.s:898    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cciPyXYD.s:925    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/cciPyXYD.s:931    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cciPyXYD.s:937    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cciPyXYD.s:976    .text.HAL_UART_RxCpltCallback:0000000000000020 $d
     /tmp/cciPyXYD.s:983    .text.Error_Handler:0000000000000000 $t
     /tmp/cciPyXYD.s:989    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cciPyXYD.s:1021   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cciPyXYD.s:1027   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cciPyXYD.s:1130   .text.main:0000000000000000 $t
     /tmp/cciPyXYD.s:1136   .text.main:0000000000000000 main
     /tmp/cciPyXYD.s:1222   .text.main:0000000000000060 $d
     /tmp/cciPyXYD.s:1433   .data.seven_segment_table:0000000000000000 seven_segment_table
     /tmp/cciPyXYD.s:1304   .bss.digit:0000000000000000 digit
     /tmp/cciPyXYD.s:1364   .bss.max_digit:0000000000000000 max_digit
     /tmp/cciPyXYD.s:1370   .bss.min_digit:0000000000000000 min_digit
     /tmp/cciPyXYD.s:1310   .bss.event:0000000000000000 event
     /tmp/cciPyXYD.s:1408   .bss.state:0000000000000000 state
     /tmp/cciPyXYD.s:1384   .bss.pTX_msg:0000000000000000 pTX_msg
     /tmp/cciPyXYD.s:1377   .bss.pRX_msg:0000000000000000 pRX_msg
     /tmp/cciPyXYD.s:1273   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/cciPyXYD.s:1280   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/cciPyXYD.s:1266   .bss.ID:0000000000000000 ID
     /tmp/cciPyXYD.s:1317   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/cciPyXYD.s:1396   .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/cciPyXYD.s:1419   .bss.tx_buffer:0000000000000000 tx_buffer
     /tmp/cciPyXYD.s:1413   .bss.transmission_f:0000000000000000 transmission_f
     /tmp/cciPyXYD.s:1402   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/cciPyXYD.s:1389   .bss.read_res:0000000000000000 read_res
     /tmp/cciPyXYD.s:1285   .bss.curr_event:0000000000000000 curr_event
     /tmp/cciPyXYD.s:1358   .bss.key_value:0000000000000000 key_value
     /tmp/cciPyXYD.s:1297   .bss.d_timer_digit_update:0000000000000000 d_timer_digit_update
ARM GAS  /tmp/cciPyXYD.s 			page 42


     /tmp/cciPyXYD.s:1352   .bss.f_timer_digit_update:0000000000000000 f_timer_digit_update
     /tmp/cciPyXYD.s:1291   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/cciPyXYD.s:1346   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/cciPyXYD.s:1340   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/cciPyXYD.s:1328   .bss.f_read_msg:0000000000000000 f_read_msg
     /tmp/cciPyXYD.s:1334   .bss.f_start_counting:0000000000000000 f_start_counting
     /tmp/cciPyXYD.s:1322   .bss.f_busy:0000000000000000 f_busy
     /tmp/cciPyXYD.s:1426   .bss.unique_id:0000000000000000 unique_id
     /tmp/cciPyXYD.s:1267   .bss.ID:0000000000000000 $d
     /tmp/cciPyXYD.s:1269   .bss.RX_msg:0000000000000000 $d
     /tmp/cciPyXYD.s:1276   .bss.TX_msg:0000000000000000 $d
     /tmp/cciPyXYD.s:1286   .bss.curr_event:0000000000000000 $d
     /tmp/cciPyXYD.s:1292   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/cciPyXYD.s:1298   .bss.d_timer_digit_update:0000000000000000 $d
     /tmp/cciPyXYD.s:1300   .bss.digit:0000000000000000 $d
     /tmp/cciPyXYD.s:1311   .bss.event:0000000000000000 $d
     /tmp/cciPyXYD.s:1313   .bss.event_buffer:0000000000000000 $d
     /tmp/cciPyXYD.s:1323   .bss.f_busy:0000000000000000 $d
     /tmp/cciPyXYD.s:1329   .bss.f_read_msg:0000000000000000 $d
     /tmp/cciPyXYD.s:1335   .bss.f_start_counting:0000000000000000 $d
     /tmp/cciPyXYD.s:1341   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/cciPyXYD.s:1347   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/cciPyXYD.s:1353   .bss.f_timer_digit_update:0000000000000000 $d
     /tmp/cciPyXYD.s:1359   .bss.key_value:0000000000000000 $d
     /tmp/cciPyXYD.s:1365   .bss.max_digit:0000000000000000 $d
     /tmp/cciPyXYD.s:1371   .bss.min_digit:0000000000000000 $d
     /tmp/cciPyXYD.s:1373   .bss.pRX_msg:0000000000000000 $d
     /tmp/cciPyXYD.s:1380   .bss.pTX_msg:0000000000000000 $d
     /tmp/cciPyXYD.s:1390   .bss.read_res:0000000000000000 $d
     /tmp/cciPyXYD.s:1392   .bss.rx_buffer:0000000000000000 $d
     /tmp/cciPyXYD.s:1403   .bss.rx_temp:0000000000000000 $d
     /tmp/cciPyXYD.s:1409   .bss.state:0000000000000000 $d
     /tmp/cciPyXYD.s:1414   .bss.transmission_f:0000000000000000 $d
     /tmp/cciPyXYD.s:1416   .bss.tx_buffer:0000000000000000 $d
     /tmp/cciPyXYD.s:1422   .bss.unique_id:0000000000000000 $d
     /tmp/cciPyXYD.s:1429   .data.seven_segment_table:0000000000000000 $d
     /tmp/cciPyXYD.s:740    .text.main_task:00000000000000bb $d
     /tmp/cciPyXYD.s:740    .text.main_task:00000000000000bc $t

UNDEFINED SYMBOLS
buffer_push
HAL_GPIO_WritePin
HAL_UART_Transmit
huart1
buffer_pop
htim1
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_USART1_UART_Init
HAL_TIM_Base_Start_IT
HAL_Delay
