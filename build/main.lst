ARM GAS  /tmp/ccHRpq50.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.task_timer,"ax",%progbits
  16              		.align	1
  17              		.global	task_timer
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	task_timer:
  25              	.LFB67:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "buffer.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccHRpq50.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** uint16_t* unique_id;
  48:Core/Src/main.c **** uint8_t f_busy;
  49:Core/Src/main.c **** uint8_t f_read_msg;
  50:Core/Src/main.c **** uint8_t f_timer_10ms=0;
  51:Core/Src/main.c **** uint8_t f_timer_30ms=0;
  52:Core/Src/main.c **** uint8_t d_timer_30ms;
  53:Core/Src/main.c **** uint8_t key_value;
  54:Core/Src/main.c **** uint8_t curr_event;
  55:Core/Src/main.c **** //uint8_t bufferEvent[64];
  56:Core/Src/main.c **** uint8_t read_res;
  57:Core/Src/main.c **** uint8_t rx_temp;
  58:Core/Src/main.c **** uint8_t transmission_f;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** buffer_tx_msg tx_buffer;
  61:Core/Src/main.c **** circular_buffer rx_buffer;
  62:Core/Src/main.c **** circular_buffer event_buffer;
  63:Core/Src/main.c **** uint8_t ID;
  64:Core/Src/main.c **** uint8_t TX_msg[6];
  65:Core/Src/main.c **** uint8_t RX_msg[4];
  66:Core/Src/main.c **** uint8_t *pRX_msg;
  67:Core/Src/main.c **** uint8_t *pTX_msg;
  68:Core/Src/main.c **** uint8_t state,event;
  69:Core/Src/main.c **** int digit;
  70:Core/Src/main.c **** uint8_t seven_segment_table[17] = {	0b0111111,	// '0'
  71:Core/Src/main.c **** 		                            	 0b0000110,	// '1'
  72:Core/Src/main.c **** 		   	                           0b1011011,	// '2'
  73:Core/Src/main.c **** 			                             0b1001111,	// '3'
  74:Core/Src/main.c **** 			                             0b1100110,	// '4'
  75:Core/Src/main.c ****                                    0b1101101,	// '5'
  76:Core/Src/main.c ****                                    0b1111101,	// '6'
  77:Core/Src/main.c ****                                    0b0000111,	// '7'
  78:Core/Src/main.c **** 			                             0b1111111,	// '8'
  79:Core/Src/main.c ****                                    0b1101111,	// '9'
  80:Core/Src/main.c ****                                    0b1011111,	// 'a'  --10
  81:Core/Src/main.c ****                                    0b1111100,	// 'b'  --11
  82:Core/Src/main.c **** 			                             0b1011000,	// 'c'  --14
  83:Core/Src/main.c ****                                    0b1011110,	// 'd'  --13
  84:Core/Src/main.c ****                                    0b1111011,	// 'e'	--14
  85:Core/Src/main.c ****                                    0b1110001,	// 'f'  --15
  86:Core/Src/main.c ****                                    0b1000000 	// '-'  --16
  87:Core/Src/main.c **** };
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** 
ARM GAS  /tmp/ccHRpq50.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /* USER CODE END PV */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  94:Core/Src/main.c **** void SystemClock_Config(void);
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  97:Core/Src/main.c **** void RS485_TX_Task(void);
  98:Core/Src/main.c **** void RS485_RX_Task(void);
  99:Core/Src/main.c **** void task_timer(void);
 100:Core/Src/main.c **** void seven_segment_display(char input);
 101:Core/Src/main.c **** void key_read_task(void);
 102:Core/Src/main.c **** void main_task(void);
 103:Core/Src/main.c **** void RS485_Send_Message(void);
 104:Core/Src/main.c **** void RS485_Read_Message(void);
 105:Core/Src/main.c **** /* USER CODE END PFP */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 108:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /* USER CODE END 0 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /**
 113:Core/Src/main.c ****   * @brief  The application entry point.
 114:Core/Src/main.c ****   * @retval int
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c **** int main(void)
 117:Core/Src/main.c **** {
 118:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE END 1 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 125:Core/Src/main.c ****   HAL_Init();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END Init */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Configure the system clock */
 132:Core/Src/main.c ****   SystemClock_Config();
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE END SysInit */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* Initialize all configured peripherals */
 139:Core/Src/main.c ****   MX_GPIO_Init();
 140:Core/Src/main.c ****   MX_TIM1_Init();
 141:Core/Src/main.c ****   MX_USART1_UART_Init();
 142:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 143:Core/Src/main.c ****   
 144:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);  
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****  
ARM GAS  /tmp/ccHRpq50.s 			page 4


 147:Core/Src/main.c ****   /* USER CODE END 2 */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Infinite loop */
 150:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 151:Core/Src/main.c ****   /*
 152:Core/Src/main.c ****   #ifdef SLAVE_1 
 153:Core/Src/main.c ****   ID=0x10;
 154:Core/Src/main.c ****   #endif
 155:Core/Src/main.c ****   #ifdef SLAVE_2
 156:Core/Src/main.c ****   ID=0x12;
 157:Core/Src/main.c ****   #endif
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   ID = 0xFF;
 161:Core/Src/main.c ****   unique_id =(uint16_t *)(0x1FFFF7E8);
 162:Core/Src/main.c ****   uint32_t rand= COMPUTE_BUILD_SEC*100; 
 163:Core/Src/main.c ****   
 164:Core/Src/main.c ****   state = STATE_WAITING_MASTER;
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   
 167:Core/Src/main.c ****   HAL_Delay(rand);
 168:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 169:Core/Src/main.c ****   
 170:Core/Src/main.c ****   digit=16;
 171:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 172:Core/Src/main.c ****   while (1)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     /* USER CODE END WHILE */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 177:Core/Src/main.c ****      
 178:Core/Src/main.c ****      //seven_segment_display(seven_segment_table[0]);
 179:Core/Src/main.c ****       task_timer();
 180:Core/Src/main.c ****       key_read_task();
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****       RS485_RX_Task();
 183:Core/Src/main.c ****       
 184:Core/Src/main.c ****       main_task();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c ****   /* USER CODE END 3 */
 187:Core/Src/main.c **** }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /**
 190:Core/Src/main.c ****   * @brief System Clock Configuration
 191:Core/Src/main.c ****   * @retval None
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c **** void SystemClock_Config(void)
 194:Core/Src/main.c **** {
 195:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 196:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 199:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 202:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 203:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
ARM GAS  /tmp/ccHRpq50.s 			page 5


 204:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 206:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 207:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 208:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 209:Core/Src/main.c ****   {
 210:Core/Src/main.c ****     Error_Handler();
 211:Core/Src/main.c ****   }
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 216:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 217:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 218:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 219:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 220:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     Error_Handler();
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c **** }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** void task_timer(void)
 231:Core/Src/main.c **** {
  27              		.loc 1 231 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 232:Core/Src/main.c ****   if (!f_timer_10ms) return;
  32              		.loc 1 232 3 view .LVU1
  33              		.loc 1 232 7 is_stmt 0 view .LVU2
  34 0000 0A4B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36              		.loc 1 232 6 view .LVU3
  37 0004 4BB1     		cbz	r3, .L1
 233:Core/Src/main.c ****   f_timer_10ms=0;
  38              		.loc 1 233 3 is_stmt 1 view .LVU4
  39              		.loc 1 233 15 is_stmt 0 view .LVU5
  40 0006 094B     		ldr	r3, .L4
  41 0008 0022     		movs	r2, #0
  42 000a 1A70     		strb	r2, [r3]
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   d_timer_30ms++;
  43              		.loc 1 235 3 is_stmt 1 view .LVU6
  44              		.loc 1 235 15 is_stmt 0 view .LVU7
  45 000c 084A     		ldr	r2, .L4+4
  46 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  47 0010 0133     		adds	r3, r3, #1
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 1370     		strb	r3, [r2]
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   if(d_timer_30ms==3){
ARM GAS  /tmp/ccHRpq50.s 			page 6


  50              		.loc 1 237 3 is_stmt 1 view .LVU8
  51              		.loc 1 237 5 is_stmt 0 view .LVU9
  52 0016 032B     		cmp	r3, #3
  53 0018 00D0     		beq	.L3
  54              	.L1:
 238:Core/Src/main.c ****     d_timer_30ms =0;
 239:Core/Src/main.c ****     f_timer_30ms=1;
 240:Core/Src/main.c ****     
 241:Core/Src/main.c ****     
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c ****   
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** }
  55              		.loc 1 245 1 view .LVU10
  56 001a 7047     		bx	lr
  57              	.L3:
 238:Core/Src/main.c ****     d_timer_30ms =0;
  58              		.loc 1 238 5 is_stmt 1 view .LVU11
 238:Core/Src/main.c ****     d_timer_30ms =0;
  59              		.loc 1 238 18 is_stmt 0 view .LVU12
  60 001c 1346     		mov	r3, r2
  61 001e 0022     		movs	r2, #0
  62 0020 1A70     		strb	r2, [r3]
 239:Core/Src/main.c ****     
  63              		.loc 1 239 5 is_stmt 1 view .LVU13
 239:Core/Src/main.c ****     
  64              		.loc 1 239 17 is_stmt 0 view .LVU14
  65 0022 044B     		ldr	r3, .L4+8
  66 0024 0122     		movs	r2, #1
  67 0026 1A70     		strb	r2, [r3]
  68 0028 F7E7     		b	.L1
  69              	.L5:
  70 002a 00BF     		.align	2
  71              	.L4:
  72 002c 00000000 		.word	.LANCHOR0
  73 0030 00000000 		.word	.LANCHOR1
  74 0034 00000000 		.word	.LANCHOR2
  75              		.cfi_endproc
  76              	.LFE67:
  78              		.section	.text.seven_segment_display,"ax",%progbits
  79              		.align	1
  80              		.global	seven_segment_display
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	seven_segment_display:
  87              	.LVL0:
  88              	.LFB68:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** void seven_segment_display(char input)
 248:Core/Src/main.c **** {
  89              		.loc 1 248 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
ARM GAS  /tmp/ccHRpq50.s 			page 7


 249:Core/Src/main.c ****    uint32_t mask =  a_Pin|b_Pin|c_Pin|d_Pin|e_Pin|f_Pin|g_Pin;
  94              		.loc 1 249 4 view .LVU16
 250:Core/Src/main.c ****    uint32_t val = (uint32_t)input & mask;
  95              		.loc 1 250 4 view .LVU17
  96              		.loc 1 250 13 is_stmt 0 view .LVU18
  97 0000 00F07F00 		and	r0, r0, #127
  98              	.LVL1:
 251:Core/Src/main.c ****    SEGMENT_PORT->ODR = val;
  99              		.loc 1 251 4 is_stmt 1 view .LVU19
 100              		.loc 1 251 22 is_stmt 0 view .LVU20
 101 0004 014B     		ldr	r3, .L7
 102 0006 D860     		str	r0, [r3, #12]
 252:Core/Src/main.c **** }
 103              		.loc 1 252 1 view .LVU21
 104 0008 7047     		bx	lr
 105              	.L8:
 106 000a 00BF     		.align	2
 107              	.L7:
 108 000c 00080140 		.word	1073809408
 109              		.cfi_endproc
 110              	.LFE68:
 112              		.section	.text.key_read_task,"ax",%progbits
 113              		.align	1
 114              		.global	key_read_task
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu softvfp
 120              	key_read_task:
 121              	.LFB69:
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** void key_read_task(void)
 255:Core/Src/main.c **** {
 122              		.loc 1 255 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126 0000 08B5     		push	{r3, lr}
 127              	.LCFI0:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 3, -8
 130              		.cfi_offset 14, -4
 256:Core/Src/main.c ****   if(!f_timer_30ms) return;
 131              		.loc 1 256 3 view .LVU23
 132              		.loc 1 256 6 is_stmt 0 view .LVU24
 133 0002 0E4B     		ldr	r3, .L13
 134 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 135              		.loc 1 256 5 view .LVU25
 136 0006 93B1     		cbz	r3, .L9
 257:Core/Src/main.c ****   f_timer_30ms =0; 
 137              		.loc 1 257 3 is_stmt 1 view .LVU26
 138              		.loc 1 257 16 is_stmt 0 view .LVU27
 139 0008 0C4B     		ldr	r3, .L13
 140 000a 0022     		movs	r2, #0
 141 000c 1A70     		strb	r2, [r3]
 258:Core/Src/main.c ****    
 259:Core/Src/main.c ****  
ARM GAS  /tmp/ccHRpq50.s 			page 8


 260:Core/Src/main.c ****   unsigned char key_pindata = (uint8_t)(key_GPIO_Port->IDR & key_Pin);
 142              		.loc 1 260 3 is_stmt 1 view .LVU28
 143              		.loc 1 260 54 is_stmt 0 view .LVU29
 144 000e 0C4B     		ldr	r3, .L13+4
 145 0010 9A68     		ldr	r2, [r3, #8]
 146              	.LVL2:
 261:Core/Src/main.c ****  
 262:Core/Src/main.c ****   key_value = key_value<<1;
 147              		.loc 1 262 3 is_stmt 1 view .LVU30
 148              		.loc 1 262 24 is_stmt 0 view .LVU31
 149 0012 0C49     		ldr	r1, .L13+8
 150 0014 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 151 0016 5B00     		lsls	r3, r3, #1
 152 0018 DBB2     		uxtb	r3, r3
 153              		.loc 1 262 13 view .LVU32
 154 001a 0B70     		strb	r3, [r1]
 263:Core/Src/main.c ****   key_value &= 0b00001110;
 155              		.loc 1 263 3 is_stmt 1 view .LVU33
 156              		.loc 1 263 13 is_stmt 0 view .LVU34
 157 001c 03F00E03 		and	r3, r3, #14
 158 0020 0B70     		strb	r3, [r1]
 264:Core/Src/main.c ****   key_value |= key_pindata&0X1;
 159              		.loc 1 264 3 is_stmt 1 view .LVU35
 160              		.loc 1 264 27 is_stmt 0 view .LVU36
 161 0022 02F00102 		and	r2, r2, #1
 162              	.LVL3:
 163              		.loc 1 264 13 view .LVU37
 164 0026 1343     		orrs	r3, r3, r2
 165 0028 0B70     		strb	r3, [r1]
 265:Core/Src/main.c ****  
 266:Core/Src/main.c ****   if (key_value==KEY_PRESSED){
 166              		.loc 1 266 3 is_stmt 1 view .LVU38
 167              		.loc 1 266 6 is_stmt 0 view .LVU39
 168 002a 0C2B     		cmp	r3, #12
 169 002c 00D0     		beq	.L12
 170              	.L9:
 267:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 268:Core/Src/main.c ****       
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** }
 171              		.loc 1 271 1 view .LVU40
 172 002e 08BD     		pop	{r3, pc}
 173              	.L12:
 267:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 174              		.loc 1 267 7 is_stmt 1 view .LVU41
 175 0030 0121     		movs	r1, #1
 176 0032 0548     		ldr	r0, .L13+12
 177 0034 FFF7FEFF 		bl	buffer_push
 178              	.LVL4:
 179 0038 F9E7     		b	.L9
 180              	.L14:
 181 003a 00BF     		.align	2
 182              	.L13:
 183 003c 00000000 		.word	.LANCHOR2
 184 0040 000C0140 		.word	1073810432
 185 0044 00000000 		.word	.LANCHOR3
ARM GAS  /tmp/ccHRpq50.s 			page 9


 186 0048 00000000 		.word	.LANCHOR4
 187              		.cfi_endproc
 188              	.LFE69:
 190              		.section	.text.RS485_RX_Task,"ax",%progbits
 191              		.align	1
 192              		.global	RS485_RX_Task
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu softvfp
 198              	RS485_RX_Task:
 199              	.LFB71:
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** void main_task(void)
 274:Core/Src/main.c **** {
 275:Core/Src/main.c ****   	if (event_buffer.head!=event_buffer.tail){
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** 		  event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   }
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   switch (state)
 284:Core/Src/main.c ****   {
 285:Core/Src/main.c ****   case STATE_WAITING_MASTER:
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****     if (event == EVENT_RX_COMPLETE){
 288:Core/Src/main.c ****      // seven_segment_display(seven_segment_table[10]);
 289:Core/Src/main.c ****       RS485_Read_Message();
 290:Core/Src/main.c ****       event=EVENT_RESET;
 291:Core/Src/main.c ****     }
 292:Core/Src/main.c ****     else if(event == EVENT_MASTER_FOUND){
 293:Core/Src/main.c ****        // seven_segment_display(seven_segment_table[11]);
 294:Core/Src/main.c ****         pTX_msg = &TX_msg[1];
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****         *pTX_msg++ = ID;
 297:Core/Src/main.c ****         ID = (uint8_t)(*unique_id&0xFF);
 298:Core/Src/main.c ****         *pTX_msg++ = FUNC_FIND_SLAVE;
 299:Core/Src/main.c ****         *pTX_msg++ = ID;
 300:Core/Src/main.c ****         RS485_Send_Message();
 301:Core/Src/main.c ****         event = EVENT_RESET;
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****         state = STATE_OPERATION;
 304:Core/Src/main.c ****     }
 305:Core/Src/main.c ****     break;
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   case STATE_OPERATION:
 309:Core/Src/main.c ****     switch (event)
 310:Core/Src/main.c ****     {
 311:Core/Src/main.c ****     case EVENT_KEY_PRESSED:
 312:Core/Src/main.c ****       digit=(digit+1)>9? 0 :digit+1;
 313:Core/Src/main.c ****       seven_segment_display(seven_segment_table[digit]);
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****       event=EVENT_RESET;
 316:Core/Src/main.c ****       break;
ARM GAS  /tmp/ccHRpq50.s 			page 10


 317:Core/Src/main.c ****     
 318:Core/Src/main.c ****     case EVENT_RX_COMPLETE:
 319:Core/Src/main.c ****       RS485_Read_Message();
 320:Core/Src/main.c ****       event=EVENT_RESET;
 321:Core/Src/main.c ****       break;
 322:Core/Src/main.c ****     case EVENT_DATA_REQUEST:
 323:Core/Src/main.c ****         
 324:Core/Src/main.c ****         pTX_msg = &TX_msg[1];
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****         *pTX_msg++ = ID;
 327:Core/Src/main.c ****         *pTX_msg++ = FUNC_READ;
 328:Core/Src/main.c ****         *pTX_msg++ = digit+'0';
 329:Core/Src/main.c ****         RS485_Send_Message();
 330:Core/Src/main.c ****         event = EVENT_RESET;
 331:Core/Src/main.c ****       break;
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****     case EVENT_DATA_WRITE:
 334:Core/Src/main.c ****         
 335:Core/Src/main.c ****         pTX_msg = &TX_msg[1];
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****         *pTX_msg++ = ID;
 338:Core/Src/main.c ****         *pTX_msg++ = FUNC_WRITE;
 339:Core/Src/main.c ****         *pTX_msg++ = '0';
 340:Core/Src/main.c ****         RS485_Send_Message();
 341:Core/Src/main.c ****         event = EVENT_RESET;
 342:Core/Src/main.c ****       break;
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****     }
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****     break;
 347:Core/Src/main.c ****  
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** 
 355:Core/Src/main.c **** void RS485_RX_Task(void)
 356:Core/Src/main.c **** {
 200              		.loc 1 356 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 08B5     		push	{r3, lr}
 205              	.LCFI1:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 357:Core/Src/main.c **** 	
 358:Core/Src/main.c **** 	if (rx_buffer.tail==rx_buffer.head) return;
 209              		.loc 1 358 2 view .LVU43
 210              		.loc 1 358 15 is_stmt 0 view .LVU44
 211 0002 174A     		ldr	r2, .L23
 212 0004 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 213              		.loc 1 358 31 view .LVU45
 214 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  /tmp/ccHRpq50.s 			page 11


 215              		.loc 1 358 5 view .LVU46
 216 0008 9942     		cmp	r1, r3
 217 000a 20D0     		beq	.L15
 359:Core/Src/main.c **** 	
 360:Core/Src/main.c **** 	
 361:Core/Src/main.c **** 	if (rx_buffer.data[rx_buffer.tail]==SOF)
 218              		.loc 1 361 2 is_stmt 1 view .LVU47
 219              		.loc 1 361 20 is_stmt 0 view .LVU48
 220 000c 1346     		mov	r3, r2
 221 000e 0B44     		add	r3, r3, r1
 222 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 223              		.loc 1 361 5 view .LVU49
 224 0012 022B     		cmp	r3, #2
 225 0014 0AD0     		beq	.L21
 362:Core/Src/main.c **** 	{
 363:Core/Src/main.c **** 		f_read_msg =1;
 364:Core/Src/main.c **** 		pRX_msg = RX_msg;
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** 	}else if(rx_buffer.data[rx_buffer.tail]==EOF)
 226              		.loc 1 366 8 is_stmt 1 view .LVU50
 227              		.loc 1 366 10 is_stmt 0 view .LVU51
 228 0016 032B     		cmp	r3, #3
 229 0018 1AD0     		beq	.L22
 367:Core/Src/main.c **** 	{
 368:Core/Src/main.c **** 		f_read_msg =0;
 369:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 370:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 371:Core/Src/main.c **** 	}else{
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** 		if (f_read_msg){
 230              		.loc 1 373 3 is_stmt 1 view .LVU52
 231              		.loc 1 373 7 is_stmt 0 view .LVU53
 232 001a 124A     		ldr	r2, .L23+4
 233 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 234              		.loc 1 373 6 view .LVU54
 235 001e 5AB1     		cbz	r2, .L18
 374:Core/Src/main.c **** 			*pRX_msg++=rx_buffer.data[rx_buffer.tail];
 236              		.loc 1 374 4 is_stmt 1 view .LVU55
 237              		.loc 1 374 12 is_stmt 0 view .LVU56
 238 0020 1149     		ldr	r1, .L23+8
 239 0022 0A68     		ldr	r2, [r1]
 240 0024 501C     		adds	r0, r2, #1
 241 0026 0860     		str	r0, [r1]
 242              		.loc 1 374 14 view .LVU57
 243 0028 1370     		strb	r3, [r2]
 244 002a 05E0     		b	.L18
 245              	.L21:
 363:Core/Src/main.c **** 		pRX_msg = RX_msg;
 246              		.loc 1 363 3 is_stmt 1 view .LVU58
 363:Core/Src/main.c **** 		pRX_msg = RX_msg;
 247              		.loc 1 363 14 is_stmt 0 view .LVU59
 248 002c 0D4B     		ldr	r3, .L23+4
 249 002e 0122     		movs	r2, #1
 250 0030 1A70     		strb	r2, [r3]
 364:Core/Src/main.c **** 
 251              		.loc 1 364 3 is_stmt 1 view .LVU60
 364:Core/Src/main.c **** 
ARM GAS  /tmp/ccHRpq50.s 			page 12


 252              		.loc 1 364 11 is_stmt 0 view .LVU61
 253 0032 0D4B     		ldr	r3, .L23+8
 254 0034 0D4A     		ldr	r2, .L23+12
 255 0036 1A60     		str	r2, [r3]
 256              	.L18:
 375:Core/Src/main.c **** 		}	
 376:Core/Src/main.c **** 	}
 377:Core/Src/main.c **** 	rx_buffer.tail = (rx_buffer.tail+1)%BUFFER_SIZE;
 257              		.loc 1 377 2 is_stmt 1 view .LVU62
 258              		.loc 1 377 29 is_stmt 0 view .LVU63
 259 0038 0949     		ldr	r1, .L23
 260 003a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 261              		.loc 1 377 34 view .LVU64
 262 003c 0133     		adds	r3, r3, #1
 263              		.loc 1 377 37 view .LVU65
 264 003e 5A42     		rsbs	r2, r3, #0
 265 0040 03F03F03 		and	r3, r3, #63
 266 0044 02F03F02 		and	r2, r2, #63
 267 0048 58BF     		it	pl
 268 004a 5342     		rsbpl	r3, r2, #0
 269              		.loc 1 377 17 view .LVU66
 270 004c 4B70     		strb	r3, [r1, #1]
 271              	.L15:
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** }
 272              		.loc 1 379 1 view .LVU67
 273 004e 08BD     		pop	{r3, pc}
 274              	.L22:
 368:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 275              		.loc 1 368 3 is_stmt 1 view .LVU68
 368:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 276              		.loc 1 368 14 is_stmt 0 view .LVU69
 277 0050 044B     		ldr	r3, .L23+4
 278 0052 0022     		movs	r2, #0
 279 0054 1A70     		strb	r2, [r3]
 369:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 280              		.loc 1 369 5 is_stmt 1 view .LVU70
 281 0056 0321     		movs	r1, #3
 282 0058 0548     		ldr	r0, .L23+16
 283 005a FFF7FEFF 		bl	buffer_push
 284              	.LVL5:
 285 005e EBE7     		b	.L18
 286              	.L24:
 287              		.align	2
 288              	.L23:
 289 0060 00000000 		.word	.LANCHOR5
 290 0064 00000000 		.word	.LANCHOR6
 291 0068 00000000 		.word	.LANCHOR7
 292 006c 00000000 		.word	.LANCHOR8
 293 0070 00000000 		.word	.LANCHOR4
 294              		.cfi_endproc
 295              	.LFE71:
 297              		.section	.text.RS485_Read_Message,"ax",%progbits
 298              		.align	1
 299              		.global	RS485_Read_Message
 300              		.syntax unified
 301              		.thumb
ARM GAS  /tmp/ccHRpq50.s 			page 13


 302              		.thumb_func
 303              		.fpu softvfp
 305              	RS485_Read_Message:
 306              	.LFB72:
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** 
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** void RS485_Read_Message(void){
 307              		.loc 1 386 30 view -0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311 0000 08B5     		push	{r3, lr}
 312              	.LCFI2:
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 3, -8
 315              		.cfi_offset 14, -4
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   uint8_t checksum = 0;
 316              		.loc 1 388 3 view .LVU72
 317              	.LVL6:
 389:Core/Src/main.c ****   
 390:Core/Src/main.c **** 	checksum = checksum^RX_msg[0]^RX_msg[1]^RX_msg[2];
 318              		.loc 1 390 2 view .LVU73
 319              		.loc 1 390 28 is_stmt 0 view .LVU74
 320 0002 174B     		ldr	r3, .L33
 321 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 322              		.loc 1 390 38 view .LVU75
 323 0006 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 324              		.loc 1 390 48 view .LVU76
 325 0008 93F802C0 		ldrb	ip, [r3, #2]	@ zero_extendqisi2
 326              		.loc 1 390 11 view .LVU77
 327 000c 80EA0102 		eor	r2, r0, r1
 328 0010 8CEA0202 		eor	r2, ip, r2
 329              	.LVL7:
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   //if (rx_buffer.tail==rx_buffer.head) return;
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   if (!(checksum== RX_msg[3]))
 330              		.loc 1 394 3 is_stmt 1 view .LVU78
 331              		.loc 1 394 26 is_stmt 0 view .LVU79
 332 0014 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 333              		.loc 1 394 6 view .LVU80
 334 0016 9342     		cmp	r3, r2
 335 0018 09D1     		bne	.L25
 395:Core/Src/main.c **** 	{
 396:Core/Src/main.c ****      return;
 397:Core/Src/main.c **** 
 398:Core/Src/main.c **** 	}
 399:Core/Src/main.c ****   
 400:Core/Src/main.c ****   if (RX_msg[0]!= ID) return;
 336              		.loc 1 400 3 is_stmt 1 view .LVU81
 337              		.loc 1 400 16 is_stmt 0 view .LVU82
 338 001a 124B     		ldr	r3, .L33+4
ARM GAS  /tmp/ccHRpq50.s 			page 14


 339 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 340              		.loc 1 400 6 view .LVU83
 341 001e 9842     		cmp	r0, r3
 342 0020 05D1     		bne	.L25
 401:Core/Src/main.c ****   
 402:Core/Src/main.c ****   if (RX_msg[1] == FUNC_WRITE)
 343              		.loc 1 402 3 is_stmt 1 view .LVU84
 344              		.loc 1 402 6 is_stmt 0 view .LVU85
 345 0022 F129     		cmp	r1, #241
 346 0024 04D0     		beq	.L30
 403:Core/Src/main.c ****   {    
 404:Core/Src/main.c ****          digit = RX_msg[2]-'0';
 405:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 406:Core/Src/main.c ****          buffer_push(&event_buffer, EVENT_DATA_WRITE);
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   }else if (RX_msg[1] == FUNC_READ){
 347              		.loc 1 408 9 is_stmt 1 view .LVU86
 348              		.loc 1 408 12 is_stmt 0 view .LVU87
 349 0026 F229     		cmp	r1, #242
 350 0028 0FD0     		beq	.L31
 409:Core/Src/main.c ****          
 410:Core/Src/main.c ****         buffer_push(&event_buffer, EVENT_DATA_REQUEST);
 411:Core/Src/main.c ****         //RS485_Send_Message();
 412:Core/Src/main.c ****   
 413:Core/Src/main.c ****   }else if(RX_msg[1]== FUNC_FIND_SLAVE){
 351              		.loc 1 413 9 is_stmt 1 view .LVU88
 352              		.loc 1 413 11 is_stmt 0 view .LVU89
 353 002a F429     		cmp	r1, #244
 354 002c 12D0     		beq	.L32
 355              	.LVL8:
 356              	.L25:
 414:Core/Src/main.c ****        buffer_push(&event_buffer, EVENT_MASTER_FOUND);
 415:Core/Src/main.c ****   }
 416:Core/Src/main.c **** }
 357              		.loc 1 416 1 view .LVU90
 358 002e 08BD     		pop	{r3, pc}
 359              	.LVL9:
 360              	.L30:
 404:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 361              		.loc 1 404 10 is_stmt 1 view .LVU91
 404:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 362              		.loc 1 404 27 is_stmt 0 view .LVU92
 363 0030 ACF13003 		sub	r3, ip, #48
 404:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 364              		.loc 1 404 16 view .LVU93
 365 0034 0C4A     		ldr	r2, .L33+8
 366              	.LVL10:
 404:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 367              		.loc 1 404 16 view .LVU94
 368 0036 1360     		str	r3, [r2]
 405:Core/Src/main.c ****          buffer_push(&event_buffer, EVENT_DATA_WRITE);
 369              		.loc 1 405 10 is_stmt 1 view .LVU95
 370 0038 0C4A     		ldr	r2, .L33+12
 371 003a D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 372              	.LVL11:
 405:Core/Src/main.c ****          buffer_push(&event_buffer, EVENT_DATA_WRITE);
 373              		.loc 1 405 10 is_stmt 0 view .LVU96
ARM GAS  /tmp/ccHRpq50.s 			page 15


 374 003c FFF7FEFF 		bl	seven_segment_display
 375              	.LVL12:
 406:Core/Src/main.c **** 
 376              		.loc 1 406 10 is_stmt 1 view .LVU97
 377 0040 0521     		movs	r1, #5
 378 0042 0B48     		ldr	r0, .L33+16
 379 0044 FFF7FEFF 		bl	buffer_push
 380              	.LVL13:
 381 0048 F1E7     		b	.L25
 382              	.LVL14:
 383              	.L31:
 410:Core/Src/main.c ****         //RS485_Send_Message();
 384              		.loc 1 410 9 view .LVU98
 385 004a 0421     		movs	r1, #4
 386 004c 0848     		ldr	r0, .L33+16
 387 004e FFF7FEFF 		bl	buffer_push
 388              	.LVL15:
 410:Core/Src/main.c ****         //RS485_Send_Message();
 389              		.loc 1 410 9 is_stmt 0 view .LVU99
 390 0052 ECE7     		b	.L25
 391              	.LVL16:
 392              	.L32:
 414:Core/Src/main.c ****   }
 393              		.loc 1 414 8 is_stmt 1 view .LVU100
 394 0054 0621     		movs	r1, #6
 395 0056 0648     		ldr	r0, .L33+16
 396 0058 FFF7FEFF 		bl	buffer_push
 397              	.LVL17:
 414:Core/Src/main.c ****   }
 398              		.loc 1 414 8 is_stmt 0 view .LVU101
 399 005c E7E7     		b	.L25
 400              	.L34:
 401 005e 00BF     		.align	2
 402              	.L33:
 403 0060 00000000 		.word	.LANCHOR8
 404 0064 00000000 		.word	.LANCHOR9
 405 0068 00000000 		.word	.LANCHOR10
 406 006c 00000000 		.word	.LANCHOR11
 407 0070 00000000 		.word	.LANCHOR4
 408              		.cfi_endproc
 409              	.LFE72:
 411              		.section	.text.RS485_Send_Message,"ax",%progbits
 412              		.align	1
 413              		.global	RS485_Send_Message
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu softvfp
 419              	RS485_Send_Message:
 420              	.LFB73:
 417:Core/Src/main.c **** 
 418:Core/Src/main.c **** void RS485_Send_Message(void)
 419:Core/Src/main.c **** {
 421              		.loc 1 419 1 is_stmt 1 view -0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccHRpq50.s 			page 16


 425 0000 38B5     		push	{r3, r4, r5, lr}
 426              	.LCFI3:
 427              		.cfi_def_cfa_offset 16
 428              		.cfi_offset 3, -16
 429              		.cfi_offset 4, -12
 430              		.cfi_offset 5, -8
 431              		.cfi_offset 14, -4
 420:Core/Src/main.c **** 	
 421:Core/Src/main.c **** 	TX_msg[0] = SOF;
 432              		.loc 1 421 2 view .LVU103
 433              		.loc 1 421 12 is_stmt 0 view .LVU104
 434 0002 0F4C     		ldr	r4, .L37
 435 0004 0223     		movs	r3, #2
 436 0006 2370     		strb	r3, [r4]
 422:Core/Src/main.c ****   TX_msg[4] = (((0x00^TX_msg[1])^TX_msg[2])^TX_msg[3]);    // checksum  // checksum
 437              		.loc 1 422 3 is_stmt 1 view .LVU105
 438              		.loc 1 422 29 is_stmt 0 view .LVU106
 439 0008 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 440              		.loc 1 422 40 view .LVU107
 441 000a A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 442              		.loc 1 422 51 view .LVU108
 443 000c E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 444              		.loc 1 422 13 view .LVU109
 445 000e 4A40     		eors	r2, r2, r1
 446 0010 5340     		eors	r3, r3, r2
 447 0012 2371     		strb	r3, [r4, #4]
 423:Core/Src/main.c **** 	TX_msg[5] = EOF;
 448              		.loc 1 423 2 is_stmt 1 view .LVU110
 449              		.loc 1 423 12 is_stmt 0 view .LVU111
 450 0014 0323     		movs	r3, #3
 451 0016 6371     		strb	r3, [r4, #5]
 424:Core/Src/main.c **** 
 425:Core/Src/main.c **** 	// uint8_t *pbuf_tx = (uint8_t *)&msg;
 426:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX_EN_GPIO_Port, TX_EN_Pin, 1); /// Enable Transmitter Mode
 452              		.loc 1 426 2 is_stmt 1 view .LVU112
 453 0018 0A4D     		ldr	r5, .L37+4
 454 001a 0122     		movs	r2, #1
 455 001c 4FF48071 		mov	r1, #256
 456 0020 2846     		mov	r0, r5
 457 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 458              	.LVL18:
 427:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, TX_msg, sizeof(TX_msg), 10);
 459              		.loc 1 427 2 view .LVU113
 460 0026 0A23     		movs	r3, #10
 461 0028 0622     		movs	r2, #6
 462 002a 2146     		mov	r1, r4
 463 002c 0648     		ldr	r0, .L37+8
 464 002e FFF7FEFF 		bl	HAL_UART_Transmit
 465              	.LVL19:
 428:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX_EN_GPIO_Port, TX_EN_Pin, 0); /// Enable Receiver Mode
 466              		.loc 1 428 2 view .LVU114
 467 0032 0022     		movs	r2, #0
 468 0034 4FF48071 		mov	r1, #256
 469 0038 2846     		mov	r0, r5
 470 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 471              	.LVL20:
 429:Core/Src/main.c **** }
ARM GAS  /tmp/ccHRpq50.s 			page 17


 472              		.loc 1 429 1 is_stmt 0 view .LVU115
 473 003e 38BD     		pop	{r3, r4, r5, pc}
 474              	.L38:
 475              		.align	2
 476              	.L37:
 477 0040 00000000 		.word	.LANCHOR12
 478 0044 00080140 		.word	1073809408
 479 0048 00000000 		.word	huart1
 480              		.cfi_endproc
 481              	.LFE73:
 483              		.section	.text.main_task,"ax",%progbits
 484              		.align	1
 485              		.global	main_task
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu softvfp
 491              	main_task:
 492              	.LFB70:
 274:Core/Src/main.c ****   	if (event_buffer.head!=event_buffer.tail){
 493              		.loc 1 274 1 is_stmt 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497 0000 08B5     		push	{r3, lr}
 498              	.LCFI4:
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 3, -8
 501              		.cfi_offset 14, -4
 275:Core/Src/main.c **** 
 502              		.loc 1 275 4 view .LVU117
 275:Core/Src/main.c **** 
 503              		.loc 1 275 20 is_stmt 0 view .LVU118
 504 0002 4A4B     		ldr	r3, .L55
 505 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 275:Core/Src/main.c **** 
 506              		.loc 1 275 39 view .LVU119
 507 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 275:Core/Src/main.c **** 
 508              		.loc 1 275 7 view .LVU120
 509 0008 9A42     		cmp	r2, r3
 510 000a 05D1     		bne	.L53
 511              	.L40:
 283:Core/Src/main.c ****   {
 512              		.loc 1 283 3 is_stmt 1 view .LVU121
 513 000c 484B     		ldr	r3, .L55+4
 514 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 515 0010 43B1     		cbz	r3, .L41
 516 0012 012B     		cmp	r3, #1
 517 0014 2FD0     		beq	.L42
 518              	.L39:
 352:Core/Src/main.c **** 
 519              		.loc 1 352 1 is_stmt 0 view .LVU122
 520 0016 08BD     		pop	{r3, pc}
 521              	.L53:
 277:Core/Src/main.c **** 
 522              		.loc 1 277 5 is_stmt 1 view .LVU123
ARM GAS  /tmp/ccHRpq50.s 			page 18


 277:Core/Src/main.c **** 
 523              		.loc 1 277 13 is_stmt 0 view .LVU124
 524 0018 4448     		ldr	r0, .L55
 525 001a FFF7FEFF 		bl	buffer_pop
 526              	.LVL21:
 277:Core/Src/main.c **** 
 527              		.loc 1 277 11 view .LVU125
 528 001e 454B     		ldr	r3, .L55+8
 529 0020 1870     		strb	r0, [r3]
 530 0022 F3E7     		b	.L40
 531              	.L41:
 287:Core/Src/main.c ****      // seven_segment_display(seven_segment_table[10]);
 532              		.loc 1 287 5 is_stmt 1 view .LVU126
 287:Core/Src/main.c ****      // seven_segment_display(seven_segment_table[10]);
 533              		.loc 1 287 15 is_stmt 0 view .LVU127
 534 0024 434B     		ldr	r3, .L55+8
 535 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287:Core/Src/main.c ****      // seven_segment_display(seven_segment_table[10]);
 536              		.loc 1 287 8 view .LVU128
 537 0028 032B     		cmp	r3, #3
 538 002a 1ED0     		beq	.L54
 292:Core/Src/main.c ****        // seven_segment_display(seven_segment_table[11]);
 539              		.loc 1 292 10 is_stmt 1 view .LVU129
 292:Core/Src/main.c ****        // seven_segment_display(seven_segment_table[11]);
 540              		.loc 1 292 12 is_stmt 0 view .LVU130
 541 002c 062B     		cmp	r3, #6
 542 002e F2D1     		bne	.L39
 294:Core/Src/main.c **** 
 543              		.loc 1 294 9 is_stmt 1 view .LVU131
 294:Core/Src/main.c **** 
 544              		.loc 1 294 17 is_stmt 0 view .LVU132
 545 0030 414A     		ldr	r2, .L55+12
 546 0032 424B     		ldr	r3, .L55+16
 547 0034 591C     		adds	r1, r3, #1
 548 0036 1160     		str	r1, [r2]
 296:Core/Src/main.c ****         ID = (uint8_t)(*unique_id&0xFF);
 549              		.loc 1 296 9 is_stmt 1 view .LVU133
 296:Core/Src/main.c ****         ID = (uint8_t)(*unique_id&0xFF);
 550              		.loc 1 296 17 is_stmt 0 view .LVU134
 551 0038 991C     		adds	r1, r3, #2
 552 003a 1160     		str	r1, [r2]
 296:Core/Src/main.c ****         ID = (uint8_t)(*unique_id&0xFF);
 553              		.loc 1 296 20 view .LVU135
 554 003c 4048     		ldr	r0, .L55+20
 555 003e 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 556 0040 5970     		strb	r1, [r3, #1]
 297:Core/Src/main.c ****         *pTX_msg++ = FUNC_FIND_SLAVE;
 557              		.loc 1 297 9 is_stmt 1 view .LVU136
 297:Core/Src/main.c ****         *pTX_msg++ = FUNC_FIND_SLAVE;
 558              		.loc 1 297 24 is_stmt 0 view .LVU137
 559 0042 4049     		ldr	r1, .L55+24
 560 0044 0968     		ldr	r1, [r1]
 297:Core/Src/main.c ****         *pTX_msg++ = FUNC_FIND_SLAVE;
 561              		.loc 1 297 14 view .LVU138
 562 0046 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 297:Core/Src/main.c ****         *pTX_msg++ = FUNC_FIND_SLAVE;
 563              		.loc 1 297 12 view .LVU139
ARM GAS  /tmp/ccHRpq50.s 			page 19


 564 0048 0170     		strb	r1, [r0]
 298:Core/Src/main.c ****         *pTX_msg++ = ID;
 565              		.loc 1 298 9 is_stmt 1 view .LVU140
 298:Core/Src/main.c ****         *pTX_msg++ = ID;
 566              		.loc 1 298 17 is_stmt 0 view .LVU141
 567 004a D81C     		adds	r0, r3, #3
 568 004c 1060     		str	r0, [r2]
 298:Core/Src/main.c ****         *pTX_msg++ = ID;
 569              		.loc 1 298 20 view .LVU142
 570 004e F420     		movs	r0, #244
 571 0050 9870     		strb	r0, [r3, #2]
 299:Core/Src/main.c ****         RS485_Send_Message();
 572              		.loc 1 299 9 is_stmt 1 view .LVU143
 299:Core/Src/main.c ****         RS485_Send_Message();
 573              		.loc 1 299 17 is_stmt 0 view .LVU144
 574 0052 181D     		adds	r0, r3, #4
 575 0054 1060     		str	r0, [r2]
 299:Core/Src/main.c ****         RS485_Send_Message();
 576              		.loc 1 299 20 view .LVU145
 577 0056 D970     		strb	r1, [r3, #3]
 300:Core/Src/main.c ****         event = EVENT_RESET;
 578              		.loc 1 300 9 is_stmt 1 view .LVU146
 579 0058 FFF7FEFF 		bl	RS485_Send_Message
 580              	.LVL22:
 301:Core/Src/main.c **** 
 581              		.loc 1 301 9 view .LVU147
 301:Core/Src/main.c **** 
 582              		.loc 1 301 15 is_stmt 0 view .LVU148
 583 005c 354B     		ldr	r3, .L55+8
 584 005e 0022     		movs	r2, #0
 585 0060 1A70     		strb	r2, [r3]
 303:Core/Src/main.c ****     }
 586              		.loc 1 303 9 is_stmt 1 view .LVU149
 303:Core/Src/main.c ****     }
 587              		.loc 1 303 15 is_stmt 0 view .LVU150
 588 0062 334B     		ldr	r3, .L55+4
 589 0064 0122     		movs	r2, #1
 590 0066 1A70     		strb	r2, [r3]
 591 0068 D5E7     		b	.L39
 592              	.L54:
 289:Core/Src/main.c ****       event=EVENT_RESET;
 593              		.loc 1 289 7 is_stmt 1 view .LVU151
 594 006a FFF7FEFF 		bl	RS485_Read_Message
 595              	.LVL23:
 290:Core/Src/main.c ****     }
 596              		.loc 1 290 7 view .LVU152
 290:Core/Src/main.c ****     }
 597              		.loc 1 290 12 is_stmt 0 view .LVU153
 598 006e 314B     		ldr	r3, .L55+8
 599 0070 0022     		movs	r2, #0
 600 0072 1A70     		strb	r2, [r3]
 601 0074 CFE7     		b	.L39
 602              	.L42:
 309:Core/Src/main.c ****     {
 603              		.loc 1 309 5 is_stmt 1 view .LVU154
 604 0076 2F4B     		ldr	r3, .L55+8
 605 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccHRpq50.s 			page 20


 606 007a 013B     		subs	r3, r3, #1
 607 007c 042B     		cmp	r3, #4
 608 007e CAD8     		bhi	.L39
 609 0080 01A2     		adr	r2, .L46
 610 0082 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 611 0086 00BF     		.p2align 2
 612              	.L46:
 613 0088 9D000000 		.word	.L49+1
 614 008c 17000000 		.word	.L39+1
 615 0090 BF000000 		.word	.L48+1
 616 0094 CB000000 		.word	.L47+1
 617 0098 FF000000 		.word	.L45+1
 618              		.p2align 1
 619              	.L49:
 312:Core/Src/main.c ****       seven_segment_display(seven_segment_table[digit]);
 620              		.loc 1 312 7 view .LVU155
 312:Core/Src/main.c ****       seven_segment_display(seven_segment_table[digit]);
 621              		.loc 1 312 22 is_stmt 0 view .LVU156
 622 009c 2A4B     		ldr	r3, .L55+28
 623 009e 1B68     		ldr	r3, [r3]
 312:Core/Src/main.c ****       seven_segment_display(seven_segment_table[digit]);
 624              		.loc 1 312 28 view .LVU157
 625 00a0 082B     		cmp	r3, #8
 626 00a2 0ADC     		bgt	.L51
 312:Core/Src/main.c ****       seven_segment_display(seven_segment_table[digit]);
 627              		.loc 1 312 28 discriminator 1 view .LVU158
 628 00a4 0133     		adds	r3, r3, #1
 629              	.L50:
 312:Core/Src/main.c ****       seven_segment_display(seven_segment_table[digit]);
 630              		.loc 1 312 12 discriminator 4 view .LVU159
 631 00a6 284A     		ldr	r2, .L55+28
 632 00a8 1360     		str	r3, [r2]
 313:Core/Src/main.c **** 
 633              		.loc 1 313 7 is_stmt 1 discriminator 4 view .LVU160
 634 00aa 284A     		ldr	r2, .L55+32
 635 00ac D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 636 00ae FFF7FEFF 		bl	seven_segment_display
 637              	.LVL24:
 315:Core/Src/main.c ****       break;
 638              		.loc 1 315 7 discriminator 4 view .LVU161
 315:Core/Src/main.c ****       break;
 639              		.loc 1 315 12 is_stmt 0 discriminator 4 view .LVU162
 640 00b2 204B     		ldr	r3, .L55+8
 641 00b4 0022     		movs	r2, #0
 642 00b6 1A70     		strb	r2, [r3]
 316:Core/Src/main.c ****     
 643              		.loc 1 316 7 is_stmt 1 discriminator 4 view .LVU163
 644 00b8 ADE7     		b	.L39
 645              	.L51:
 312:Core/Src/main.c ****       seven_segment_display(seven_segment_table[digit]);
 646              		.loc 1 312 28 is_stmt 0 view .LVU164
 647 00ba 0023     		movs	r3, #0
 648 00bc F3E7     		b	.L50
 649              	.L48:
 319:Core/Src/main.c ****       event=EVENT_RESET;
 650              		.loc 1 319 7 is_stmt 1 view .LVU165
 651 00be FFF7FEFF 		bl	RS485_Read_Message
ARM GAS  /tmp/ccHRpq50.s 			page 21


 652              	.LVL25:
 320:Core/Src/main.c ****       break;
 653              		.loc 1 320 7 view .LVU166
 320:Core/Src/main.c ****       break;
 654              		.loc 1 320 12 is_stmt 0 view .LVU167
 655 00c2 1C4B     		ldr	r3, .L55+8
 656 00c4 0022     		movs	r2, #0
 657 00c6 1A70     		strb	r2, [r3]
 321:Core/Src/main.c ****     case EVENT_DATA_REQUEST:
 658              		.loc 1 321 7 is_stmt 1 view .LVU168
 659 00c8 A5E7     		b	.L39
 660              	.L47:
 324:Core/Src/main.c **** 
 661              		.loc 1 324 9 view .LVU169
 324:Core/Src/main.c **** 
 662              		.loc 1 324 17 is_stmt 0 view .LVU170
 663 00ca 1B4A     		ldr	r2, .L55+12
 664 00cc 1B4B     		ldr	r3, .L55+16
 665 00ce 591C     		adds	r1, r3, #1
 666 00d0 1160     		str	r1, [r2]
 326:Core/Src/main.c ****         *pTX_msg++ = FUNC_READ;
 667              		.loc 1 326 9 is_stmt 1 view .LVU171
 326:Core/Src/main.c ****         *pTX_msg++ = FUNC_READ;
 668              		.loc 1 326 17 is_stmt 0 view .LVU172
 669 00d2 991C     		adds	r1, r3, #2
 670 00d4 1160     		str	r1, [r2]
 326:Core/Src/main.c ****         *pTX_msg++ = FUNC_READ;
 671              		.loc 1 326 20 view .LVU173
 672 00d6 1A49     		ldr	r1, .L55+20
 673 00d8 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 674 00da 5970     		strb	r1, [r3, #1]
 327:Core/Src/main.c ****         *pTX_msg++ = digit+'0';
 675              		.loc 1 327 9 is_stmt 1 view .LVU174
 327:Core/Src/main.c ****         *pTX_msg++ = digit+'0';
 676              		.loc 1 327 17 is_stmt 0 view .LVU175
 677 00dc D91C     		adds	r1, r3, #3
 678 00de 1160     		str	r1, [r2]
 327:Core/Src/main.c ****         *pTX_msg++ = digit+'0';
 679              		.loc 1 327 20 view .LVU176
 680 00e0 F221     		movs	r1, #242
 681 00e2 9970     		strb	r1, [r3, #2]
 328:Core/Src/main.c ****         RS485_Send_Message();
 682              		.loc 1 328 9 is_stmt 1 view .LVU177
 328:Core/Src/main.c ****         RS485_Send_Message();
 683              		.loc 1 328 27 is_stmt 0 view .LVU178
 684 00e4 1849     		ldr	r1, .L55+28
 685 00e6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 328:Core/Src/main.c ****         RS485_Send_Message();
 686              		.loc 1 328 17 view .LVU179
 687 00e8 181D     		adds	r0, r3, #4
 688 00ea 1060     		str	r0, [r2]
 328:Core/Src/main.c ****         RS485_Send_Message();
 689              		.loc 1 328 27 view .LVU180
 690 00ec 01F13002 		add	r2, r1, #48
 328:Core/Src/main.c ****         RS485_Send_Message();
 691              		.loc 1 328 20 view .LVU181
 692 00f0 DA70     		strb	r2, [r3, #3]
ARM GAS  /tmp/ccHRpq50.s 			page 22


 329:Core/Src/main.c ****         event = EVENT_RESET;
 693              		.loc 1 329 9 is_stmt 1 view .LVU182
 694 00f2 FFF7FEFF 		bl	RS485_Send_Message
 695              	.LVL26:
 330:Core/Src/main.c ****       break;
 696              		.loc 1 330 9 view .LVU183
 330:Core/Src/main.c ****       break;
 697              		.loc 1 330 15 is_stmt 0 view .LVU184
 698 00f6 0F4B     		ldr	r3, .L55+8
 699 00f8 0022     		movs	r2, #0
 700 00fa 1A70     		strb	r2, [r3]
 331:Core/Src/main.c **** 
 701              		.loc 1 331 7 is_stmt 1 view .LVU185
 702 00fc 8BE7     		b	.L39
 703              	.L45:
 335:Core/Src/main.c **** 
 704              		.loc 1 335 9 view .LVU186
 335:Core/Src/main.c **** 
 705              		.loc 1 335 17 is_stmt 0 view .LVU187
 706 00fe 0E4A     		ldr	r2, .L55+12
 707 0100 0E4B     		ldr	r3, .L55+16
 708 0102 591C     		adds	r1, r3, #1
 709 0104 1160     		str	r1, [r2]
 337:Core/Src/main.c ****         *pTX_msg++ = FUNC_WRITE;
 710              		.loc 1 337 9 is_stmt 1 view .LVU188
 337:Core/Src/main.c ****         *pTX_msg++ = FUNC_WRITE;
 711              		.loc 1 337 17 is_stmt 0 view .LVU189
 712 0106 991C     		adds	r1, r3, #2
 713 0108 1160     		str	r1, [r2]
 337:Core/Src/main.c ****         *pTX_msg++ = FUNC_WRITE;
 714              		.loc 1 337 20 view .LVU190
 715 010a 0D49     		ldr	r1, .L55+20
 716 010c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 717 010e 5970     		strb	r1, [r3, #1]
 338:Core/Src/main.c ****         *pTX_msg++ = '0';
 718              		.loc 1 338 9 is_stmt 1 view .LVU191
 338:Core/Src/main.c ****         *pTX_msg++ = '0';
 719              		.loc 1 338 17 is_stmt 0 view .LVU192
 720 0110 D91C     		adds	r1, r3, #3
 721 0112 1160     		str	r1, [r2]
 338:Core/Src/main.c ****         *pTX_msg++ = '0';
 722              		.loc 1 338 20 view .LVU193
 723 0114 F121     		movs	r1, #241
 724 0116 9970     		strb	r1, [r3, #2]
 339:Core/Src/main.c ****         RS485_Send_Message();
 725              		.loc 1 339 9 is_stmt 1 view .LVU194
 339:Core/Src/main.c ****         RS485_Send_Message();
 726              		.loc 1 339 17 is_stmt 0 view .LVU195
 727 0118 191D     		adds	r1, r3, #4
 728 011a 1160     		str	r1, [r2]
 339:Core/Src/main.c ****         RS485_Send_Message();
 729              		.loc 1 339 20 view .LVU196
 730 011c 3022     		movs	r2, #48
 731 011e DA70     		strb	r2, [r3, #3]
 340:Core/Src/main.c ****         event = EVENT_RESET;
 732              		.loc 1 340 9 is_stmt 1 view .LVU197
 733 0120 FFF7FEFF 		bl	RS485_Send_Message
ARM GAS  /tmp/ccHRpq50.s 			page 23


 734              	.LVL27:
 341:Core/Src/main.c ****       break;
 735              		.loc 1 341 9 view .LVU198
 341:Core/Src/main.c ****       break;
 736              		.loc 1 341 15 is_stmt 0 view .LVU199
 737 0124 034B     		ldr	r3, .L55+8
 738 0126 0022     		movs	r2, #0
 739 0128 1A70     		strb	r2, [r3]
 342:Core/Src/main.c **** 
 740              		.loc 1 342 7 is_stmt 1 view .LVU200
 352:Core/Src/main.c **** 
 741              		.loc 1 352 1 is_stmt 0 view .LVU201
 742 012a 74E7     		b	.L39
 743              	.L56:
 744              		.align	2
 745              	.L55:
 746 012c 00000000 		.word	.LANCHOR4
 747 0130 00000000 		.word	.LANCHOR14
 748 0134 00000000 		.word	.LANCHOR13
 749 0138 00000000 		.word	.LANCHOR15
 750 013c 00000000 		.word	.LANCHOR12
 751 0140 00000000 		.word	.LANCHOR9
 752 0144 00000000 		.word	.LANCHOR16
 753 0148 00000000 		.word	.LANCHOR10
 754 014c 00000000 		.word	.LANCHOR11
 755              		.cfi_endproc
 756              	.LFE70:
 758              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 759              		.align	1
 760              		.global	HAL_TIM_PeriodElapsedCallback
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu softvfp
 766              	HAL_TIM_PeriodElapsedCallback:
 767              	.LVL28:
 768              	.LFB74:
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 432:Core/Src/main.c **** {
 769              		.loc 1 432 1 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 433:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
 434:Core/Src/main.c ****   if (htim == &htim1)
 774              		.loc 1 434 3 view .LVU203
 775              		.loc 1 434 6 is_stmt 0 view .LVU204
 776 0000 034B     		ldr	r3, .L60
 777 0002 8342     		cmp	r3, r0
 778 0004 00D0     		beq	.L59
 779              	.L57:
 435:Core/Src/main.c ****   {
 436:Core/Src/main.c **** 	  f_timer_10ms=1;
 437:Core/Src/main.c ****   }
 438:Core/Src/main.c ****   
ARM GAS  /tmp/ccHRpq50.s 			page 24


 439:Core/Src/main.c **** }
 780              		.loc 1 439 1 view .LVU205
 781 0006 7047     		bx	lr
 782              	.L59:
 436:Core/Src/main.c ****   }
 783              		.loc 1 436 4 is_stmt 1 view .LVU206
 436:Core/Src/main.c ****   }
 784              		.loc 1 436 16 is_stmt 0 view .LVU207
 785 0008 024B     		ldr	r3, .L60+4
 786 000a 0122     		movs	r2, #1
 787 000c 1A70     		strb	r2, [r3]
 788              		.loc 1 439 1 view .LVU208
 789 000e FAE7     		b	.L57
 790              	.L61:
 791              		.align	2
 792              	.L60:
 793 0010 00000000 		.word	htim1
 794 0014 00000000 		.word	.LANCHOR0
 795              		.cfi_endproc
 796              	.LFE74:
 798              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 799              		.align	1
 800              		.global	HAL_UART_RxCpltCallback
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu softvfp
 806              	HAL_UART_RxCpltCallback:
 807              	.LVL29:
 808              	.LFB75:
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** 
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 444:Core/Src/main.c **** {
 809              		.loc 1 444 1 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 445:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** 	if (huart == &huart1)
 813              		.loc 1 447 2 view .LVU210
 814              		.loc 1 447 5 is_stmt 0 view .LVU211
 815 0000 074B     		ldr	r3, .L69
 816 0002 8342     		cmp	r3, r0
 817 0004 00D0     		beq	.L68
 818 0006 7047     		bx	lr
 819              	.L68:
 444:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 820              		.loc 1 444 1 view .LVU212
 821 0008 10B5     		push	{r4, lr}
 822              	.LCFI5:
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 4, -8
 825              		.cfi_offset 14, -4
 448:Core/Src/main.c **** 	{                      
ARM GAS  /tmp/ccHRpq50.s 			page 25


 449:Core/Src/main.c ****     //seven_segment_display(seven_segment_table[12]);
 450:Core/Src/main.c ****     buffer_push(&rx_buffer,rx_temp);
 826              		.loc 1 450 5 is_stmt 1 view .LVU213
 827 000a 064C     		ldr	r4, .L69+4
 828 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 829 000e 0648     		ldr	r0, .L69+8
 830              	.LVL30:
 831              		.loc 1 450 5 is_stmt 0 view .LVU214
 832 0010 FFF7FEFF 		bl	buffer_push
 833              	.LVL31:
 451:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 834              		.loc 1 451 3 is_stmt 1 view .LVU215
 835 0014 0122     		movs	r2, #1
 836 0016 2146     		mov	r1, r4
 837 0018 0148     		ldr	r0, .L69
 838 001a FFF7FEFF 		bl	HAL_UART_Receive_IT
 839              	.LVL32:
 452:Core/Src/main.c ****     
 453:Core/Src/main.c ****   }
 454:Core/Src/main.c **** }
 840              		.loc 1 454 1 is_stmt 0 view .LVU216
 841 001e 10BD     		pop	{r4, pc}
 842              	.L70:
 843              		.align	2
 844              	.L69:
 845 0020 00000000 		.word	huart1
 846 0024 00000000 		.word	.LANCHOR17
 847 0028 00000000 		.word	.LANCHOR5
 848              		.cfi_endproc
 849              	.LFE75:
 851              		.section	.text.Error_Handler,"ax",%progbits
 852              		.align	1
 853              		.global	Error_Handler
 854              		.syntax unified
 855              		.thumb
 856              		.thumb_func
 857              		.fpu softvfp
 859              	Error_Handler:
 860              	.LFB76:
 455:Core/Src/main.c **** /* USER CODE END 4 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c **** /**
 458:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 459:Core/Src/main.c ****   * @retval None
 460:Core/Src/main.c ****   */
 461:Core/Src/main.c **** void Error_Handler(void)
 462:Core/Src/main.c **** {
 861              		.loc 1 462 1 is_stmt 1 view -0
 862              		.cfi_startproc
 863              		@ Volatile: function does not return.
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              		@ link register save eliminated.
 463:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 464:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 465:Core/Src/main.c ****   __disable_irq();
 867              		.loc 1 465 3 view .LVU218
ARM GAS  /tmp/ccHRpq50.s 			page 26


 868              	.LBB4:
 869              	.LBI4:
 870              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccHRpq50.s 			page 27


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  /tmp/ccHRpq50.s 			page 28


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 871              		.loc 2 140 27 view .LVU219
 872              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 873              		.loc 2 142 3 view .LVU220
 874              		.syntax unified
 875              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 876 0000 72B6     		cpsid i
 877              	@ 0 "" 2
 878              		.thumb
 879              		.syntax unified
 880              	.L72:
 881              	.LBE5:
 882              	.LBE4:
 466:Core/Src/main.c ****   while (1)
 883              		.loc 1 466 3 discriminator 1 view .LVU221
 467:Core/Src/main.c ****   {
 468:Core/Src/main.c ****   }
 884              		.loc 1 468 3 discriminator 1 view .LVU222
 466:Core/Src/main.c ****   while (1)
 885              		.loc 1 466 9 discriminator 1 view .LVU223
 886 0002 FEE7     		b	.L72
 887              		.cfi_endproc
 888              	.LFE76:
 890              		.section	.text.SystemClock_Config,"ax",%progbits
 891              		.align	1
 892              		.global	SystemClock_Config
 893              		.syntax unified
ARM GAS  /tmp/ccHRpq50.s 			page 29


 894              		.thumb
 895              		.thumb_func
 896              		.fpu softvfp
 898              	SystemClock_Config:
 899              	.LFB66:
 194:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 900              		.loc 1 194 1 view -0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 64
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904 0000 00B5     		push	{lr}
 905              	.LCFI6:
 906              		.cfi_def_cfa_offset 4
 907              		.cfi_offset 14, -4
 908 0002 91B0     		sub	sp, sp, #68
 909              	.LCFI7:
 910              		.cfi_def_cfa_offset 72
 195:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 911              		.loc 1 195 3 view .LVU225
 195:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 912              		.loc 1 195 22 is_stmt 0 view .LVU226
 913 0004 2822     		movs	r2, #40
 914 0006 0021     		movs	r1, #0
 915 0008 06A8     		add	r0, sp, #24
 916 000a FFF7FEFF 		bl	memset
 917              	.LVL33:
 196:Core/Src/main.c **** 
 918              		.loc 1 196 3 is_stmt 1 view .LVU227
 196:Core/Src/main.c **** 
 919              		.loc 1 196 22 is_stmt 0 view .LVU228
 920 000e 0023     		movs	r3, #0
 921 0010 0193     		str	r3, [sp, #4]
 922 0012 0293     		str	r3, [sp, #8]
 923 0014 0393     		str	r3, [sp, #12]
 924 0016 0493     		str	r3, [sp, #16]
 925 0018 0593     		str	r3, [sp, #20]
 201:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 926              		.loc 1 201 3 is_stmt 1 view .LVU229
 201:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 927              		.loc 1 201 36 is_stmt 0 view .LVU230
 928 001a 0122     		movs	r2, #1
 929 001c 0692     		str	r2, [sp, #24]
 202:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 930              		.loc 1 202 3 is_stmt 1 view .LVU231
 202:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 931              		.loc 1 202 30 is_stmt 0 view .LVU232
 932 001e 4FF48033 		mov	r3, #65536
 933 0022 0793     		str	r3, [sp, #28]
 203:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 934              		.loc 1 203 3 is_stmt 1 view .LVU233
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 935              		.loc 1 204 3 view .LVU234
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 936              		.loc 1 204 30 is_stmt 0 view .LVU235
 937 0024 0A92     		str	r2, [sp, #40]
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 938              		.loc 1 205 3 is_stmt 1 view .LVU236
ARM GAS  /tmp/ccHRpq50.s 			page 30


 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 939              		.loc 1 205 34 is_stmt 0 view .LVU237
 940 0026 0222     		movs	r2, #2
 941 0028 0D92     		str	r2, [sp, #52]
 206:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 942              		.loc 1 206 3 is_stmt 1 view .LVU238
 206:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 943              		.loc 1 206 35 is_stmt 0 view .LVU239
 944 002a 0E93     		str	r3, [sp, #56]
 207:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 945              		.loc 1 207 3 is_stmt 1 view .LVU240
 208:Core/Src/main.c ****   {
 946              		.loc 1 208 3 view .LVU241
 208:Core/Src/main.c ****   {
 947              		.loc 1 208 7 is_stmt 0 view .LVU242
 948 002c 06A8     		add	r0, sp, #24
 949 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 950              	.LVL34:
 208:Core/Src/main.c ****   {
 951              		.loc 1 208 6 view .LVU243
 952 0032 88B9     		cbnz	r0, .L77
 215:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 953              		.loc 1 215 3 is_stmt 1 view .LVU244
 215:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 954              		.loc 1 215 31 is_stmt 0 view .LVU245
 955 0034 0F23     		movs	r3, #15
 956 0036 0193     		str	r3, [sp, #4]
 217:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 957              		.loc 1 217 3 is_stmt 1 view .LVU246
 217:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 958              		.loc 1 217 34 is_stmt 0 view .LVU247
 959 0038 0223     		movs	r3, #2
 960 003a 0293     		str	r3, [sp, #8]
 218:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 961              		.loc 1 218 3 is_stmt 1 view .LVU248
 218:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 962              		.loc 1 218 35 is_stmt 0 view .LVU249
 963 003c 8023     		movs	r3, #128
 964 003e 0393     		str	r3, [sp, #12]
 219:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 965              		.loc 1 219 3 is_stmt 1 view .LVU250
 219:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 966              		.loc 1 219 36 is_stmt 0 view .LVU251
 967 0040 4FF48063 		mov	r3, #1024
 968 0044 0493     		str	r3, [sp, #16]
 220:Core/Src/main.c **** 
 969              		.loc 1 220 3 is_stmt 1 view .LVU252
 220:Core/Src/main.c **** 
 970              		.loc 1 220 36 is_stmt 0 view .LVU253
 971 0046 0021     		movs	r1, #0
 972 0048 0591     		str	r1, [sp, #20]
 222:Core/Src/main.c ****   {
 973              		.loc 1 222 3 is_stmt 1 view .LVU254
 222:Core/Src/main.c ****   {
 974              		.loc 1 222 7 is_stmt 0 view .LVU255
 975 004a 01A8     		add	r0, sp, #4
 976 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  /tmp/ccHRpq50.s 			page 31


 977              	.LVL35:
 222:Core/Src/main.c ****   {
 978              		.loc 1 222 6 view .LVU256
 979 0050 20B9     		cbnz	r0, .L78
 226:Core/Src/main.c **** 
 980              		.loc 1 226 1 view .LVU257
 981 0052 11B0     		add	sp, sp, #68
 982              	.LCFI8:
 983              		.cfi_remember_state
 984              		.cfi_def_cfa_offset 4
 985              		@ sp needed
 986 0054 5DF804FB 		ldr	pc, [sp], #4
 987              	.L77:
 988              	.LCFI9:
 989              		.cfi_restore_state
 210:Core/Src/main.c ****   }
 990              		.loc 1 210 5 is_stmt 1 view .LVU258
 991 0058 FFF7FEFF 		bl	Error_Handler
 992              	.LVL36:
 993              	.L78:
 224:Core/Src/main.c ****   }
 994              		.loc 1 224 5 view .LVU259
 995 005c FFF7FEFF 		bl	Error_Handler
 996              	.LVL37:
 997              		.cfi_endproc
 998              	.LFE66:
 1000              		.section	.text.main,"ax",%progbits
 1001              		.align	1
 1002              		.global	main
 1003              		.syntax unified
 1004              		.thumb
 1005              		.thumb_func
 1006              		.fpu softvfp
 1008              	main:
 1009              	.LFB65:
 117:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1010              		.loc 1 117 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014 0000 08B5     		push	{r3, lr}
 1015              	.LCFI10:
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 3, -8
 1018              		.cfi_offset 14, -4
 125:Core/Src/main.c **** 
 1019              		.loc 1 125 3 view .LVU261
 1020 0002 FFF7FEFF 		bl	HAL_Init
 1021              	.LVL38:
 132:Core/Src/main.c **** 
 1022              		.loc 1 132 3 view .LVU262
 1023 0006 FFF7FEFF 		bl	SystemClock_Config
 1024              	.LVL39:
 139:Core/Src/main.c ****   MX_TIM1_Init();
 1025              		.loc 1 139 3 view .LVU263
 1026 000a FFF7FEFF 		bl	MX_GPIO_Init
 1027              	.LVL40:
ARM GAS  /tmp/ccHRpq50.s 			page 32


 140:Core/Src/main.c ****   MX_USART1_UART_Init();
 1028              		.loc 1 140 3 view .LVU264
 1029 000e FFF7FEFF 		bl	MX_TIM1_Init
 1030              	.LVL41:
 141:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1031              		.loc 1 141 3 view .LVU265
 1032 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1033              	.LVL42:
 144:Core/Src/main.c **** 
 1034              		.loc 1 144 3 view .LVU266
 1035 0016 1248     		ldr	r0, .L82
 1036 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1037              	.LVL43:
 160:Core/Src/main.c ****   unique_id =(uint16_t *)(0x1FFFF7E8);
 1038              		.loc 1 160 3 view .LVU267
 160:Core/Src/main.c ****   unique_id =(uint16_t *)(0x1FFFF7E8);
 1039              		.loc 1 160 6 is_stmt 0 view .LVU268
 1040 001c 114B     		ldr	r3, .L82+4
 1041 001e FF22     		movs	r2, #255
 1042 0020 1A70     		strb	r2, [r3]
 161:Core/Src/main.c ****   uint32_t rand= COMPUTE_BUILD_SEC*100; 
 1043              		.loc 1 161 3 is_stmt 1 view .LVU269
 161:Core/Src/main.c ****   uint32_t rand= COMPUTE_BUILD_SEC*100; 
 1044              		.loc 1 161 13 is_stmt 0 view .LVU270
 1045 0022 114B     		ldr	r3, .L82+8
 1046 0024 114A     		ldr	r2, .L82+12
 1047 0026 1A60     		str	r2, [r3]
 162:Core/Src/main.c ****   
 1048              		.loc 1 162 3 is_stmt 1 view .LVU271
 1049              	.LVL44:
 164:Core/Src/main.c **** 
 1050              		.loc 1 164 3 view .LVU272
 164:Core/Src/main.c **** 
 1051              		.loc 1 164 9 is_stmt 0 view .LVU273
 1052 0028 114B     		ldr	r3, .L82+16
 1053 002a 0022     		movs	r2, #0
 1054 002c 1A70     		strb	r2, [r3]
 167:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 1055              		.loc 1 167 3 is_stmt 1 view .LVU274
 1056 002e 40F24C40 		movw	r0, #1100
 1057 0032 FFF7FEFF 		bl	HAL_Delay
 1058              	.LVL45:
 168:Core/Src/main.c ****   
 1059              		.loc 1 168 3 view .LVU275
 1060 0036 0122     		movs	r2, #1
 1061 0038 0E49     		ldr	r1, .L82+20
 1062 003a 0F48     		ldr	r0, .L82+24
 1063 003c FFF7FEFF 		bl	HAL_UART_Receive_IT
 1064              	.LVL46:
 170:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 1065              		.loc 1 170 3 view .LVU276
 170:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 1066              		.loc 1 170 8 is_stmt 0 view .LVU277
 1067 0040 0E4B     		ldr	r3, .L82+28
 1068 0042 1022     		movs	r2, #16
 1069 0044 1A60     		str	r2, [r3]
 171:Core/Src/main.c ****   while (1)
ARM GAS  /tmp/ccHRpq50.s 			page 33


 1070              		.loc 1 171 3 is_stmt 1 view .LVU278
 1071 0046 0E4B     		ldr	r3, .L82+32
 1072 0048 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 1073 004a FFF7FEFF 		bl	seven_segment_display
 1074              	.LVL47:
 1075              	.L80:
 172:Core/Src/main.c ****   {
 1076              		.loc 1 172 3 discriminator 1 view .LVU279
 179:Core/Src/main.c ****       key_read_task();
 1077              		.loc 1 179 7 discriminator 1 view .LVU280
 1078 004e FFF7FEFF 		bl	task_timer
 1079              	.LVL48:
 180:Core/Src/main.c **** 
 1080              		.loc 1 180 7 discriminator 1 view .LVU281
 1081 0052 FFF7FEFF 		bl	key_read_task
 1082              	.LVL49:
 182:Core/Src/main.c ****       
 1083              		.loc 1 182 7 discriminator 1 view .LVU282
 1084 0056 FFF7FEFF 		bl	RS485_RX_Task
 1085              	.LVL50:
 184:Core/Src/main.c ****   }
 1086              		.loc 1 184 7 discriminator 1 view .LVU283
 1087 005a FFF7FEFF 		bl	main_task
 1088              	.LVL51:
 172:Core/Src/main.c ****   {
 1089              		.loc 1 172 9 discriminator 1 view .LVU284
 1090 005e F6E7     		b	.L80
 1091              	.L83:
 1092              		.align	2
 1093              	.L82:
 1094 0060 00000000 		.word	htim1
 1095 0064 00000000 		.word	.LANCHOR9
 1096 0068 00000000 		.word	.LANCHOR16
 1097 006c E8F7FF1F 		.word	536868840
 1098 0070 00000000 		.word	.LANCHOR14
 1099 0074 00000000 		.word	.LANCHOR17
 1100 0078 00000000 		.word	huart1
 1101 007c 00000000 		.word	.LANCHOR10
 1102 0080 00000000 		.word	.LANCHOR11
 1103              		.cfi_endproc
 1104              	.LFE65:
 1106              		.global	seven_segment_table
 1107              		.global	digit
 1108              		.global	event
 1109              		.global	state
 1110              		.global	pTX_msg
 1111              		.global	pRX_msg
 1112              		.global	RX_msg
 1113              		.global	TX_msg
 1114              		.global	ID
 1115              		.global	event_buffer
 1116              		.global	rx_buffer
 1117              		.global	tx_buffer
 1118              		.global	transmission_f
 1119              		.global	rx_temp
 1120              		.global	read_res
 1121              		.global	curr_event
ARM GAS  /tmp/ccHRpq50.s 			page 34


 1122              		.global	key_value
 1123              		.global	d_timer_30ms
 1124              		.global	f_timer_30ms
 1125              		.global	f_timer_10ms
 1126              		.global	f_read_msg
 1127              		.global	f_busy
 1128              		.global	unique_id
 1129              		.section	.bss.ID,"aw",%nobits
 1130              		.set	.LANCHOR9,. + 0
 1133              	ID:
 1134 0000 00       		.space	1
 1135              		.section	.bss.RX_msg,"aw",%nobits
 1136              		.align	2
 1137              		.set	.LANCHOR8,. + 0
 1140              	RX_msg:
 1141 0000 00000000 		.space	4
 1142              		.section	.bss.TX_msg,"aw",%nobits
 1143              		.align	2
 1144              		.set	.LANCHOR12,. + 0
 1147              	TX_msg:
 1148 0000 00000000 		.space	6
 1148      0000
 1149              		.section	.bss.curr_event,"aw",%nobits
 1152              	curr_event:
 1153 0000 00       		.space	1
 1154              		.section	.bss.d_timer_30ms,"aw",%nobits
 1155              		.set	.LANCHOR1,. + 0
 1158              	d_timer_30ms:
 1159 0000 00       		.space	1
 1160              		.section	.bss.digit,"aw",%nobits
 1161              		.align	2
 1162              		.set	.LANCHOR10,. + 0
 1165              	digit:
 1166 0000 00000000 		.space	4
 1167              		.section	.bss.event,"aw",%nobits
 1168              		.set	.LANCHOR13,. + 0
 1171              	event:
 1172 0000 00       		.space	1
 1173              		.section	.bss.event_buffer,"aw",%nobits
 1174              		.align	2
 1175              		.set	.LANCHOR4,. + 0
 1178              	event_buffer:
 1179 0000 00000000 		.space	66
 1179      00000000 
 1179      00000000 
 1179      00000000 
 1179      00000000 
 1180              		.section	.bss.f_busy,"aw",%nobits
 1183              	f_busy:
 1184 0000 00       		.space	1
 1185              		.section	.bss.f_read_msg,"aw",%nobits
 1186              		.set	.LANCHOR6,. + 0
 1189              	f_read_msg:
 1190 0000 00       		.space	1
 1191              		.section	.bss.f_timer_10ms,"aw",%nobits
 1192              		.set	.LANCHOR0,. + 0
 1195              	f_timer_10ms:
ARM GAS  /tmp/ccHRpq50.s 			page 35


 1196 0000 00       		.space	1
 1197              		.section	.bss.f_timer_30ms,"aw",%nobits
 1198              		.set	.LANCHOR2,. + 0
 1201              	f_timer_30ms:
 1202 0000 00       		.space	1
 1203              		.section	.bss.key_value,"aw",%nobits
 1204              		.set	.LANCHOR3,. + 0
 1207              	key_value:
 1208 0000 00       		.space	1
 1209              		.section	.bss.pRX_msg,"aw",%nobits
 1210              		.align	2
 1211              		.set	.LANCHOR7,. + 0
 1214              	pRX_msg:
 1215 0000 00000000 		.space	4
 1216              		.section	.bss.pTX_msg,"aw",%nobits
 1217              		.align	2
 1218              		.set	.LANCHOR15,. + 0
 1221              	pTX_msg:
 1222 0000 00000000 		.space	4
 1223              		.section	.bss.read_res,"aw",%nobits
 1226              	read_res:
 1227 0000 00       		.space	1
 1228              		.section	.bss.rx_buffer,"aw",%nobits
 1229              		.align	2
 1230              		.set	.LANCHOR5,. + 0
 1233              	rx_buffer:
 1234 0000 00000000 		.space	66
 1234      00000000 
 1234      00000000 
 1234      00000000 
 1234      00000000 
 1235              		.section	.bss.rx_temp,"aw",%nobits
 1236              		.set	.LANCHOR17,. + 0
 1239              	rx_temp:
 1240 0000 00       		.space	1
 1241              		.section	.bss.state,"aw",%nobits
 1242              		.set	.LANCHOR14,. + 0
 1245              	state:
 1246 0000 00       		.space	1
 1247              		.section	.bss.transmission_f,"aw",%nobits
 1250              	transmission_f:
 1251 0000 00       		.space	1
 1252              		.section	.bss.tx_buffer,"aw",%nobits
 1253              		.align	2
 1256              	tx_buffer:
 1257 0000 00000000 		.space	194
 1257      00000000 
 1257      00000000 
 1257      00000000 
 1257      00000000 
 1258              		.section	.bss.unique_id,"aw",%nobits
 1259              		.align	2
 1260              		.set	.LANCHOR16,. + 0
 1263              	unique_id:
 1264 0000 00000000 		.space	4
 1265              		.section	.data.seven_segment_table,"aw"
 1266              		.align	2
ARM GAS  /tmp/ccHRpq50.s 			page 36


 1267              		.set	.LANCHOR11,. + 0
 1270              	seven_segment_table:
 1271 0000 3F065B4F 		.ascii	"?\006[Ofm}\007\177o_|X^{q@"
 1271      666D7D07 
 1271      7F6F5F7C 
 1271      585E7B71 
 1271      40
 1272              		.text
 1273              	.Letext0:
 1274              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1275              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1276              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1277              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1278              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1279              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1280              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1281              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1282              		.file 11 "Core/Inc/tim.h"
 1283              		.file 12 "Core/Inc/usart.h"
 1284              		.file 13 "Core/Inc/buffer.h"
 1285              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1286              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1287              		.file 16 "Core/Inc/gpio.h"
 1288              		.file 17 "<built-in>"
ARM GAS  /tmp/ccHRpq50.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccHRpq50.s:16     .text.task_timer:0000000000000000 $t
     /tmp/ccHRpq50.s:24     .text.task_timer:0000000000000000 task_timer
     /tmp/ccHRpq50.s:72     .text.task_timer:000000000000002c $d
     /tmp/ccHRpq50.s:79     .text.seven_segment_display:0000000000000000 $t
     /tmp/ccHRpq50.s:86     .text.seven_segment_display:0000000000000000 seven_segment_display
     /tmp/ccHRpq50.s:108    .text.seven_segment_display:000000000000000c $d
     /tmp/ccHRpq50.s:113    .text.key_read_task:0000000000000000 $t
     /tmp/ccHRpq50.s:120    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccHRpq50.s:183    .text.key_read_task:000000000000003c $d
     /tmp/ccHRpq50.s:191    .text.RS485_RX_Task:0000000000000000 $t
     /tmp/ccHRpq50.s:198    .text.RS485_RX_Task:0000000000000000 RS485_RX_Task
     /tmp/ccHRpq50.s:289    .text.RS485_RX_Task:0000000000000060 $d
     /tmp/ccHRpq50.s:298    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccHRpq50.s:305    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccHRpq50.s:403    .text.RS485_Read_Message:0000000000000060 $d
     /tmp/ccHRpq50.s:412    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccHRpq50.s:419    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccHRpq50.s:477    .text.RS485_Send_Message:0000000000000040 $d
     /tmp/ccHRpq50.s:484    .text.main_task:0000000000000000 $t
     /tmp/ccHRpq50.s:491    .text.main_task:0000000000000000 main_task
     /tmp/ccHRpq50.s:613    .text.main_task:0000000000000088 $d
     /tmp/ccHRpq50.s:618    .text.main_task:000000000000009c $t
     /tmp/ccHRpq50.s:746    .text.main_task:000000000000012c $d
     /tmp/ccHRpq50.s:759    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccHRpq50.s:766    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccHRpq50.s:793    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccHRpq50.s:799    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccHRpq50.s:806    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccHRpq50.s:845    .text.HAL_UART_RxCpltCallback:0000000000000020 $d
     /tmp/ccHRpq50.s:852    .text.Error_Handler:0000000000000000 $t
     /tmp/ccHRpq50.s:859    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccHRpq50.s:891    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccHRpq50.s:898    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccHRpq50.s:1001   .text.main:0000000000000000 $t
     /tmp/ccHRpq50.s:1008   .text.main:0000000000000000 main
     /tmp/ccHRpq50.s:1094   .text.main:0000000000000060 $d
     /tmp/ccHRpq50.s:1270   .data.seven_segment_table:0000000000000000 seven_segment_table
     /tmp/ccHRpq50.s:1165   .bss.digit:0000000000000000 digit
     /tmp/ccHRpq50.s:1171   .bss.event:0000000000000000 event
     /tmp/ccHRpq50.s:1245   .bss.state:0000000000000000 state
     /tmp/ccHRpq50.s:1221   .bss.pTX_msg:0000000000000000 pTX_msg
     /tmp/ccHRpq50.s:1214   .bss.pRX_msg:0000000000000000 pRX_msg
     /tmp/ccHRpq50.s:1140   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccHRpq50.s:1147   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccHRpq50.s:1133   .bss.ID:0000000000000000 ID
     /tmp/ccHRpq50.s:1178   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccHRpq50.s:1233   .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/ccHRpq50.s:1256   .bss.tx_buffer:0000000000000000 tx_buffer
     /tmp/ccHRpq50.s:1250   .bss.transmission_f:0000000000000000 transmission_f
     /tmp/ccHRpq50.s:1239   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccHRpq50.s:1226   .bss.read_res:0000000000000000 read_res
     /tmp/ccHRpq50.s:1152   .bss.curr_event:0000000000000000 curr_event
     /tmp/ccHRpq50.s:1207   .bss.key_value:0000000000000000 key_value
     /tmp/ccHRpq50.s:1158   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccHRpq50.s:1201   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
ARM GAS  /tmp/ccHRpq50.s 			page 38


     /tmp/ccHRpq50.s:1195   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
     /tmp/ccHRpq50.s:1189   .bss.f_read_msg:0000000000000000 f_read_msg
     /tmp/ccHRpq50.s:1183   .bss.f_busy:0000000000000000 f_busy
     /tmp/ccHRpq50.s:1263   .bss.unique_id:0000000000000000 unique_id
     /tmp/ccHRpq50.s:1134   .bss.ID:0000000000000000 $d
     /tmp/ccHRpq50.s:1136   .bss.RX_msg:0000000000000000 $d
     /tmp/ccHRpq50.s:1143   .bss.TX_msg:0000000000000000 $d
     /tmp/ccHRpq50.s:1153   .bss.curr_event:0000000000000000 $d
     /tmp/ccHRpq50.s:1159   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccHRpq50.s:1161   .bss.digit:0000000000000000 $d
     /tmp/ccHRpq50.s:1172   .bss.event:0000000000000000 $d
     /tmp/ccHRpq50.s:1174   .bss.event_buffer:0000000000000000 $d
     /tmp/ccHRpq50.s:1184   .bss.f_busy:0000000000000000 $d
     /tmp/ccHRpq50.s:1190   .bss.f_read_msg:0000000000000000 $d
     /tmp/ccHRpq50.s:1196   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccHRpq50.s:1202   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccHRpq50.s:1208   .bss.key_value:0000000000000000 $d
     /tmp/ccHRpq50.s:1210   .bss.pRX_msg:0000000000000000 $d
     /tmp/ccHRpq50.s:1217   .bss.pTX_msg:0000000000000000 $d
     /tmp/ccHRpq50.s:1227   .bss.read_res:0000000000000000 $d
     /tmp/ccHRpq50.s:1229   .bss.rx_buffer:0000000000000000 $d
     /tmp/ccHRpq50.s:1240   .bss.rx_temp:0000000000000000 $d
     /tmp/ccHRpq50.s:1246   .bss.state:0000000000000000 $d
     /tmp/ccHRpq50.s:1251   .bss.transmission_f:0000000000000000 $d
     /tmp/ccHRpq50.s:1253   .bss.tx_buffer:0000000000000000 $d
     /tmp/ccHRpq50.s:1259   .bss.unique_id:0000000000000000 $d
     /tmp/ccHRpq50.s:1266   .data.seven_segment_table:0000000000000000 $d

UNDEFINED SYMBOLS
buffer_push
HAL_GPIO_WritePin
HAL_UART_Transmit
huart1
buffer_pop
htim1
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_USART1_UART_Init
HAL_TIM_Base_Start_IT
HAL_Delay
