ARM GAS  /tmp/ccb2RRbl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.task_timer,"ax",%progbits
  16              		.align	1
  17              		.global	task_timer
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	task_timer:
  25              	.LFB67:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "buffer.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccb2RRbl.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** uint8_t f_busy;
  48:Core/Src/main.c **** uint8_t f_read_msg;
  49:Core/Src/main.c **** uint8_t f_timer_10ms=0;
  50:Core/Src/main.c **** uint8_t f_timer_30ms=0;
  51:Core/Src/main.c **** uint8_t d_timer_30ms;
  52:Core/Src/main.c **** uint8_t key_value;
  53:Core/Src/main.c **** uint8_t curr_event;
  54:Core/Src/main.c **** //uint8_t bufferEvent[64];
  55:Core/Src/main.c **** uint8_t read_res;
  56:Core/Src/main.c **** uint8_t rx_temp;
  57:Core/Src/main.c **** uint8_t transmission_f;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** buffer_tx_msg tx_buffer;
  60:Core/Src/main.c **** circular_buffer rx_buffer;
  61:Core/Src/main.c **** circular_buffer event_buffer;
  62:Core/Src/main.c **** uint8_t ID;
  63:Core/Src/main.c **** uint8_t TX_msg[6];
  64:Core/Src/main.c **** uint8_t RX_msg[4];
  65:Core/Src/main.c **** uint8_t *pRX_msg;
  66:Core/Src/main.c **** uint8_t *pTX_msg;
  67:Core/Src/main.c **** uint8_t state,event;
  68:Core/Src/main.c **** int digit;
  69:Core/Src/main.c **** uint8_t seven_segment_table[17] = {	0b0111111,	// '0'
  70:Core/Src/main.c **** 		                            	 0b0000110,	// '1'
  71:Core/Src/main.c **** 		   	                           0b1011011,	// '2'
  72:Core/Src/main.c **** 			                             0b1001111,	// '3'
  73:Core/Src/main.c **** 			                             0b1100110,	// '4'
  74:Core/Src/main.c ****                                    0b1101101,	// '5'
  75:Core/Src/main.c ****                                    0b1111101,	// '6'
  76:Core/Src/main.c ****                                    0b0000111,	// '7'
  77:Core/Src/main.c **** 			                             0b1111111,	// '8'
  78:Core/Src/main.c ****                                    0b1101111,	// '9'
  79:Core/Src/main.c ****                                    0b1011111,	// 'a'  --10
  80:Core/Src/main.c ****                                    0b1111100,	// 'b'  --11
  81:Core/Src/main.c **** 			                             0b1011000,	// 'c'  --14
  82:Core/Src/main.c ****                                    0b1011110,	// 'd'  --13
  83:Core/Src/main.c ****                                    0b1111011,	// 'e'	--14
  84:Core/Src/main.c ****                                    0b1110001,	// 'f'  --15
  85:Core/Src/main.c ****                                    0b1000000 	// '-'  --16
  86:Core/Src/main.c **** };
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** 
ARM GAS  /tmp/ccb2RRbl.s 			page 3


  90:Core/Src/main.c **** /* USER CODE END PV */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  93:Core/Src/main.c **** void SystemClock_Config(void);
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  96:Core/Src/main.c **** void RS485_TX_Task(void);
  97:Core/Src/main.c **** void RS485_RX_Task(void);
  98:Core/Src/main.c **** void task_timer(void);
  99:Core/Src/main.c **** void seven_segment_display(char input);
 100:Core/Src/main.c **** void key_read_task(void);
 101:Core/Src/main.c **** void main_task(void);
 102:Core/Src/main.c **** void RS485_Send_Message(void);
 103:Core/Src/main.c **** void RS485_Read_Message(void);
 104:Core/Src/main.c **** /* USER CODE END PFP */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 107:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /* USER CODE END 0 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****   * @brief  The application entry point.
 113:Core/Src/main.c ****   * @retval int
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c **** int main(void)
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE END 1 */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 124:Core/Src/main.c ****   HAL_Init();
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END Init */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Configure the system clock */
 131:Core/Src/main.c ****   SystemClock_Config();
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE END SysInit */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* Initialize all configured peripherals */
 138:Core/Src/main.c ****   MX_GPIO_Init();
 139:Core/Src/main.c ****   MX_TIM1_Init();
 140:Core/Src/main.c ****   MX_USART1_UART_Init();
 141:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 142:Core/Src/main.c ****   
 143:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);  
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****  
 146:Core/Src/main.c ****   /* USER CODE END 2 */
ARM GAS  /tmp/ccb2RRbl.s 			page 4


 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* Infinite loop */
 149:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 150:Core/Src/main.c ****   #ifdef SLAVE_1 
 151:Core/Src/main.c ****   ID=0x10;
 152:Core/Src/main.c ****   #endif
 153:Core/Src/main.c ****   #ifdef SLAVE_2
 154:Core/Src/main.c ****   ID=0x12;
 155:Core/Src/main.c ****   #endif
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   uint32_t rand= HAL_GetTick();
 158:Core/Src/main.c ****   rand = rand & 0x00FF;
 159:Core/Src/main.c ****   state = STATE_WAITING_ADDR;
 160:Core/Src/main.c ****   event = EVENT_RESET;
 161:Core/Src/main.c ****   digit=16;
 162:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 163:Core/Src/main.c ****   
 164:Core/Src/main.c ****   HAL_Delay(rand);
 165:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   while (1)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     /* USER CODE END WHILE */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 172:Core/Src/main.c ****      
 173:Core/Src/main.c ****       
 174:Core/Src/main.c ****       task_timer();
 175:Core/Src/main.c ****       key_read_task();
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****       RS485_RX_Task();
 178:Core/Src/main.c ****       
 179:Core/Src/main.c ****       main_task();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c ****   /* USER CODE END 3 */
 182:Core/Src/main.c **** }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief System Clock Configuration
 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** void SystemClock_Config(void)
 189:Core/Src/main.c **** {
 190:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 191:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 194:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 203:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccb2RRbl.s 			page 5


 204:Core/Src/main.c ****   {
 205:Core/Src/main.c ****     Error_Handler();
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 211:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 218:Core/Src/main.c ****   {
 219:Core/Src/main.c ****     Error_Handler();
 220:Core/Src/main.c ****   }
 221:Core/Src/main.c **** }
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** void task_timer(void)
 226:Core/Src/main.c **** {
  27              		.loc 1 226 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 227:Core/Src/main.c ****   if (!f_timer_10ms) return;
  32              		.loc 1 227 3 view .LVU1
  33              		.loc 1 227 7 is_stmt 0 view .LVU2
  34 0000 0A4B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36              		.loc 1 227 6 view .LVU3
  37 0004 4BB1     		cbz	r3, .L1
 228:Core/Src/main.c ****   f_timer_10ms=0;
  38              		.loc 1 228 3 is_stmt 1 view .LVU4
  39              		.loc 1 228 15 is_stmt 0 view .LVU5
  40 0006 094B     		ldr	r3, .L4
  41 0008 0022     		movs	r2, #0
  42 000a 1A70     		strb	r2, [r3]
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   d_timer_30ms++;
  43              		.loc 1 230 3 is_stmt 1 view .LVU6
  44              		.loc 1 230 15 is_stmt 0 view .LVU7
  45 000c 084A     		ldr	r2, .L4+4
  46 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  47 0010 0133     		adds	r3, r3, #1
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 1370     		strb	r3, [r2]
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   if(d_timer_30ms==3){
  50              		.loc 1 232 3 is_stmt 1 view .LVU8
  51              		.loc 1 232 5 is_stmt 0 view .LVU9
  52 0016 032B     		cmp	r3, #3
  53 0018 00D0     		beq	.L3
  54              	.L1:
ARM GAS  /tmp/ccb2RRbl.s 			page 6


 233:Core/Src/main.c ****     d_timer_30ms =0;
 234:Core/Src/main.c ****     f_timer_30ms=1;
 235:Core/Src/main.c ****     
 236:Core/Src/main.c ****     
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c ****   
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** }
  55              		.loc 1 240 1 view .LVU10
  56 001a 7047     		bx	lr
  57              	.L3:
 233:Core/Src/main.c ****     d_timer_30ms =0;
  58              		.loc 1 233 5 is_stmt 1 view .LVU11
 233:Core/Src/main.c ****     d_timer_30ms =0;
  59              		.loc 1 233 18 is_stmt 0 view .LVU12
  60 001c 1346     		mov	r3, r2
  61 001e 0022     		movs	r2, #0
  62 0020 1A70     		strb	r2, [r3]
 234:Core/Src/main.c ****     
  63              		.loc 1 234 5 is_stmt 1 view .LVU13
 234:Core/Src/main.c ****     
  64              		.loc 1 234 17 is_stmt 0 view .LVU14
  65 0022 044B     		ldr	r3, .L4+8
  66 0024 0122     		movs	r2, #1
  67 0026 1A70     		strb	r2, [r3]
  68 0028 F7E7     		b	.L1
  69              	.L5:
  70 002a 00BF     		.align	2
  71              	.L4:
  72 002c 00000000 		.word	.LANCHOR0
  73 0030 00000000 		.word	.LANCHOR1
  74 0034 00000000 		.word	.LANCHOR2
  75              		.cfi_endproc
  76              	.LFE67:
  78              		.section	.text.seven_segment_display,"ax",%progbits
  79              		.align	1
  80              		.global	seven_segment_display
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	seven_segment_display:
  87              	.LVL0:
  88              	.LFB68:
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** void seven_segment_display(char input)
 243:Core/Src/main.c **** {
  89              		.loc 1 243 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 244:Core/Src/main.c ****    uint32_t mask =  a_Pin|b_Pin|c_Pin|d_Pin|e_Pin|f_Pin|g_Pin;
  94              		.loc 1 244 4 view .LVU16
 245:Core/Src/main.c ****    uint32_t val = (uint32_t)input & mask;
  95              		.loc 1 245 4 view .LVU17
  96              		.loc 1 245 13 is_stmt 0 view .LVU18
ARM GAS  /tmp/ccb2RRbl.s 			page 7


  97 0000 00F07F00 		and	r0, r0, #127
  98              	.LVL1:
 246:Core/Src/main.c ****    SEGMENT_PORT->ODR = val;
  99              		.loc 1 246 4 is_stmt 1 view .LVU19
 100              		.loc 1 246 22 is_stmt 0 view .LVU20
 101 0004 014B     		ldr	r3, .L7
 102 0006 D860     		str	r0, [r3, #12]
 247:Core/Src/main.c **** }
 103              		.loc 1 247 1 view .LVU21
 104 0008 7047     		bx	lr
 105              	.L8:
 106 000a 00BF     		.align	2
 107              	.L7:
 108 000c 00080140 		.word	1073809408
 109              		.cfi_endproc
 110              	.LFE68:
 112              		.section	.text.key_read_task,"ax",%progbits
 113              		.align	1
 114              		.global	key_read_task
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu softvfp
 120              	key_read_task:
 121              	.LFB69:
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** void key_read_task(void)
 250:Core/Src/main.c **** {
 122              		.loc 1 250 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126 0000 08B5     		push	{r3, lr}
 127              	.LCFI0:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 3, -8
 130              		.cfi_offset 14, -4
 251:Core/Src/main.c ****   if(!f_timer_30ms) return;
 131              		.loc 1 251 3 view .LVU23
 132              		.loc 1 251 6 is_stmt 0 view .LVU24
 133 0002 0E4B     		ldr	r3, .L13
 134 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 135              		.loc 1 251 5 view .LVU25
 136 0006 93B1     		cbz	r3, .L9
 252:Core/Src/main.c ****   f_timer_30ms =0; 
 137              		.loc 1 252 3 is_stmt 1 view .LVU26
 138              		.loc 1 252 16 is_stmt 0 view .LVU27
 139 0008 0C4B     		ldr	r3, .L13
 140 000a 0022     		movs	r2, #0
 141 000c 1A70     		strb	r2, [r3]
 253:Core/Src/main.c ****    
 254:Core/Src/main.c ****  
 255:Core/Src/main.c ****   unsigned char key_pindata = (uint8_t)(key_GPIO_Port->IDR & key_Pin);
 142              		.loc 1 255 3 is_stmt 1 view .LVU28
 143              		.loc 1 255 54 is_stmt 0 view .LVU29
 144 000e 0C4B     		ldr	r3, .L13+4
 145 0010 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccb2RRbl.s 			page 8


 146              	.LVL2:
 256:Core/Src/main.c ****  
 257:Core/Src/main.c ****   key_value = key_value<<1;
 147              		.loc 1 257 3 is_stmt 1 view .LVU30
 148              		.loc 1 257 24 is_stmt 0 view .LVU31
 149 0012 0C49     		ldr	r1, .L13+8
 150 0014 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 151 0016 5B00     		lsls	r3, r3, #1
 152 0018 DBB2     		uxtb	r3, r3
 153              		.loc 1 257 13 view .LVU32
 154 001a 0B70     		strb	r3, [r1]
 258:Core/Src/main.c ****   key_value &= 0b00001110;
 155              		.loc 1 258 3 is_stmt 1 view .LVU33
 156              		.loc 1 258 13 is_stmt 0 view .LVU34
 157 001c 03F00E03 		and	r3, r3, #14
 158 0020 0B70     		strb	r3, [r1]
 259:Core/Src/main.c ****   key_value |= key_pindata&0X1;
 159              		.loc 1 259 3 is_stmt 1 view .LVU35
 160              		.loc 1 259 27 is_stmt 0 view .LVU36
 161 0022 02F00102 		and	r2, r2, #1
 162              	.LVL3:
 163              		.loc 1 259 13 view .LVU37
 164 0026 1343     		orrs	r3, r3, r2
 165 0028 0B70     		strb	r3, [r1]
 260:Core/Src/main.c ****  
 261:Core/Src/main.c ****   if (key_value==KEY_PRESSED){
 166              		.loc 1 261 3 is_stmt 1 view .LVU38
 167              		.loc 1 261 6 is_stmt 0 view .LVU39
 168 002a 0C2B     		cmp	r3, #12
 169 002c 00D0     		beq	.L12
 170              	.L9:
 262:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 263:Core/Src/main.c ****       
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** }
 171              		.loc 1 266 1 view .LVU40
 172 002e 08BD     		pop	{r3, pc}
 173              	.L12:
 262:Core/Src/main.c ****       buffer_push(&event_buffer,EVENT_KEY_PRESSED);
 174              		.loc 1 262 7 is_stmt 1 view .LVU41
 175 0030 0121     		movs	r1, #1
 176 0032 0548     		ldr	r0, .L13+12
 177 0034 FFF7FEFF 		bl	buffer_push
 178              	.LVL4:
 179 0038 F9E7     		b	.L9
 180              	.L14:
 181 003a 00BF     		.align	2
 182              	.L13:
 183 003c 00000000 		.word	.LANCHOR2
 184 0040 000C0140 		.word	1073810432
 185 0044 00000000 		.word	.LANCHOR3
 186 0048 00000000 		.word	.LANCHOR4
 187              		.cfi_endproc
 188              	.LFE69:
 190              		.section	.text.RS485_RX_Task,"ax",%progbits
 191              		.align	1
ARM GAS  /tmp/ccb2RRbl.s 			page 9


 192              		.global	RS485_RX_Task
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu softvfp
 198              	RS485_RX_Task:
 199              	.LFB71:
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** void main_task(void)
 269:Core/Src/main.c **** {
 270:Core/Src/main.c ****   	if (event_buffer.head!=event_buffer.tail){
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** 		  event = buffer_pop(&event_buffer);   // if there is event then get the event from buffer
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   switch (event)
 277:Core/Src/main.c ****   {
 278:Core/Src/main.c ****   case EVENT_KEY_PRESSED:
 279:Core/Src/main.c ****     digit=(digit+1)>9? 0 :digit+1;
 280:Core/Src/main.c ****     seven_segment_display(seven_segment_table[digit]);
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****     event=EVENT_RESET;
 283:Core/Src/main.c ****     break;
 284:Core/Src/main.c ****   
 285:Core/Src/main.c ****   case EVENT_RX_COMPLETE:
 286:Core/Src/main.c ****     RS485_Read_Message();
 287:Core/Src/main.c ****     event=EVENT_RESET;
 288:Core/Src/main.c ****     break;
 289:Core/Src/main.c ****   case EVENT_DATA_REQUEST:
 290:Core/Src/main.c ****       
 291:Core/Src/main.c ****       pTX_msg = &TX_msg[1];
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****       *pTX_msg++ = ID;
 294:Core/Src/main.c **** 			*pTX_msg++ = FUNC_READ;
 295:Core/Src/main.c **** 			*pTX_msg++ = digit+'0';
 296:Core/Src/main.c ****       RS485_Send_Message();
 297:Core/Src/main.c ****       event = EVENT_RESET;
 298:Core/Src/main.c ****      break;
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   case EVENT_DATA_WRITE:
 301:Core/Src/main.c ****       
 302:Core/Src/main.c ****       pTX_msg = &TX_msg[1];
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****       *pTX_msg++ = ID;
 305:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 306:Core/Src/main.c **** 			*pTX_msg++ = '0';
 307:Core/Src/main.c ****       RS485_Send_Message();
 308:Core/Src/main.c ****       event = EVENT_RESET;
 309:Core/Src/main.c ****      break;
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   default:
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****     break;
 314:Core/Src/main.c ****   }
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** 
ARM GAS  /tmp/ccb2RRbl.s 			page 10


 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** }
 319:Core/Src/main.c **** 
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** void RS485_RX_Task(void)
 322:Core/Src/main.c **** {
 200              		.loc 1 322 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 08B5     		push	{r3, lr}
 205              	.LCFI1:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 323:Core/Src/main.c **** 	
 324:Core/Src/main.c **** 	if (rx_buffer.tail==rx_buffer.head) return;
 209              		.loc 1 324 2 view .LVU43
 210              		.loc 1 324 15 is_stmt 0 view .LVU44
 211 0002 174A     		ldr	r2, .L23
 212 0004 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 213              		.loc 1 324 31 view .LVU45
 214 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 215              		.loc 1 324 5 view .LVU46
 216 0008 9942     		cmp	r1, r3
 217 000a 20D0     		beq	.L15
 325:Core/Src/main.c **** 	
 326:Core/Src/main.c **** 	
 327:Core/Src/main.c **** 	if (rx_buffer.data[rx_buffer.tail]==SOF)
 218              		.loc 1 327 2 is_stmt 1 view .LVU47
 219              		.loc 1 327 20 is_stmt 0 view .LVU48
 220 000c 1346     		mov	r3, r2
 221 000e 0B44     		add	r3, r3, r1
 222 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 223              		.loc 1 327 5 view .LVU49
 224 0012 022B     		cmp	r3, #2
 225 0014 0AD0     		beq	.L21
 328:Core/Src/main.c **** 	{
 329:Core/Src/main.c **** 		f_read_msg =1;
 330:Core/Src/main.c **** 		pRX_msg = RX_msg;
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** 	}else if(rx_buffer.data[rx_buffer.tail]==EOF)
 226              		.loc 1 332 8 is_stmt 1 view .LVU50
 227              		.loc 1 332 10 is_stmt 0 view .LVU51
 228 0016 032B     		cmp	r3, #3
 229 0018 1AD0     		beq	.L22
 333:Core/Src/main.c **** 	{
 334:Core/Src/main.c **** 		f_read_msg =0;
 335:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 336:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 337:Core/Src/main.c **** 	}else{
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** 		if (f_read_msg){
 230              		.loc 1 339 3 is_stmt 1 view .LVU52
 231              		.loc 1 339 7 is_stmt 0 view .LVU53
 232 001a 124A     		ldr	r2, .L23+4
 233 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  /tmp/ccb2RRbl.s 			page 11


 234              		.loc 1 339 6 view .LVU54
 235 001e 5AB1     		cbz	r2, .L18
 340:Core/Src/main.c **** 			*pRX_msg++=rx_buffer.data[rx_buffer.tail];
 236              		.loc 1 340 4 is_stmt 1 view .LVU55
 237              		.loc 1 340 12 is_stmt 0 view .LVU56
 238 0020 1149     		ldr	r1, .L23+8
 239 0022 0A68     		ldr	r2, [r1]
 240 0024 501C     		adds	r0, r2, #1
 241 0026 0860     		str	r0, [r1]
 242              		.loc 1 340 14 view .LVU57
 243 0028 1370     		strb	r3, [r2]
 244 002a 05E0     		b	.L18
 245              	.L21:
 329:Core/Src/main.c **** 		pRX_msg = RX_msg;
 246              		.loc 1 329 3 is_stmt 1 view .LVU58
 329:Core/Src/main.c **** 		pRX_msg = RX_msg;
 247              		.loc 1 329 14 is_stmt 0 view .LVU59
 248 002c 0D4B     		ldr	r3, .L23+4
 249 002e 0122     		movs	r2, #1
 250 0030 1A70     		strb	r2, [r3]
 330:Core/Src/main.c **** 
 251              		.loc 1 330 3 is_stmt 1 view .LVU60
 330:Core/Src/main.c **** 
 252              		.loc 1 330 11 is_stmt 0 view .LVU61
 253 0032 0D4B     		ldr	r3, .L23+8
 254 0034 0D4A     		ldr	r2, .L23+12
 255 0036 1A60     		str	r2, [r3]
 256              	.L18:
 341:Core/Src/main.c **** 		}	
 342:Core/Src/main.c **** 	}
 343:Core/Src/main.c **** 	rx_buffer.tail = (rx_buffer.tail+1)%BUFFER_SIZE;
 257              		.loc 1 343 2 is_stmt 1 view .LVU62
 258              		.loc 1 343 29 is_stmt 0 view .LVU63
 259 0038 0949     		ldr	r1, .L23
 260 003a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 261              		.loc 1 343 34 view .LVU64
 262 003c 0133     		adds	r3, r3, #1
 263              		.loc 1 343 37 view .LVU65
 264 003e 5A42     		rsbs	r2, r3, #0
 265 0040 03F03F03 		and	r3, r3, #63
 266 0044 02F03F02 		and	r2, r2, #63
 267 0048 58BF     		it	pl
 268 004a 5342     		rsbpl	r3, r2, #0
 269              		.loc 1 343 17 view .LVU66
 270 004c 4B70     		strb	r3, [r1, #1]
 271              	.L15:
 344:Core/Src/main.c **** 
 345:Core/Src/main.c **** }
 272              		.loc 1 345 1 view .LVU67
 273 004e 08BD     		pop	{r3, pc}
 274              	.L22:
 334:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 275              		.loc 1 334 3 is_stmt 1 view .LVU68
 334:Core/Src/main.c ****     buffer_push(&event_buffer,EVENT_RX_COMPLETE);
 276              		.loc 1 334 14 is_stmt 0 view .LVU69
 277 0050 044B     		ldr	r3, .L23+4
 278 0052 0022     		movs	r2, #0
ARM GAS  /tmp/ccb2RRbl.s 			page 12


 279 0054 1A70     		strb	r2, [r3]
 335:Core/Src/main.c **** 		//RS485_Read_Message();  //event msg ready 
 280              		.loc 1 335 5 is_stmt 1 view .LVU70
 281 0056 0321     		movs	r1, #3
 282 0058 0548     		ldr	r0, .L23+16
 283 005a FFF7FEFF 		bl	buffer_push
 284              	.LVL5:
 285 005e EBE7     		b	.L18
 286              	.L24:
 287              		.align	2
 288              	.L23:
 289 0060 00000000 		.word	.LANCHOR5
 290 0064 00000000 		.word	.LANCHOR6
 291 0068 00000000 		.word	.LANCHOR7
 292 006c 00000000 		.word	.LANCHOR8
 293 0070 00000000 		.word	.LANCHOR4
 294              		.cfi_endproc
 295              	.LFE71:
 297              		.section	.text.RS485_Read_Message,"ax",%progbits
 298              		.align	1
 299              		.global	RS485_Read_Message
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu softvfp
 305              	RS485_Read_Message:
 306              	.LFB72:
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** void RS485_Read_Message(void){
 307              		.loc 1 352 30 view -0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311 0000 08B5     		push	{r3, lr}
 312              	.LCFI2:
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 3, -8
 315              		.cfi_offset 14, -4
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   uint8_t checksum = 0;
 316              		.loc 1 354 3 view .LVU72
 317              	.LVL6:
 355:Core/Src/main.c ****   
 356:Core/Src/main.c **** 	checksum = checksum^RX_msg[0]^RX_msg[1]^RX_msg[2];
 318              		.loc 1 356 2 view .LVU73
 319              		.loc 1 356 28 is_stmt 0 view .LVU74
 320 0002 134B     		ldr	r3, .L31
 321 0004 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 322              		.loc 1 356 38 view .LVU75
 323 0006 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 324              		.loc 1 356 48 view .LVU76
 325 0008 93F802C0 		ldrb	ip, [r3, #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccb2RRbl.s 			page 13


 326              		.loc 1 356 11 view .LVU77
 327 000c 81EA0002 		eor	r2, r1, r0
 328 0010 8CEA0202 		eor	r2, ip, r2
 329              	.LVL7:
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   //if (rx_buffer.tail==rx_buffer.head) return;
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   if (!(checksum== RX_msg[3]))
 330              		.loc 1 360 3 is_stmt 1 view .LVU78
 331              		.loc 1 360 26 is_stmt 0 view .LVU79
 332 0014 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 333              		.loc 1 360 6 view .LVU80
 334 0016 9342     		cmp	r3, r2
 335 0018 07D1     		bne	.L25
 361:Core/Src/main.c **** 	{
 362:Core/Src/main.c ****      return;
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** 	}
 365:Core/Src/main.c ****   
 366:Core/Src/main.c ****   if (RX_msg[0]!= ID) return;
 336              		.loc 1 366 3 is_stmt 1 view .LVU81
 337              		.loc 1 366 16 is_stmt 0 view .LVU82
 338 001a 0E4B     		ldr	r3, .L31+4
 339 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 340              		.loc 1 366 6 view .LVU83
 341 001e 9942     		cmp	r1, r3
 342 0020 03D1     		bne	.L25
 367:Core/Src/main.c ****   
 368:Core/Src/main.c ****   if (RX_msg[1] == FUNC_WRITE)
 343              		.loc 1 368 3 is_stmt 1 view .LVU84
 344              		.loc 1 368 6 is_stmt 0 view .LVU85
 345 0022 F128     		cmp	r0, #241
 346 0024 02D0     		beq	.L29
 369:Core/Src/main.c ****   {    
 370:Core/Src/main.c ****          digit = RX_msg[2]-'0';
 371:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 372:Core/Src/main.c ****          buffer_push(&event_buffer, EVENT_DATA_WRITE);
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   }else if (RX_msg[1] == FUNC_READ){
 347              		.loc 1 374 9 is_stmt 1 view .LVU86
 348              		.loc 1 374 12 is_stmt 0 view .LVU87
 349 0026 F228     		cmp	r0, #242
 350 0028 0DD0     		beq	.L30
 351              	.LVL8:
 352              	.L25:
 375:Core/Src/main.c ****          
 376:Core/Src/main.c ****         buffer_push(&event_buffer, EVENT_DATA_REQUEST);
 377:Core/Src/main.c ****         //RS485_Send_Message();
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   }
 380:Core/Src/main.c **** }
 353              		.loc 1 380 1 view .LVU88
 354 002a 08BD     		pop	{r3, pc}
 355              	.LVL9:
 356              	.L29:
 370:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 357              		.loc 1 370 10 is_stmt 1 view .LVU89
ARM GAS  /tmp/ccb2RRbl.s 			page 14


 370:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 358              		.loc 1 370 27 is_stmt 0 view .LVU90
 359 002c ACF13003 		sub	r3, ip, #48
 370:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 360              		.loc 1 370 16 view .LVU91
 361 0030 094A     		ldr	r2, .L31+8
 362              	.LVL10:
 370:Core/Src/main.c ****          seven_segment_display(seven_segment_table[digit]);
 363              		.loc 1 370 16 view .LVU92
 364 0032 1360     		str	r3, [r2]
 371:Core/Src/main.c ****          buffer_push(&event_buffer, EVENT_DATA_WRITE);
 365              		.loc 1 371 10 is_stmt 1 view .LVU93
 366 0034 094A     		ldr	r2, .L31+12
 367 0036 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 368              	.LVL11:
 371:Core/Src/main.c ****          buffer_push(&event_buffer, EVENT_DATA_WRITE);
 369              		.loc 1 371 10 is_stmt 0 view .LVU94
 370 0038 FFF7FEFF 		bl	seven_segment_display
 371              	.LVL12:
 372:Core/Src/main.c **** 
 372              		.loc 1 372 10 is_stmt 1 view .LVU95
 373 003c 0521     		movs	r1, #5
 374 003e 0848     		ldr	r0, .L31+16
 375 0040 FFF7FEFF 		bl	buffer_push
 376              	.LVL13:
 377 0044 F1E7     		b	.L25
 378              	.LVL14:
 379              	.L30:
 376:Core/Src/main.c ****         //RS485_Send_Message();
 380              		.loc 1 376 9 view .LVU96
 381 0046 0421     		movs	r1, #4
 382 0048 0548     		ldr	r0, .L31+16
 383 004a FFF7FEFF 		bl	buffer_push
 384              	.LVL15:
 376:Core/Src/main.c ****         //RS485_Send_Message();
 385              		.loc 1 376 9 is_stmt 0 view .LVU97
 386 004e ECE7     		b	.L25
 387              	.L32:
 388              		.align	2
 389              	.L31:
 390 0050 00000000 		.word	.LANCHOR8
 391 0054 00000000 		.word	.LANCHOR9
 392 0058 00000000 		.word	.LANCHOR10
 393 005c 00000000 		.word	.LANCHOR11
 394 0060 00000000 		.word	.LANCHOR4
 395              		.cfi_endproc
 396              	.LFE72:
 398              		.section	.text.RS485_Send_Message,"ax",%progbits
 399              		.align	1
 400              		.global	RS485_Send_Message
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu softvfp
 406              	RS485_Send_Message:
 407              	.LFB73:
 381:Core/Src/main.c **** 
ARM GAS  /tmp/ccb2RRbl.s 			page 15


 382:Core/Src/main.c **** void RS485_Send_Message(void)
 383:Core/Src/main.c **** {
 408              		.loc 1 383 1 is_stmt 1 view -0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412 0000 38B5     		push	{r3, r4, r5, lr}
 413              	.LCFI3:
 414              		.cfi_def_cfa_offset 16
 415              		.cfi_offset 3, -16
 416              		.cfi_offset 4, -12
 417              		.cfi_offset 5, -8
 418              		.cfi_offset 14, -4
 384:Core/Src/main.c **** 	
 385:Core/Src/main.c **** 	TX_msg[0] = SOF;
 419              		.loc 1 385 2 view .LVU99
 420              		.loc 1 385 12 is_stmt 0 view .LVU100
 421 0002 0F4C     		ldr	r4, .L35
 422 0004 0223     		movs	r3, #2
 423 0006 2370     		strb	r3, [r4]
 386:Core/Src/main.c ****   TX_msg[4] = (((0x00^TX_msg[1])^TX_msg[2])^TX_msg[3]);    // checksum  // checksum
 424              		.loc 1 386 3 is_stmt 1 view .LVU101
 425              		.loc 1 386 29 is_stmt 0 view .LVU102
 426 0008 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 427              		.loc 1 386 40 view .LVU103
 428 000a A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 429              		.loc 1 386 51 view .LVU104
 430 000c E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 431              		.loc 1 386 13 view .LVU105
 432 000e 4A40     		eors	r2, r2, r1
 433 0010 5340     		eors	r3, r3, r2
 434 0012 2371     		strb	r3, [r4, #4]
 387:Core/Src/main.c **** 	TX_msg[5] = EOF;
 435              		.loc 1 387 2 is_stmt 1 view .LVU106
 436              		.loc 1 387 12 is_stmt 0 view .LVU107
 437 0014 0323     		movs	r3, #3
 438 0016 6371     		strb	r3, [r4, #5]
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** 	// uint8_t *pbuf_tx = (uint8_t *)&msg;
 390:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX_EN_GPIO_Port, TX_EN_Pin, 1); /// Enable Transmitter Mode
 439              		.loc 1 390 2 is_stmt 1 view .LVU108
 440 0018 0A4D     		ldr	r5, .L35+4
 441 001a 0122     		movs	r2, #1
 442 001c 4FF48071 		mov	r1, #256
 443 0020 2846     		mov	r0, r5
 444 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 445              	.LVL16:
 391:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, TX_msg, sizeof(TX_msg), 10);
 446              		.loc 1 391 2 view .LVU109
 447 0026 0A23     		movs	r3, #10
 448 0028 0622     		movs	r2, #6
 449 002a 2146     		mov	r1, r4
 450 002c 0648     		ldr	r0, .L35+8
 451 002e FFF7FEFF 		bl	HAL_UART_Transmit
 452              	.LVL17:
 392:Core/Src/main.c **** 	HAL_GPIO_WritePin(TX_EN_GPIO_Port, TX_EN_Pin, 0); /// Enable Receiver Mode
 453              		.loc 1 392 2 view .LVU110
ARM GAS  /tmp/ccb2RRbl.s 			page 16


 454 0032 0022     		movs	r2, #0
 455 0034 4FF48071 		mov	r1, #256
 456 0038 2846     		mov	r0, r5
 457 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 458              	.LVL18:
 393:Core/Src/main.c **** }
 459              		.loc 1 393 1 is_stmt 0 view .LVU111
 460 003e 38BD     		pop	{r3, r4, r5, pc}
 461              	.L36:
 462              		.align	2
 463              	.L35:
 464 0040 00000000 		.word	.LANCHOR12
 465 0044 00080140 		.word	1073809408
 466 0048 00000000 		.word	huart1
 467              		.cfi_endproc
 468              	.LFE73:
 470              		.section	.text.main_task,"ax",%progbits
 471              		.align	1
 472              		.global	main_task
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 476              		.fpu softvfp
 478              	main_task:
 479              	.LFB70:
 269:Core/Src/main.c ****   	if (event_buffer.head!=event_buffer.tail){
 480              		.loc 1 269 1 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484 0000 08B5     		push	{r3, lr}
 485              	.LCFI4:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 3, -8
 488              		.cfi_offset 14, -4
 270:Core/Src/main.c **** 
 489              		.loc 1 270 4 view .LVU113
 270:Core/Src/main.c **** 
 490              		.loc 1 270 20 is_stmt 0 view .LVU114
 491 0002 2E4B     		ldr	r3, .L49
 492 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 270:Core/Src/main.c **** 
 493              		.loc 1 270 39 view .LVU115
 494 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 270:Core/Src/main.c **** 
 495              		.loc 1 270 7 view .LVU116
 496 0008 9A42     		cmp	r2, r3
 497 000a 09D1     		bne	.L48
 498              	.L38:
 276:Core/Src/main.c ****   {
 499              		.loc 1 276 3 is_stmt 1 view .LVU117
 500 000c 2C4B     		ldr	r3, .L49+4
 501 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 502 0010 013B     		subs	r3, r3, #1
 503 0012 042B     		cmp	r3, #4
 504 0014 1AD8     		bhi	.L37
 505 0016 DFE803F0 		tbb	[pc, r3]
ARM GAS  /tmp/ccb2RRbl.s 			page 17


 506              	.L41:
 507 001a 09       		.byte	(.L44-.L41)/2
 508 001b 19       		.byte	(.L37-.L41)/2
 509 001c 1A       		.byte	(.L43-.L41)/2
 510 001d 20       		.byte	(.L42-.L41)/2
 511 001e 3A       		.byte	(.L40-.L41)/2
 512 001f 00       		.p2align 1
 513              	.L48:
 272:Core/Src/main.c **** 
 514              		.loc 1 272 5 view .LVU118
 272:Core/Src/main.c **** 
 515              		.loc 1 272 13 is_stmt 0 view .LVU119
 516 0020 2648     		ldr	r0, .L49
 517 0022 FFF7FEFF 		bl	buffer_pop
 518              	.LVL19:
 272:Core/Src/main.c **** 
 519              		.loc 1 272 11 view .LVU120
 520 0026 264B     		ldr	r3, .L49+4
 521 0028 1870     		strb	r0, [r3]
 522 002a EFE7     		b	.L38
 523              	.L44:
 279:Core/Src/main.c ****     seven_segment_display(seven_segment_table[digit]);
 524              		.loc 1 279 5 is_stmt 1 view .LVU121
 279:Core/Src/main.c ****     seven_segment_display(seven_segment_table[digit]);
 525              		.loc 1 279 20 is_stmt 0 view .LVU122
 526 002c 254B     		ldr	r3, .L49+8
 527 002e 1B68     		ldr	r3, [r3]
 279:Core/Src/main.c ****     seven_segment_display(seven_segment_table[digit]);
 528              		.loc 1 279 26 view .LVU123
 529 0030 082B     		cmp	r3, #8
 530 0032 01DC     		bgt	.L46
 279:Core/Src/main.c ****     seven_segment_display(seven_segment_table[digit]);
 531              		.loc 1 279 26 discriminator 1 view .LVU124
 532 0034 0133     		adds	r3, r3, #1
 533 0036 00E0     		b	.L45
 534              	.L46:
 279:Core/Src/main.c ****     seven_segment_display(seven_segment_table[digit]);
 535              		.loc 1 279 26 view .LVU125
 536 0038 0023     		movs	r3, #0
 537              	.L45:
 279:Core/Src/main.c ****     seven_segment_display(seven_segment_table[digit]);
 538              		.loc 1 279 10 discriminator 4 view .LVU126
 539 003a 224A     		ldr	r2, .L49+8
 540 003c 1360     		str	r3, [r2]
 280:Core/Src/main.c **** 
 541              		.loc 1 280 5 is_stmt 1 discriminator 4 view .LVU127
 542 003e 224A     		ldr	r2, .L49+12
 543 0040 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 544 0042 FFF7FEFF 		bl	seven_segment_display
 545              	.LVL20:
 282:Core/Src/main.c ****     break;
 546              		.loc 1 282 5 discriminator 4 view .LVU128
 282:Core/Src/main.c ****     break;
 547              		.loc 1 282 10 is_stmt 0 discriminator 4 view .LVU129
 548 0046 1E4B     		ldr	r3, .L49+4
 549 0048 0022     		movs	r2, #0
 550 004a 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccb2RRbl.s 			page 18


 283:Core/Src/main.c ****   
 551              		.loc 1 283 5 is_stmt 1 discriminator 4 view .LVU130
 552              	.L37:
 318:Core/Src/main.c **** 
 553              		.loc 1 318 1 is_stmt 0 view .LVU131
 554 004c 08BD     		pop	{r3, pc}
 555              	.L43:
 286:Core/Src/main.c ****     event=EVENT_RESET;
 556              		.loc 1 286 5 is_stmt 1 view .LVU132
 557 004e FFF7FEFF 		bl	RS485_Read_Message
 558              	.LVL21:
 287:Core/Src/main.c ****     break;
 559              		.loc 1 287 5 view .LVU133
 287:Core/Src/main.c ****     break;
 560              		.loc 1 287 10 is_stmt 0 view .LVU134
 561 0052 1B4B     		ldr	r3, .L49+4
 562 0054 0022     		movs	r2, #0
 563 0056 1A70     		strb	r2, [r3]
 288:Core/Src/main.c ****   case EVENT_DATA_REQUEST:
 564              		.loc 1 288 5 is_stmt 1 view .LVU135
 565 0058 F8E7     		b	.L37
 566              	.L42:
 291:Core/Src/main.c **** 
 567              		.loc 1 291 7 view .LVU136
 291:Core/Src/main.c **** 
 568              		.loc 1 291 15 is_stmt 0 view .LVU137
 569 005a 1C4A     		ldr	r2, .L49+16
 570 005c 1C4B     		ldr	r3, .L49+20
 571 005e 591C     		adds	r1, r3, #1
 572 0060 1160     		str	r1, [r2]
 293:Core/Src/main.c **** 			*pTX_msg++ = FUNC_READ;
 573              		.loc 1 293 7 is_stmt 1 view .LVU138
 293:Core/Src/main.c **** 			*pTX_msg++ = FUNC_READ;
 574              		.loc 1 293 15 is_stmt 0 view .LVU139
 575 0062 991C     		adds	r1, r3, #2
 576 0064 1160     		str	r1, [r2]
 293:Core/Src/main.c **** 			*pTX_msg++ = FUNC_READ;
 577              		.loc 1 293 18 view .LVU140
 578 0066 1B49     		ldr	r1, .L49+24
 579 0068 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 580 006a 5970     		strb	r1, [r3, #1]
 294:Core/Src/main.c **** 			*pTX_msg++ = digit+'0';
 581              		.loc 1 294 4 is_stmt 1 view .LVU141
 294:Core/Src/main.c **** 			*pTX_msg++ = digit+'0';
 582              		.loc 1 294 12 is_stmt 0 view .LVU142
 583 006c D91C     		adds	r1, r3, #3
 584 006e 1160     		str	r1, [r2]
 294:Core/Src/main.c **** 			*pTX_msg++ = digit+'0';
 585              		.loc 1 294 15 view .LVU143
 586 0070 F221     		movs	r1, #242
 587 0072 9970     		strb	r1, [r3, #2]
 295:Core/Src/main.c ****       RS485_Send_Message();
 588              		.loc 1 295 4 is_stmt 1 view .LVU144
 295:Core/Src/main.c ****       RS485_Send_Message();
 589              		.loc 1 295 22 is_stmt 0 view .LVU145
 590 0074 1349     		ldr	r1, .L49+8
 591 0076 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
ARM GAS  /tmp/ccb2RRbl.s 			page 19


 295:Core/Src/main.c ****       RS485_Send_Message();
 592              		.loc 1 295 12 view .LVU146
 593 0078 181D     		adds	r0, r3, #4
 594 007a 1060     		str	r0, [r2]
 295:Core/Src/main.c ****       RS485_Send_Message();
 595              		.loc 1 295 22 view .LVU147
 596 007c 01F13002 		add	r2, r1, #48
 295:Core/Src/main.c ****       RS485_Send_Message();
 597              		.loc 1 295 15 view .LVU148
 598 0080 DA70     		strb	r2, [r3, #3]
 296:Core/Src/main.c ****       event = EVENT_RESET;
 599              		.loc 1 296 7 is_stmt 1 view .LVU149
 600 0082 FFF7FEFF 		bl	RS485_Send_Message
 601              	.LVL22:
 297:Core/Src/main.c ****      break;
 602              		.loc 1 297 7 view .LVU150
 297:Core/Src/main.c ****      break;
 603              		.loc 1 297 13 is_stmt 0 view .LVU151
 604 0086 0E4B     		ldr	r3, .L49+4
 605 0088 0022     		movs	r2, #0
 606 008a 1A70     		strb	r2, [r3]
 298:Core/Src/main.c **** 
 607              		.loc 1 298 6 is_stmt 1 view .LVU152
 608 008c DEE7     		b	.L37
 609              	.L40:
 302:Core/Src/main.c **** 
 610              		.loc 1 302 7 view .LVU153
 302:Core/Src/main.c **** 
 611              		.loc 1 302 15 is_stmt 0 view .LVU154
 612 008e 0F4A     		ldr	r2, .L49+16
 613 0090 0F4B     		ldr	r3, .L49+20
 614 0092 591C     		adds	r1, r3, #1
 615 0094 1160     		str	r1, [r2]
 304:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 616              		.loc 1 304 7 is_stmt 1 view .LVU155
 304:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 617              		.loc 1 304 15 is_stmt 0 view .LVU156
 618 0096 991C     		adds	r1, r3, #2
 619 0098 1160     		str	r1, [r2]
 304:Core/Src/main.c **** 			*pTX_msg++ = FUNC_WRITE;
 620              		.loc 1 304 18 view .LVU157
 621 009a 0E49     		ldr	r1, .L49+24
 622 009c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 623 009e 5970     		strb	r1, [r3, #1]
 305:Core/Src/main.c **** 			*pTX_msg++ = '0';
 624              		.loc 1 305 4 is_stmt 1 view .LVU158
 305:Core/Src/main.c **** 			*pTX_msg++ = '0';
 625              		.loc 1 305 12 is_stmt 0 view .LVU159
 626 00a0 D91C     		adds	r1, r3, #3
 627 00a2 1160     		str	r1, [r2]
 305:Core/Src/main.c **** 			*pTX_msg++ = '0';
 628              		.loc 1 305 15 view .LVU160
 629 00a4 F121     		movs	r1, #241
 630 00a6 9970     		strb	r1, [r3, #2]
 306:Core/Src/main.c ****       RS485_Send_Message();
 631              		.loc 1 306 4 is_stmt 1 view .LVU161
 306:Core/Src/main.c ****       RS485_Send_Message();
ARM GAS  /tmp/ccb2RRbl.s 			page 20


 632              		.loc 1 306 12 is_stmt 0 view .LVU162
 633 00a8 191D     		adds	r1, r3, #4
 634 00aa 1160     		str	r1, [r2]
 306:Core/Src/main.c ****       RS485_Send_Message();
 635              		.loc 1 306 15 view .LVU163
 636 00ac 3022     		movs	r2, #48
 637 00ae DA70     		strb	r2, [r3, #3]
 307:Core/Src/main.c ****       event = EVENT_RESET;
 638              		.loc 1 307 7 is_stmt 1 view .LVU164
 639 00b0 FFF7FEFF 		bl	RS485_Send_Message
 640              	.LVL23:
 308:Core/Src/main.c ****      break;
 641              		.loc 1 308 7 view .LVU165
 308:Core/Src/main.c ****      break;
 642              		.loc 1 308 13 is_stmt 0 view .LVU166
 643 00b4 024B     		ldr	r3, .L49+4
 644 00b6 0022     		movs	r2, #0
 645 00b8 1A70     		strb	r2, [r3]
 309:Core/Src/main.c **** 
 646              		.loc 1 309 6 is_stmt 1 view .LVU167
 318:Core/Src/main.c **** 
 647              		.loc 1 318 1 is_stmt 0 view .LVU168
 648 00ba C7E7     		b	.L37
 649              	.L50:
 650              		.align	2
 651              	.L49:
 652 00bc 00000000 		.word	.LANCHOR4
 653 00c0 00000000 		.word	.LANCHOR13
 654 00c4 00000000 		.word	.LANCHOR10
 655 00c8 00000000 		.word	.LANCHOR11
 656 00cc 00000000 		.word	.LANCHOR14
 657 00d0 00000000 		.word	.LANCHOR12
 658 00d4 00000000 		.word	.LANCHOR9
 659              		.cfi_endproc
 660              	.LFE70:
 662              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 663              		.align	1
 664              		.global	HAL_TIM_PeriodElapsedCallback
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu softvfp
 670              	HAL_TIM_PeriodElapsedCallback:
 671              	.LVL24:
 672              	.LFB74:
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 396:Core/Src/main.c **** {
 673              		.loc 1 396 1 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 397:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
 398:Core/Src/main.c ****   if (htim == &htim1)
 678              		.loc 1 398 3 view .LVU170
 679              		.loc 1 398 6 is_stmt 0 view .LVU171
ARM GAS  /tmp/ccb2RRbl.s 			page 21


 680 0000 034B     		ldr	r3, .L54
 681 0002 8342     		cmp	r3, r0
 682 0004 00D0     		beq	.L53
 683              	.L51:
 399:Core/Src/main.c ****   {
 400:Core/Src/main.c **** 	  f_timer_10ms=1;
 401:Core/Src/main.c ****   }
 402:Core/Src/main.c ****   
 403:Core/Src/main.c **** }
 684              		.loc 1 403 1 view .LVU172
 685 0006 7047     		bx	lr
 686              	.L53:
 400:Core/Src/main.c ****   }
 687              		.loc 1 400 4 is_stmt 1 view .LVU173
 400:Core/Src/main.c ****   }
 688              		.loc 1 400 16 is_stmt 0 view .LVU174
 689 0008 024B     		ldr	r3, .L54+4
 690 000a 0122     		movs	r2, #1
 691 000c 1A70     		strb	r2, [r3]
 692              		.loc 1 403 1 view .LVU175
 693 000e FAE7     		b	.L51
 694              	.L55:
 695              		.align	2
 696              	.L54:
 697 0010 00000000 		.word	htim1
 698 0014 00000000 		.word	.LANCHOR0
 699              		.cfi_endproc
 700              	.LFE74:
 702              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 703              		.align	1
 704              		.global	HAL_UART_RxCpltCallback
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu softvfp
 710              	HAL_UART_RxCpltCallback:
 711              	.LVL25:
 712              	.LFB75:
 404:Core/Src/main.c **** 
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 408:Core/Src/main.c **** {
 713              		.loc 1 408 1 is_stmt 1 view -0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 409:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** 	if (huart == &huart1)
 717              		.loc 1 411 2 view .LVU177
 718              		.loc 1 411 5 is_stmt 0 view .LVU178
 719 0000 074B     		ldr	r3, .L63
 720 0002 8342     		cmp	r3, r0
 721 0004 00D0     		beq	.L62
 722 0006 7047     		bx	lr
 723              	.L62:
ARM GAS  /tmp/ccb2RRbl.s 			page 22


 408:Core/Src/main.c **** 	//HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 724              		.loc 1 408 1 view .LVU179
 725 0008 10B5     		push	{r4, lr}
 726              	.LCFI5:
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 4, -8
 729              		.cfi_offset 14, -4
 412:Core/Src/main.c **** 	{                      
 413:Core/Src/main.c ****     
 414:Core/Src/main.c ****     buffer_push(&rx_buffer,rx_temp);
 730              		.loc 1 414 5 is_stmt 1 view .LVU180
 731 000a 064C     		ldr	r4, .L63+4
 732 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 733 000e 0648     		ldr	r0, .L63+8
 734              	.LVL26:
 735              		.loc 1 414 5 is_stmt 0 view .LVU181
 736 0010 FFF7FEFF 		bl	buffer_push
 737              	.LVL27:
 415:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 738              		.loc 1 415 3 is_stmt 1 view .LVU182
 739 0014 0122     		movs	r2, #1
 740 0016 2146     		mov	r1, r4
 741 0018 0148     		ldr	r0, .L63
 742 001a FFF7FEFF 		bl	HAL_UART_Receive_IT
 743              	.LVL28:
 416:Core/Src/main.c ****     
 417:Core/Src/main.c ****   }
 418:Core/Src/main.c **** }
 744              		.loc 1 418 1 is_stmt 0 view .LVU183
 745 001e 10BD     		pop	{r4, pc}
 746              	.L64:
 747              		.align	2
 748              	.L63:
 749 0020 00000000 		.word	huart1
 750 0024 00000000 		.word	.LANCHOR15
 751 0028 00000000 		.word	.LANCHOR5
 752              		.cfi_endproc
 753              	.LFE75:
 755              		.section	.text.Error_Handler,"ax",%progbits
 756              		.align	1
 757              		.global	Error_Handler
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu softvfp
 763              	Error_Handler:
 764              	.LFB76:
 419:Core/Src/main.c **** /* USER CODE END 4 */
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** /**
 422:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 423:Core/Src/main.c ****   * @retval None
 424:Core/Src/main.c ****   */
 425:Core/Src/main.c **** void Error_Handler(void)
 426:Core/Src/main.c **** {
 765              		.loc 1 426 1 is_stmt 1 view -0
 766              		.cfi_startproc
ARM GAS  /tmp/ccb2RRbl.s 			page 23


 767              		@ Volatile: function does not return.
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 427:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 428:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 429:Core/Src/main.c ****   __disable_irq();
 771              		.loc 1 429 3 view .LVU185
 772              	.LBB4:
 773              	.LBI4:
 774              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  /tmp/ccb2RRbl.s 			page 24


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccb2RRbl.s 			page 25


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 775              		.loc 2 140 27 view .LVU186
 776              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 777              		.loc 2 142 3 view .LVU187
 778              		.syntax unified
 779              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 780 0000 72B6     		cpsid i
 781              	@ 0 "" 2
 782              		.thumb
 783              		.syntax unified
 784              	.L66:
 785              	.LBE5:
 786              	.LBE4:
 430:Core/Src/main.c ****   while (1)
 787              		.loc 1 430 3 discriminator 1 view .LVU188
 431:Core/Src/main.c ****   {
 432:Core/Src/main.c ****   }
 788              		.loc 1 432 3 discriminator 1 view .LVU189
 430:Core/Src/main.c ****   while (1)
ARM GAS  /tmp/ccb2RRbl.s 			page 26


 789              		.loc 1 430 9 discriminator 1 view .LVU190
 790 0002 FEE7     		b	.L66
 791              		.cfi_endproc
 792              	.LFE76:
 794              		.section	.text.SystemClock_Config,"ax",%progbits
 795              		.align	1
 796              		.global	SystemClock_Config
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 800              		.fpu softvfp
 802              	SystemClock_Config:
 803              	.LFB66:
 189:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 804              		.loc 1 189 1 view -0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 64
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808 0000 00B5     		push	{lr}
 809              	.LCFI6:
 810              		.cfi_def_cfa_offset 4
 811              		.cfi_offset 14, -4
 812 0002 91B0     		sub	sp, sp, #68
 813              	.LCFI7:
 814              		.cfi_def_cfa_offset 72
 190:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 815              		.loc 1 190 3 view .LVU192
 190:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 816              		.loc 1 190 22 is_stmt 0 view .LVU193
 817 0004 2822     		movs	r2, #40
 818 0006 0021     		movs	r1, #0
 819 0008 06A8     		add	r0, sp, #24
 820 000a FFF7FEFF 		bl	memset
 821              	.LVL29:
 191:Core/Src/main.c **** 
 822              		.loc 1 191 3 is_stmt 1 view .LVU194
 191:Core/Src/main.c **** 
 823              		.loc 1 191 22 is_stmt 0 view .LVU195
 824 000e 0023     		movs	r3, #0
 825 0010 0193     		str	r3, [sp, #4]
 826 0012 0293     		str	r3, [sp, #8]
 827 0014 0393     		str	r3, [sp, #12]
 828 0016 0493     		str	r3, [sp, #16]
 829 0018 0593     		str	r3, [sp, #20]
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 830              		.loc 1 196 3 is_stmt 1 view .LVU196
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 831              		.loc 1 196 36 is_stmt 0 view .LVU197
 832 001a 0122     		movs	r2, #1
 833 001c 0692     		str	r2, [sp, #24]
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 834              		.loc 1 197 3 is_stmt 1 view .LVU198
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 835              		.loc 1 197 30 is_stmt 0 view .LVU199
 836 001e 4FF48033 		mov	r3, #65536
 837 0022 0793     		str	r3, [sp, #28]
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /tmp/ccb2RRbl.s 			page 27


 838              		.loc 1 198 3 is_stmt 1 view .LVU200
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 839              		.loc 1 199 3 view .LVU201
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 840              		.loc 1 199 30 is_stmt 0 view .LVU202
 841 0024 0A92     		str	r2, [sp, #40]
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 842              		.loc 1 200 3 is_stmt 1 view .LVU203
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 843              		.loc 1 200 34 is_stmt 0 view .LVU204
 844 0026 0222     		movs	r2, #2
 845 0028 0D92     		str	r2, [sp, #52]
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 846              		.loc 1 201 3 is_stmt 1 view .LVU205
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 847              		.loc 1 201 35 is_stmt 0 view .LVU206
 848 002a 0E93     		str	r3, [sp, #56]
 202:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 849              		.loc 1 202 3 is_stmt 1 view .LVU207
 203:Core/Src/main.c ****   {
 850              		.loc 1 203 3 view .LVU208
 203:Core/Src/main.c ****   {
 851              		.loc 1 203 7 is_stmt 0 view .LVU209
 852 002c 06A8     		add	r0, sp, #24
 853 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 854              	.LVL30:
 203:Core/Src/main.c ****   {
 855              		.loc 1 203 6 view .LVU210
 856 0032 88B9     		cbnz	r0, .L71
 210:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 857              		.loc 1 210 3 is_stmt 1 view .LVU211
 210:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 858              		.loc 1 210 31 is_stmt 0 view .LVU212
 859 0034 0F23     		movs	r3, #15
 860 0036 0193     		str	r3, [sp, #4]
 212:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 861              		.loc 1 212 3 is_stmt 1 view .LVU213
 212:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 862              		.loc 1 212 34 is_stmt 0 view .LVU214
 863 0038 0223     		movs	r3, #2
 864 003a 0293     		str	r3, [sp, #8]
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 865              		.loc 1 213 3 is_stmt 1 view .LVU215
 213:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 866              		.loc 1 213 35 is_stmt 0 view .LVU216
 867 003c 8023     		movs	r3, #128
 868 003e 0393     		str	r3, [sp, #12]
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 869              		.loc 1 214 3 is_stmt 1 view .LVU217
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 870              		.loc 1 214 36 is_stmt 0 view .LVU218
 871 0040 4FF48063 		mov	r3, #1024
 872 0044 0493     		str	r3, [sp, #16]
 215:Core/Src/main.c **** 
 873              		.loc 1 215 3 is_stmt 1 view .LVU219
 215:Core/Src/main.c **** 
 874              		.loc 1 215 36 is_stmt 0 view .LVU220
ARM GAS  /tmp/ccb2RRbl.s 			page 28


 875 0046 0021     		movs	r1, #0
 876 0048 0591     		str	r1, [sp, #20]
 217:Core/Src/main.c ****   {
 877              		.loc 1 217 3 is_stmt 1 view .LVU221
 217:Core/Src/main.c ****   {
 878              		.loc 1 217 7 is_stmt 0 view .LVU222
 879 004a 01A8     		add	r0, sp, #4
 880 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 881              	.LVL31:
 217:Core/Src/main.c ****   {
 882              		.loc 1 217 6 view .LVU223
 883 0050 20B9     		cbnz	r0, .L72
 221:Core/Src/main.c **** 
 884              		.loc 1 221 1 view .LVU224
 885 0052 11B0     		add	sp, sp, #68
 886              	.LCFI8:
 887              		.cfi_remember_state
 888              		.cfi_def_cfa_offset 4
 889              		@ sp needed
 890 0054 5DF804FB 		ldr	pc, [sp], #4
 891              	.L71:
 892              	.LCFI9:
 893              		.cfi_restore_state
 205:Core/Src/main.c ****   }
 894              		.loc 1 205 5 is_stmt 1 view .LVU225
 895 0058 FFF7FEFF 		bl	Error_Handler
 896              	.LVL32:
 897              	.L72:
 219:Core/Src/main.c ****   }
 898              		.loc 1 219 5 view .LVU226
 899 005c FFF7FEFF 		bl	Error_Handler
 900              	.LVL33:
 901              		.cfi_endproc
 902              	.LFE66:
 904              		.section	.text.main,"ax",%progbits
 905              		.align	1
 906              		.global	main
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu softvfp
 912              	main:
 913              	.LFB65:
 116:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 914              		.loc 1 116 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918 0000 38B5     		push	{r3, r4, r5, lr}
 919              	.LCFI10:
 920              		.cfi_def_cfa_offset 16
 921              		.cfi_offset 3, -16
 922              		.cfi_offset 4, -12
 923              		.cfi_offset 5, -8
 924              		.cfi_offset 14, -4
 124:Core/Src/main.c **** 
 925              		.loc 1 124 3 view .LVU228
ARM GAS  /tmp/ccb2RRbl.s 			page 29


 926 0002 FFF7FEFF 		bl	HAL_Init
 927              	.LVL34:
 131:Core/Src/main.c **** 
 928              		.loc 1 131 3 view .LVU229
 929 0006 FFF7FEFF 		bl	SystemClock_Config
 930              	.LVL35:
 138:Core/Src/main.c ****   MX_TIM1_Init();
 931              		.loc 1 138 3 view .LVU230
 932 000a FFF7FEFF 		bl	MX_GPIO_Init
 933              	.LVL36:
 139:Core/Src/main.c ****   MX_USART1_UART_Init();
 934              		.loc 1 139 3 view .LVU231
 935 000e FFF7FEFF 		bl	MX_TIM1_Init
 936              	.LVL37:
 140:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 937              		.loc 1 140 3 view .LVU232
 938 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 939              	.LVL38:
 143:Core/Src/main.c **** 
 940              		.loc 1 143 3 view .LVU233
 941 0016 1248     		ldr	r0, .L76
 942 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 943              	.LVL39:
 151:Core/Src/main.c ****   #endif
 944              		.loc 1 151 3 view .LVU234
 151:Core/Src/main.c ****   #endif
 945              		.loc 1 151 5 is_stmt 0 view .LVU235
 946 001c 1025     		movs	r5, #16
 947 001e 114B     		ldr	r3, .L76+4
 948 0020 1D70     		strb	r5, [r3]
 157:Core/Src/main.c ****   rand = rand & 0x00FF;
 949              		.loc 1 157 3 is_stmt 1 view .LVU236
 157:Core/Src/main.c ****   rand = rand & 0x00FF;
 950              		.loc 1 157 18 is_stmt 0 view .LVU237
 951 0022 FFF7FEFF 		bl	HAL_GetTick
 952              	.LVL40:
 158:Core/Src/main.c ****   state = STATE_WAITING_ADDR;
 953              		.loc 1 158 3 is_stmt 1 view .LVU238
 158:Core/Src/main.c ****   state = STATE_WAITING_ADDR;
 954              		.loc 1 158 8 is_stmt 0 view .LVU239
 955 0026 C4B2     		uxtb	r4, r0
 956              	.LVL41:
 159:Core/Src/main.c ****   event = EVENT_RESET;
 957              		.loc 1 159 3 is_stmt 1 view .LVU240
 159:Core/Src/main.c ****   event = EVENT_RESET;
 958              		.loc 1 159 9 is_stmt 0 view .LVU241
 959 0028 0023     		movs	r3, #0
 960 002a 0F4A     		ldr	r2, .L76+8
 961 002c 1370     		strb	r3, [r2]
 160:Core/Src/main.c ****   digit=16;
 962              		.loc 1 160 3 is_stmt 1 view .LVU242
 160:Core/Src/main.c ****   digit=16;
 963              		.loc 1 160 9 is_stmt 0 view .LVU243
 964 002e 0F4A     		ldr	r2, .L76+12
 965 0030 1370     		strb	r3, [r2]
 161:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 966              		.loc 1 161 3 is_stmt 1 view .LVU244
ARM GAS  /tmp/ccb2RRbl.s 			page 30


 161:Core/Src/main.c ****   seven_segment_display(seven_segment_table[digit]);
 967              		.loc 1 161 8 is_stmt 0 view .LVU245
 968 0032 0F4B     		ldr	r3, .L76+16
 969 0034 1D60     		str	r5, [r3]
 162:Core/Src/main.c ****   
 970              		.loc 1 162 3 is_stmt 1 view .LVU246
 971 0036 0F4B     		ldr	r3, .L76+20
 972 0038 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 973 003a FFF7FEFF 		bl	seven_segment_display
 974              	.LVL42:
 164:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, &rx_temp, 1);
 975              		.loc 1 164 3 view .LVU247
 976 003e 2046     		mov	r0, r4
 977 0040 FFF7FEFF 		bl	HAL_Delay
 978              	.LVL43:
 165:Core/Src/main.c **** 
 979              		.loc 1 165 3 view .LVU248
 980 0044 0122     		movs	r2, #1
 981 0046 0C49     		ldr	r1, .L76+24
 982 0048 0C48     		ldr	r0, .L76+28
 983 004a FFF7FEFF 		bl	HAL_UART_Receive_IT
 984              	.LVL44:
 985              	.L74:
 167:Core/Src/main.c ****   {
 986              		.loc 1 167 3 discriminator 1 view .LVU249
 174:Core/Src/main.c ****       key_read_task();
 987              		.loc 1 174 7 discriminator 1 view .LVU250
 988 004e FFF7FEFF 		bl	task_timer
 989              	.LVL45:
 175:Core/Src/main.c **** 
 990              		.loc 1 175 7 discriminator 1 view .LVU251
 991 0052 FFF7FEFF 		bl	key_read_task
 992              	.LVL46:
 177:Core/Src/main.c ****       
 993              		.loc 1 177 7 discriminator 1 view .LVU252
 994 0056 FFF7FEFF 		bl	RS485_RX_Task
 995              	.LVL47:
 179:Core/Src/main.c ****   }
 996              		.loc 1 179 7 discriminator 1 view .LVU253
 997 005a FFF7FEFF 		bl	main_task
 998              	.LVL48:
 167:Core/Src/main.c ****   {
 999              		.loc 1 167 9 discriminator 1 view .LVU254
 1000 005e F6E7     		b	.L74
 1001              	.L77:
 1002              		.align	2
 1003              	.L76:
 1004 0060 00000000 		.word	htim1
 1005 0064 00000000 		.word	.LANCHOR9
 1006 0068 00000000 		.word	.LANCHOR16
 1007 006c 00000000 		.word	.LANCHOR13
 1008 0070 00000000 		.word	.LANCHOR10
 1009 0074 00000000 		.word	.LANCHOR11
 1010 0078 00000000 		.word	.LANCHOR15
 1011 007c 00000000 		.word	huart1
 1012              		.cfi_endproc
 1013              	.LFE65:
ARM GAS  /tmp/ccb2RRbl.s 			page 31


 1015              		.global	seven_segment_table
 1016              		.global	digit
 1017              		.global	event
 1018              		.global	state
 1019              		.global	pTX_msg
 1020              		.global	pRX_msg
 1021              		.global	RX_msg
 1022              		.global	TX_msg
 1023              		.global	ID
 1024              		.global	event_buffer
 1025              		.global	rx_buffer
 1026              		.global	tx_buffer
 1027              		.global	transmission_f
 1028              		.global	rx_temp
 1029              		.global	read_res
 1030              		.global	curr_event
 1031              		.global	key_value
 1032              		.global	d_timer_30ms
 1033              		.global	f_timer_30ms
 1034              		.global	f_timer_10ms
 1035              		.global	f_read_msg
 1036              		.global	f_busy
 1037              		.section	.bss.ID,"aw",%nobits
 1038              		.set	.LANCHOR9,. + 0
 1041              	ID:
 1042 0000 00       		.space	1
 1043              		.section	.bss.RX_msg,"aw",%nobits
 1044              		.align	2
 1045              		.set	.LANCHOR8,. + 0
 1048              	RX_msg:
 1049 0000 00000000 		.space	4
 1050              		.section	.bss.TX_msg,"aw",%nobits
 1051              		.align	2
 1052              		.set	.LANCHOR12,. + 0
 1055              	TX_msg:
 1056 0000 00000000 		.space	6
 1056      0000
 1057              		.section	.bss.curr_event,"aw",%nobits
 1060              	curr_event:
 1061 0000 00       		.space	1
 1062              		.section	.bss.d_timer_30ms,"aw",%nobits
 1063              		.set	.LANCHOR1,. + 0
 1066              	d_timer_30ms:
 1067 0000 00       		.space	1
 1068              		.section	.bss.digit,"aw",%nobits
 1069              		.align	2
 1070              		.set	.LANCHOR10,. + 0
 1073              	digit:
 1074 0000 00000000 		.space	4
 1075              		.section	.bss.event,"aw",%nobits
 1076              		.set	.LANCHOR13,. + 0
 1079              	event:
 1080 0000 00       		.space	1
 1081              		.section	.bss.event_buffer,"aw",%nobits
 1082              		.align	2
 1083              		.set	.LANCHOR4,. + 0
 1086              	event_buffer:
ARM GAS  /tmp/ccb2RRbl.s 			page 32


 1087 0000 00000000 		.space	66
 1087      00000000 
 1087      00000000 
 1087      00000000 
 1087      00000000 
 1088              		.section	.bss.f_busy,"aw",%nobits
 1091              	f_busy:
 1092 0000 00       		.space	1
 1093              		.section	.bss.f_read_msg,"aw",%nobits
 1094              		.set	.LANCHOR6,. + 0
 1097              	f_read_msg:
 1098 0000 00       		.space	1
 1099              		.section	.bss.f_timer_10ms,"aw",%nobits
 1100              		.set	.LANCHOR0,. + 0
 1103              	f_timer_10ms:
 1104 0000 00       		.space	1
 1105              		.section	.bss.f_timer_30ms,"aw",%nobits
 1106              		.set	.LANCHOR2,. + 0
 1109              	f_timer_30ms:
 1110 0000 00       		.space	1
 1111              		.section	.bss.key_value,"aw",%nobits
 1112              		.set	.LANCHOR3,. + 0
 1115              	key_value:
 1116 0000 00       		.space	1
 1117              		.section	.bss.pRX_msg,"aw",%nobits
 1118              		.align	2
 1119              		.set	.LANCHOR7,. + 0
 1122              	pRX_msg:
 1123 0000 00000000 		.space	4
 1124              		.section	.bss.pTX_msg,"aw",%nobits
 1125              		.align	2
 1126              		.set	.LANCHOR14,. + 0
 1129              	pTX_msg:
 1130 0000 00000000 		.space	4
 1131              		.section	.bss.read_res,"aw",%nobits
 1134              	read_res:
 1135 0000 00       		.space	1
 1136              		.section	.bss.rx_buffer,"aw",%nobits
 1137              		.align	2
 1138              		.set	.LANCHOR5,. + 0
 1141              	rx_buffer:
 1142 0000 00000000 		.space	66
 1142      00000000 
 1142      00000000 
 1142      00000000 
 1142      00000000 
 1143              		.section	.bss.rx_temp,"aw",%nobits
 1144              		.set	.LANCHOR15,. + 0
 1147              	rx_temp:
 1148 0000 00       		.space	1
 1149              		.section	.bss.state,"aw",%nobits
 1150              		.set	.LANCHOR16,. + 0
 1153              	state:
 1154 0000 00       		.space	1
 1155              		.section	.bss.transmission_f,"aw",%nobits
 1158              	transmission_f:
 1159 0000 00       		.space	1
ARM GAS  /tmp/ccb2RRbl.s 			page 33


 1160              		.section	.bss.tx_buffer,"aw",%nobits
 1161              		.align	2
 1164              	tx_buffer:
 1165 0000 00000000 		.space	194
 1165      00000000 
 1165      00000000 
 1165      00000000 
 1165      00000000 
 1166              		.section	.data.seven_segment_table,"aw"
 1167              		.align	2
 1168              		.set	.LANCHOR11,. + 0
 1171              	seven_segment_table:
 1172 0000 3F065B4F 		.ascii	"?\006[Ofm}\007\177o_|X^{q@"
 1172      666D7D07 
 1172      7F6F5F7C 
 1172      585E7B71 
 1172      40
 1173              		.text
 1174              	.Letext0:
 1175              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1176              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1177              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1178              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1179              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1180              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1181              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1182              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1183              		.file 11 "Core/Inc/tim.h"
 1184              		.file 12 "Core/Inc/usart.h"
 1185              		.file 13 "Core/Inc/buffer.h"
 1186              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1187              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1188              		.file 16 "Core/Inc/gpio.h"
 1189              		.file 17 "<built-in>"
ARM GAS  /tmp/ccb2RRbl.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccb2RRbl.s:16     .text.task_timer:0000000000000000 $t
     /tmp/ccb2RRbl.s:24     .text.task_timer:0000000000000000 task_timer
     /tmp/ccb2RRbl.s:72     .text.task_timer:000000000000002c $d
     /tmp/ccb2RRbl.s:79     .text.seven_segment_display:0000000000000000 $t
     /tmp/ccb2RRbl.s:86     .text.seven_segment_display:0000000000000000 seven_segment_display
     /tmp/ccb2RRbl.s:108    .text.seven_segment_display:000000000000000c $d
     /tmp/ccb2RRbl.s:113    .text.key_read_task:0000000000000000 $t
     /tmp/ccb2RRbl.s:120    .text.key_read_task:0000000000000000 key_read_task
     /tmp/ccb2RRbl.s:183    .text.key_read_task:000000000000003c $d
     /tmp/ccb2RRbl.s:191    .text.RS485_RX_Task:0000000000000000 $t
     /tmp/ccb2RRbl.s:198    .text.RS485_RX_Task:0000000000000000 RS485_RX_Task
     /tmp/ccb2RRbl.s:289    .text.RS485_RX_Task:0000000000000060 $d
     /tmp/ccb2RRbl.s:298    .text.RS485_Read_Message:0000000000000000 $t
     /tmp/ccb2RRbl.s:305    .text.RS485_Read_Message:0000000000000000 RS485_Read_Message
     /tmp/ccb2RRbl.s:390    .text.RS485_Read_Message:0000000000000050 $d
     /tmp/ccb2RRbl.s:399    .text.RS485_Send_Message:0000000000000000 $t
     /tmp/ccb2RRbl.s:406    .text.RS485_Send_Message:0000000000000000 RS485_Send_Message
     /tmp/ccb2RRbl.s:464    .text.RS485_Send_Message:0000000000000040 $d
     /tmp/ccb2RRbl.s:471    .text.main_task:0000000000000000 $t
     /tmp/ccb2RRbl.s:478    .text.main_task:0000000000000000 main_task
     /tmp/ccb2RRbl.s:507    .text.main_task:000000000000001a $d
     /tmp/ccb2RRbl.s:652    .text.main_task:00000000000000bc $d
     /tmp/ccb2RRbl.s:663    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccb2RRbl.s:670    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccb2RRbl.s:697    .text.HAL_TIM_PeriodElapsedCallback:0000000000000010 $d
     /tmp/ccb2RRbl.s:703    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccb2RRbl.s:710    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccb2RRbl.s:749    .text.HAL_UART_RxCpltCallback:0000000000000020 $d
     /tmp/ccb2RRbl.s:756    .text.Error_Handler:0000000000000000 $t
     /tmp/ccb2RRbl.s:763    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccb2RRbl.s:795    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccb2RRbl.s:802    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccb2RRbl.s:905    .text.main:0000000000000000 $t
     /tmp/ccb2RRbl.s:912    .text.main:0000000000000000 main
     /tmp/ccb2RRbl.s:1004   .text.main:0000000000000060 $d
     /tmp/ccb2RRbl.s:1171   .data.seven_segment_table:0000000000000000 seven_segment_table
     /tmp/ccb2RRbl.s:1073   .bss.digit:0000000000000000 digit
     /tmp/ccb2RRbl.s:1079   .bss.event:0000000000000000 event
     /tmp/ccb2RRbl.s:1153   .bss.state:0000000000000000 state
     /tmp/ccb2RRbl.s:1129   .bss.pTX_msg:0000000000000000 pTX_msg
     /tmp/ccb2RRbl.s:1122   .bss.pRX_msg:0000000000000000 pRX_msg
     /tmp/ccb2RRbl.s:1048   .bss.RX_msg:0000000000000000 RX_msg
     /tmp/ccb2RRbl.s:1055   .bss.TX_msg:0000000000000000 TX_msg
     /tmp/ccb2RRbl.s:1041   .bss.ID:0000000000000000 ID
     /tmp/ccb2RRbl.s:1086   .bss.event_buffer:0000000000000000 event_buffer
     /tmp/ccb2RRbl.s:1141   .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/ccb2RRbl.s:1164   .bss.tx_buffer:0000000000000000 tx_buffer
     /tmp/ccb2RRbl.s:1158   .bss.transmission_f:0000000000000000 transmission_f
     /tmp/ccb2RRbl.s:1147   .bss.rx_temp:0000000000000000 rx_temp
     /tmp/ccb2RRbl.s:1134   .bss.read_res:0000000000000000 read_res
     /tmp/ccb2RRbl.s:1060   .bss.curr_event:0000000000000000 curr_event
     /tmp/ccb2RRbl.s:1115   .bss.key_value:0000000000000000 key_value
     /tmp/ccb2RRbl.s:1066   .bss.d_timer_30ms:0000000000000000 d_timer_30ms
     /tmp/ccb2RRbl.s:1109   .bss.f_timer_30ms:0000000000000000 f_timer_30ms
     /tmp/ccb2RRbl.s:1103   .bss.f_timer_10ms:0000000000000000 f_timer_10ms
ARM GAS  /tmp/ccb2RRbl.s 			page 35


     /tmp/ccb2RRbl.s:1097   .bss.f_read_msg:0000000000000000 f_read_msg
     /tmp/ccb2RRbl.s:1091   .bss.f_busy:0000000000000000 f_busy
     /tmp/ccb2RRbl.s:1042   .bss.ID:0000000000000000 $d
     /tmp/ccb2RRbl.s:1044   .bss.RX_msg:0000000000000000 $d
     /tmp/ccb2RRbl.s:1051   .bss.TX_msg:0000000000000000 $d
     /tmp/ccb2RRbl.s:1061   .bss.curr_event:0000000000000000 $d
     /tmp/ccb2RRbl.s:1067   .bss.d_timer_30ms:0000000000000000 $d
     /tmp/ccb2RRbl.s:1069   .bss.digit:0000000000000000 $d
     /tmp/ccb2RRbl.s:1080   .bss.event:0000000000000000 $d
     /tmp/ccb2RRbl.s:1082   .bss.event_buffer:0000000000000000 $d
     /tmp/ccb2RRbl.s:1092   .bss.f_busy:0000000000000000 $d
     /tmp/ccb2RRbl.s:1098   .bss.f_read_msg:0000000000000000 $d
     /tmp/ccb2RRbl.s:1104   .bss.f_timer_10ms:0000000000000000 $d
     /tmp/ccb2RRbl.s:1110   .bss.f_timer_30ms:0000000000000000 $d
     /tmp/ccb2RRbl.s:1116   .bss.key_value:0000000000000000 $d
     /tmp/ccb2RRbl.s:1118   .bss.pRX_msg:0000000000000000 $d
     /tmp/ccb2RRbl.s:1125   .bss.pTX_msg:0000000000000000 $d
     /tmp/ccb2RRbl.s:1135   .bss.read_res:0000000000000000 $d
     /tmp/ccb2RRbl.s:1137   .bss.rx_buffer:0000000000000000 $d
     /tmp/ccb2RRbl.s:1148   .bss.rx_temp:0000000000000000 $d
     /tmp/ccb2RRbl.s:1154   .bss.state:0000000000000000 $d
     /tmp/ccb2RRbl.s:1159   .bss.transmission_f:0000000000000000 $d
     /tmp/ccb2RRbl.s:1161   .bss.tx_buffer:0000000000000000 $d
     /tmp/ccb2RRbl.s:1167   .data.seven_segment_table:0000000000000000 $d
     /tmp/ccb2RRbl.s:512    .text.main_task:000000000000001f $d
     /tmp/ccb2RRbl.s:512    .text.main_task:0000000000000020 $t

UNDEFINED SYMBOLS
buffer_push
HAL_GPIO_WritePin
HAL_UART_Transmit
huart1
buffer_pop
htim1
HAL_UART_Receive_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_USART1_UART_Init
HAL_TIM_Base_Start_IT
HAL_GetTick
HAL_Delay
